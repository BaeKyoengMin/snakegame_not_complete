
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004f6  00800100  00006290  00006324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006290  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000005cc  008005f6  008005f6  0000681a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000681a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006878  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000318  00000000  00000000  000068b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000079ab  00000000  00000000  00006bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e53  00000000  00000000  0000e57b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004611  00000000  00000000  0000f3ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000e54  00000000  00000000  000139e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c0a  00000000  00000000  00014834  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000682e  00000000  00000000  0001543e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004f8  00000000  00000000  0001bc6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f5 c1       	rjmp	.+1002   	; 0x3ec <__ctors_end>
       2:	00 00       	nop
       4:	12 c2       	rjmp	.+1060   	; 0x42a <__bad_interrupt>
       6:	00 00       	nop
       8:	10 c2       	rjmp	.+1056   	; 0x42a <__bad_interrupt>
       a:	00 00       	nop
       c:	0e c2       	rjmp	.+1052   	; 0x42a <__bad_interrupt>
       e:	00 00       	nop
      10:	0c c2       	rjmp	.+1048   	; 0x42a <__bad_interrupt>
      12:	00 00       	nop
      14:	0a c2       	rjmp	.+1044   	; 0x42a <__bad_interrupt>
      16:	00 00       	nop
      18:	08 c2       	rjmp	.+1040   	; 0x42a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	06 c2       	rjmp	.+1036   	; 0x42a <__bad_interrupt>
      1e:	00 00       	nop
      20:	04 c2       	rjmp	.+1032   	; 0x42a <__bad_interrupt>
      22:	00 00       	nop
      24:	02 c2       	rjmp	.+1028   	; 0x42a <__bad_interrupt>
      26:	00 00       	nop
      28:	0c 94 bc 0c 	jmp	0x1978	; 0x1978 <__vector_10>
      2c:	fe c1       	rjmp	.+1020   	; 0x42a <__bad_interrupt>
      2e:	00 00       	nop
      30:	fc c1       	rjmp	.+1016   	; 0x42a <__bad_interrupt>
      32:	00 00       	nop
      34:	fa c1       	rjmp	.+1012   	; 0x42a <__bad_interrupt>
      36:	00 00       	nop
      38:	f8 c1       	rjmp	.+1008   	; 0x42a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f6 c1       	rjmp	.+1004   	; 0x42a <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 7a 0c 	jmp	0x18f4	; 0x18f4 <__vector_16>
      44:	f2 c1       	rjmp	.+996    	; 0x42a <__bad_interrupt>
      46:	00 00       	nop
      48:	f0 c1       	rjmp	.+992    	; 0x42a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ee c1       	rjmp	.+988    	; 0x42a <__bad_interrupt>
      4e:	00 00       	nop
      50:	ec c1       	rjmp	.+984    	; 0x42a <__bad_interrupt>
      52:	00 00       	nop
      54:	ea c1       	rjmp	.+980    	; 0x42a <__bad_interrupt>
      56:	00 00       	nop
      58:	e8 c1       	rjmp	.+976    	; 0x42a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e6 c1       	rjmp	.+972    	; 0x42a <__bad_interrupt>
      5e:	00 00       	nop
      60:	e4 c1       	rjmp	.+968    	; 0x42a <__bad_interrupt>
      62:	00 00       	nop
      64:	e2 c1       	rjmp	.+964    	; 0x42a <__bad_interrupt>
      66:	00 00       	nop
      68:	e0 c1       	rjmp	.+960    	; 0x42a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	de c1       	rjmp	.+956    	; 0x42a <__bad_interrupt>
      6e:	00 00       	nop
      70:	dc c1       	rjmp	.+952    	; 0x42a <__bad_interrupt>
      72:	00 00       	nop
      74:	da c1       	rjmp	.+948    	; 0x42a <__bad_interrupt>
      76:	00 00       	nop
      78:	d8 c1       	rjmp	.+944    	; 0x42a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d6 c1       	rjmp	.+940    	; 0x42a <__bad_interrupt>
      7e:	00 00       	nop
      80:	d4 c1       	rjmp	.+936    	; 0x42a <__bad_interrupt>
      82:	00 00       	nop
      84:	d2 c1       	rjmp	.+932    	; 0x42a <__bad_interrupt>
      86:	00 00       	nop
      88:	d0 c1       	rjmp	.+928    	; 0x42a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	05 a8       	ldd	r0, Z+53	; 0x35
      8e:	4c cd       	rjmp	.-1384   	; 0xfffffb28 <__eeprom_end+0xff7efb28>
      90:	b2 d4       	rcall	.+2404   	; 0x9f6 <g_line+0x58>
      92:	4e b9       	out	0x0e, r20	; 14
      94:	38 36       	cpi	r19, 0x68	; 104
      96:	a9 02       	muls	r26, r25
      98:	0c 50       	subi	r16, 0x0C	; 12
      9a:	b9 91       	ld	r27, Y+
      9c:	86 88       	ldd	r8, Z+22	; 0x16
      9e:	08 3c       	cpi	r16, 0xC8	; 200
      a0:	a6 aa       	std	Z+54, r10	; 0x36
      a2:	aa 2a       	or	r10, r26
      a4:	be 00       	.word	0x00be	; ????
      a6:	00 00       	nop
      a8:	80 3f       	cpi	r24, 0xF0	; 240

000000aa <__trampolines_end>:
      aa:	6e 61       	ori	r22, 0x1E	; 30
      ac:	6e 00       	.word	0x006e	; ????

000000ae <__c.2332>:
      ae:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      be:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      ce:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      de:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ee:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      fe:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     10e:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     11e:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     12e:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     13e:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     14e:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     15e:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     16e:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     17e:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     18e:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     19e:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ac <Font5x8>:
     1ac:	05 00 00 00 00 00 05 00 00 5f 00 00 05 00 07 00     ........._......
     1bc:	07 00 05 04 0c 1c 0c 04 05 80 80 80 80 80 05 23     ...............#
     1cc:	13 08 64 62 05 36 49 56 20 50 05 08 07 03 00 00     ..db.6IV P......
     1dc:	05 00 1c 22 41 00 05 00 41 22 1c 00 05 14 08 3e     ..."A...A".....>
     1ec:	08 14 05 08 08 3e 08 08 05 00 b0 70 00 00 05 08     .....>.....p....
     1fc:	08 08 08 08 05 00 60 60 00 00 05 20 10 08 04 02     ......``... ....
     20c:	05 3e 51 49 45 3e 05 00 42 7f 40 00 05 72 49 49     .>QIE>..B.@..rII
     21c:	49 46 05 21 41 49 4d 33 05 18 14 12 7f 10 05 27     IF.!AIM3.......'
     22c:	45 45 45 39 05 3c 4a 49 49 31 05 41 21 11 09 07     EEE9.<JII1.A!...
     23c:	05 36 49 49 49 36 05 46 49 49 29 1e 05 00 00 14     .6III6.FII).....
     24c:	00 00 05 00 40 34 00 00 05 1c 3e 3e 3e 1c 05 14     ....@4....>>>...
     25c:	14 14 14 14 05 1c 22 22 22 1c 05 02 01 59 09 06     ......"""....Y..
     26c:	05 10 18 1c 18 10 05 7c 12 11 12 7c 05 7f 49 49     .......|...|..II
     27c:	49 36 05 3e 41 41 41 22 05 7f 41 41 41 3e 05 7f     I6.>AAA"..AAA>..
     28c:	49 49 49 49 05 7f 09 09 09 09 05 3e 41 41 51 73     IIII.......>AAQs
     29c:	05 7f 08 08 08 7f 05 00 41 7f 41 00 05 20 40 41     ........A.A.. @A
     2ac:	3f 01 05 7f 08 14 22 41 05 7f 40 40 40 40 05 7f     ?....."A..@@@@..
     2bc:	02 0c 02 7f 05 7f 04 08 10 7f 05 3e 41 41 41 3e     ...........>AAA>
     2cc:	05 7f 09 09 09 06 05 3e 41 51 21 5e 05 7f 09 19     .......>AQ!^....
     2dc:	29 46 05 26 49 49 49 32 05 01 01 7f 01 01 05 3f     )F.&III2.......?
     2ec:	40 40 40 3f 05 1f 20 40 20 1f 05 3f 40 38 40 3f     @@@?.. @ ..?@8@?
     2fc:	05 63 14 08 14 63 05 03 04 78 04 03 05 61 51 49     .c...c...x...aQI
     30c:	45 43 05 00 7f 41 41 00 05 02 04 08 10 20 05 00     EC...AA...... ..
     31c:	41 41 7f 00 05 00 06 09 09 06 05 40 40 40 40 40     AA.........@@@@@
     32c:	05 07 0b 00 00 00 05 20 54 54 78 40 05 7f 28 44     ....... TTx@..(D
     33c:	44 38 05 38 44 44 44 28 05 38 44 44 28 7f 05 38     D8.8DDD(.8DD(..8
     34c:	54 54 54 18 05 00 08 7e 09 02 05 18 a4 a4 9c 78     TTT....~.......x
     35c:	05 7f 08 04 04 78 05 00 44 7d 40 00 05 20 40 40     .....x..D}@.. @@
     36c:	3d 00 05 7f 10 28 44 00 05 00 41 7f 40 00 05 7c     =....(D...A.@..|
     37c:	04 78 04 78 05 7c 08 04 04 78 05 38 44 44 44 38     .x.x.|...x.8DDD8
     38c:	05 fc 18 24 24 18 05 18 24 24 18 fc 05 7c 08 04     ...$$...$$...|..
     39c:	04 08 05 48 54 54 54 24 05 04 04 3f 44 24 05 3c     ...HTTT$...?D$.<
     3ac:	40 40 20 7c 05 1c 20 40 20 1c 05 3c 40 30 40 3c     @@ |.. @ ..<@0@<
     3bc:	05 44 28 10 28 44 05 4c 90 90 90 7c 05 44 64 54     .D(.(D.L...|.DdT
     3cc:	4c 44 05 00 08 36 41 00 05 00 00 77 00 00 05 00     LD...6A....w....
     3dc:	41 36 08 00 05 04 02 04 08 04 05 00 7f 41 7f 00     A6...........A..

000003ec <__ctors_end>:
     3ec:	11 24       	eor	r1, r1
     3ee:	1f be       	out	0x3f, r1	; 63
     3f0:	cf ef       	ldi	r28, 0xFF	; 255
     3f2:	d0 e1       	ldi	r29, 0x10	; 16
     3f4:	de bf       	out	0x3e, r29	; 62
     3f6:	cd bf       	out	0x3d, r28	; 61

000003f8 <__do_copy_data>:
     3f8:	15 e0       	ldi	r17, 0x05	; 5
     3fa:	a0 e0       	ldi	r26, 0x00	; 0
     3fc:	b1 e0       	ldi	r27, 0x01	; 1
     3fe:	e0 e9       	ldi	r30, 0x90	; 144
     400:	f2 e6       	ldi	r31, 0x62	; 98
     402:	00 e0       	ldi	r16, 0x00	; 0
     404:	0b bf       	out	0x3b, r16	; 59
     406:	02 c0       	rjmp	.+4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     408:	07 90       	elpm	r0, Z+
     40a:	0d 92       	st	X+, r0
     40c:	a6 3f       	cpi	r26, 0xF6	; 246
     40e:	b1 07       	cpc	r27, r17
     410:	d9 f7       	brne	.-10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>

00000412 <__do_clear_bss>:
     412:	2b e0       	ldi	r18, 0x0B	; 11
     414:	a6 ef       	ldi	r26, 0xF6	; 246
     416:	b5 e0       	ldi	r27, 0x05	; 5
     418:	01 c0       	rjmp	.+2      	; 0x41c <.do_clear_bss_start>

0000041a <.do_clear_bss_loop>:
     41a:	1d 92       	st	X+, r1

0000041c <.do_clear_bss_start>:
     41c:	a2 3c       	cpi	r26, 0xC2	; 194
     41e:	b2 07       	cpc	r27, r18
     420:	e1 f7       	brne	.-8      	; 0x41a <.do_clear_bss_loop>
     422:	0e 94 6c 28 	call	0x50d8	; 0x50d8 <main>
     426:	0c 94 46 31 	jmp	0x628c	; 0x628c <_exit>

0000042a <__bad_interrupt>:
     42a:	ea cd       	rjmp	.-1068   	; 0x0 <__vectors>

0000042c <GLCD_SelectChip>:
	return 1;												
	if (status == 0x20)										
	return 2;												
	else
	return 3;		
}
     42c:	81 11       	cpse	r24, r1
     42e:	03 c0       	rjmp	.+6      	; 0x436 <GLCD_SelectChip+0xa>
     430:	c5 98       	cbi	0x18, 5	; 24
     432:	c4 9a       	sbi	0x18, 4	; 24
     434:	08 95       	ret
     436:	81 30       	cpi	r24, 0x01	; 1
     438:	19 f4       	brne	.+6      	; 0x440 <GLCD_SelectChip+0x14>
     43a:	c4 98       	cbi	0x18, 4	; 24
     43c:	c5 9a       	sbi	0x18, 5	; 24
     43e:	08 95       	ret
     440:	c4 9a       	sbi	0x18, 4	; 24
     442:	c5 9a       	sbi	0x18, 5	; 24
     444:	08 95       	ret

00000446 <GLCD_WaitBusy>:
     446:	f2 df       	rcall	.-28     	; 0x42c <GLCD_SelectChip>
     448:	d7 98       	cbi	0x1a, 7	; 26
     44a:	c2 98       	cbi	0x18, 2	; 24
     44c:	c1 9a       	sbi	0x18, 1	; 24
     44e:	c0 98       	cbi	0x18, 0	; 24
     450:	85 e0       	ldi	r24, 0x05	; 5
     452:	8a 95       	dec	r24
     454:	f1 f7       	brne	.-4      	; 0x452 <GLCD_WaitBusy+0xc>
     456:	00 00       	nop
     458:	c0 9a       	sbi	0x18, 0	; 24
     45a:	95 e0       	ldi	r25, 0x05	; 5
     45c:	9a 95       	dec	r25
     45e:	f1 f7       	brne	.-4      	; 0x45c <GLCD_WaitBusy+0x16>
     460:	00 00       	nop
     462:	89 b3       	in	r24, 0x19	; 25
     464:	c0 98       	cbi	0x18, 0	; 24
     466:	9a e2       	ldi	r25, 0x2A	; 42
     468:	9a 95       	dec	r25
     46a:	f1 f7       	brne	.-4      	; 0x468 <GLCD_WaitBusy+0x22>
     46c:	00 c0       	rjmp	.+0      	; 0x46e <GLCD_WaitBusy+0x28>
     46e:	88 23       	and	r24, r24
     470:	9c f3       	brlt	.-26     	; 0x458 <GLCD_WaitBusy+0x12>
     472:	c1 98       	cbi	0x18, 1	; 24
     474:	d7 9a       	sbi	0x1a, 7	; 26
     476:	08 95       	ret

00000478 <GLCD_Send>:
     478:	80 ff       	sbrs	r24, 0
     47a:	02 c0       	rjmp	.+4      	; 0x480 <GLCD_Send+0x8>
     47c:	d8 9a       	sbi	0x1b, 0	; 27
     47e:	01 c0       	rjmp	.+2      	; 0x482 <GLCD_Send+0xa>
     480:	d8 98       	cbi	0x1b, 0	; 27
     482:	81 ff       	sbrs	r24, 1
     484:	02 c0       	rjmp	.+4      	; 0x48a <GLCD_Send+0x12>
     486:	d9 9a       	sbi	0x1b, 1	; 27
     488:	01 c0       	rjmp	.+2      	; 0x48c <GLCD_Send+0x14>
     48a:	d9 98       	cbi	0x1b, 1	; 27
     48c:	82 ff       	sbrs	r24, 2
     48e:	02 c0       	rjmp	.+4      	; 0x494 <GLCD_Send+0x1c>
     490:	da 9a       	sbi	0x1b, 2	; 27
     492:	01 c0       	rjmp	.+2      	; 0x496 <GLCD_Send+0x1e>
     494:	da 98       	cbi	0x1b, 2	; 27
     496:	83 ff       	sbrs	r24, 3
     498:	02 c0       	rjmp	.+4      	; 0x49e <GLCD_Send+0x26>
     49a:	db 9a       	sbi	0x1b, 3	; 27
     49c:	01 c0       	rjmp	.+2      	; 0x4a0 <GLCD_Send+0x28>
     49e:	db 98       	cbi	0x1b, 3	; 27
     4a0:	84 ff       	sbrs	r24, 4
     4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <GLCD_Send+0x30>
     4a4:	dc 9a       	sbi	0x1b, 4	; 27
     4a6:	01 c0       	rjmp	.+2      	; 0x4aa <GLCD_Send+0x32>
     4a8:	dc 98       	cbi	0x1b, 4	; 27
     4aa:	85 ff       	sbrs	r24, 5
     4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <GLCD_Send+0x3a>
     4ae:	dd 9a       	sbi	0x1b, 5	; 27
     4b0:	01 c0       	rjmp	.+2      	; 0x4b4 <GLCD_Send+0x3c>
     4b2:	dd 98       	cbi	0x1b, 5	; 27
     4b4:	86 ff       	sbrs	r24, 6
     4b6:	02 c0       	rjmp	.+4      	; 0x4bc <GLCD_Send+0x44>
     4b8:	de 9a       	sbi	0x1b, 6	; 27
     4ba:	01 c0       	rjmp	.+2      	; 0x4be <GLCD_Send+0x46>
     4bc:	de 98       	cbi	0x1b, 6	; 27
     4be:	88 23       	and	r24, r24
     4c0:	14 f4       	brge	.+4      	; 0x4c6 <GLCD_Send+0x4e>
     4c2:	df 9a       	sbi	0x1b, 7	; 27
     4c4:	01 c0       	rjmp	.+2      	; 0x4c8 <GLCD_Send+0x50>
     4c6:	df 98       	cbi	0x1b, 7	; 27
     4c8:	c0 9a       	sbi	0x18, 0	; 24
     4ca:	85 e0       	ldi	r24, 0x05	; 5
     4cc:	8a 95       	dec	r24
     4ce:	f1 f7       	brne	.-4      	; 0x4cc <GLCD_Send+0x54>
     4d0:	00 00       	nop
     4d2:	c0 98       	cbi	0x18, 0	; 24
     4d4:	85 e0       	ldi	r24, 0x05	; 5
     4d6:	8a 95       	dec	r24
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <GLCD_Send+0x5e>
     4da:	00 00       	nop
     4dc:	08 95       	ret

000004de <GLCD_SendCommand>:
     4de:	cf 93       	push	r28
     4e0:	df 93       	push	r29
     4e2:	d8 2f       	mov	r29, r24
     4e4:	c6 2f       	mov	r28, r22
     4e6:	62 30       	cpi	r22, 0x02	; 2
     4e8:	19 f0       	breq	.+6      	; 0x4f0 <GLCD_SendCommand+0x12>
     4ea:	86 2f       	mov	r24, r22
     4ec:	ac df       	rcall	.-168    	; 0x446 <GLCD_WaitBusy>
     4ee:	04 c0       	rjmp	.+8      	; 0x4f8 <GLCD_SendCommand+0x1a>
     4f0:	80 e0       	ldi	r24, 0x00	; 0
     4f2:	a9 df       	rcall	.-174    	; 0x446 <GLCD_WaitBusy>
     4f4:	81 e0       	ldi	r24, 0x01	; 1
     4f6:	a7 df       	rcall	.-178    	; 0x446 <GLCD_WaitBusy>
     4f8:	8c 2f       	mov	r24, r28
     4fa:	98 df       	rcall	.-208    	; 0x42c <GLCD_SelectChip>
     4fc:	85 e3       	ldi	r24, 0x35	; 53
     4fe:	8a 95       	dec	r24
     500:	f1 f7       	brne	.-4      	; 0x4fe <GLCD_SendCommand+0x20>
     502:	00 00       	nop
     504:	c2 98       	cbi	0x18, 2	; 24
     506:	85 e3       	ldi	r24, 0x35	; 53
     508:	8a 95       	dec	r24
     50a:	f1 f7       	brne	.-4      	; 0x508 <GLCD_SendCommand+0x2a>
     50c:	00 00       	nop
     50e:	c1 98       	cbi	0x18, 1	; 24
     510:	8d 2f       	mov	r24, r29
     512:	b2 df       	rcall	.-156    	; 0x478 <GLCD_Send>
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <GLCD_SendData>:
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	d8 2f       	mov	r29, r24
     520:	c6 2f       	mov	r28, r22
     522:	62 30       	cpi	r22, 0x02	; 2
     524:	19 f0       	breq	.+6      	; 0x52c <GLCD_SendData+0x12>
     526:	86 2f       	mov	r24, r22
     528:	8e df       	rcall	.-228    	; 0x446 <GLCD_WaitBusy>
     52a:	04 c0       	rjmp	.+8      	; 0x534 <GLCD_SendData+0x1a>
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	8b df       	rcall	.-234    	; 0x446 <GLCD_WaitBusy>
     530:	81 e0       	ldi	r24, 0x01	; 1
     532:	89 df       	rcall	.-238    	; 0x446 <GLCD_WaitBusy>
     534:	8c 2f       	mov	r24, r28
     536:	7a df       	rcall	.-268    	; 0x42c <GLCD_SelectChip>
     538:	c2 9a       	sbi	0x18, 2	; 24
     53a:	85 e3       	ldi	r24, 0x35	; 53
     53c:	8a 95       	dec	r24
     53e:	f1 f7       	brne	.-4      	; 0x53c <GLCD_SendData+0x22>
     540:	00 00       	nop
     542:	c1 98       	cbi	0x18, 1	; 24
     544:	85 e3       	ldi	r24, 0x35	; 53
     546:	8a 95       	dec	r24
     548:	f1 f7       	brne	.-4      	; 0x546 <GLCD_SendData+0x2c>
     54a:	00 00       	nop
     54c:	80 91 41 07 	lds	r24, 0x0741	; 0x800741 <__GLCD+0x2>
     550:	81 30       	cpi	r24, 0x01	; 1
     552:	b1 f0       	breq	.+44     	; 0x580 <GLCD_SendData+0x66>
     554:	8d 2f       	mov	r24, r29
     556:	80 95       	com	r24
     558:	8f df       	rcall	.-226    	; 0x478 <GLCD_Send>
     55a:	ef e3       	ldi	r30, 0x3F	; 63
     55c:	f7 e0       	ldi	r31, 0x07	; 7
     55e:	80 81       	ld	r24, Z
     560:	91 e0       	ldi	r25, 0x01	; 1
     562:	98 0f       	add	r25, r24
     564:	90 83       	st	Z, r25
     566:	90 34       	cpi	r25, 0x40	; 64
     568:	29 f4       	brne	.+10     	; 0x574 <GLCD_SendData+0x5a>
     56a:	8f 53       	subi	r24, 0x3F	; 63
     56c:	61 e0       	ldi	r22, 0x01	; 1
     56e:	80 64       	ori	r24, 0x40	; 64
     570:	b6 df       	rcall	.-148    	; 0x4de <GLCD_SendCommand>
     572:	11 c0       	rjmp	.+34     	; 0x596 <GLCD_SendData+0x7c>
     574:	99 23       	and	r25, r25
     576:	7c f4       	brge	.+30     	; 0x596 <GLCD_SendData+0x7c>
     578:	8f e7       	ldi	r24, 0x7F	; 127
     57a:	80 93 3f 07 	sts	0x073F, r24	; 0x80073f <__GLCD>
     57e:	0b c0       	rjmp	.+22     	; 0x596 <GLCD_SendData+0x7c>
     580:	8d 2f       	mov	r24, r29
     582:	7a df       	rcall	.-268    	; 0x478 <GLCD_Send>
     584:	ef e3       	ldi	r30, 0x3F	; 63
     586:	f7 e0       	ldi	r31, 0x07	; 7
     588:	80 81       	ld	r24, Z
     58a:	91 e0       	ldi	r25, 0x01	; 1
     58c:	98 0f       	add	r25, r24
     58e:	90 83       	st	Z, r25
     590:	90 34       	cpi	r25, 0x40	; 64
     592:	81 f7       	brne	.-32     	; 0x574 <GLCD_SendData+0x5a>
     594:	ea cf       	rjmp	.-44     	; 0x56a <GLCD_SendData+0x50>
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	08 95       	ret

0000059c <GLCD_GotoX>:
     59c:	88 23       	and	r24, r24
     59e:	14 f0       	brlt	.+4      	; 0x5a4 <GLCD_GotoX+0x8>
     5a0:	80 93 3f 07 	sts	0x073F, r24	; 0x80073f <__GLCD>
     5a4:	08 95       	ret

000005a6 <GLCD_GotoY>:
     5a6:	90 91 40 07 	lds	r25, 0x0740	; 0x800740 <__GLCD+0x1>
     5aa:	90 34       	cpi	r25, 0x40	; 64
     5ac:	10 f4       	brcc	.+4      	; 0x5b2 <GLCD_GotoY+0xc>
     5ae:	80 93 40 07 	sts	0x0740, r24	; 0x800740 <__GLCD+0x1>
     5b2:	08 95       	ret

000005b4 <g_render>:
     5b4:	cf 92       	push	r12
     5b6:	df 92       	push	r13
     5b8:	ef 92       	push	r14
     5ba:	ff 92       	push	r15
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	d1 2c       	mov	r13, r1
     5c6:	0f e3       	ldi	r16, 0x3F	; 63
     5c8:	17 e0       	ldi	r17, 0x07	; 7
     5ca:	c1 2c       	mov	r12, r1
     5cc:	ff 24       	eor	r15, r15
     5ce:	f3 94       	inc	r15
     5d0:	ec 2c       	mov	r14, r12
     5d2:	f8 01       	movw	r30, r16
     5d4:	c0 82       	st	Z, r12
     5d6:	6c 2d       	mov	r22, r12
     5d8:	80 e4       	ldi	r24, 0x40	; 64
     5da:	81 df       	rcall	.-254    	; 0x4de <GLCD_SendCommand>
     5dc:	ff e3       	ldi	r31, 0x3F	; 63
     5de:	fd 15       	cp	r31, r13
     5e0:	50 f1       	brcs	.+84     	; 0x636 <g_render+0x82>
     5e2:	f8 01       	movw	r30, r16
     5e4:	d1 82       	std	Z+1, r13	; 0x01
     5e6:	62 e0       	ldi	r22, 0x02	; 2
     5e8:	8d 2d       	mov	r24, r13
     5ea:	86 95       	lsr	r24
     5ec:	86 95       	lsr	r24
     5ee:	86 95       	lsr	r24
     5f0:	88 6b       	ori	r24, 0xB8	; 184
     5f2:	75 df       	rcall	.-278    	; 0x4de <GLCD_SendCommand>
     5f4:	20 c0       	rjmp	.+64     	; 0x636 <g_render+0x82>
     5f6:	6f 2d       	mov	r22, r15
     5f8:	c0 34       	cpi	r28, 0x40	; 64
     5fa:	08 f4       	brcc	.+2      	; 0x5fe <g_render+0x4a>
     5fc:	6e 2d       	mov	r22, r14
     5fe:	f8 01       	movw	r30, r16
     600:	81 81       	ldd	r24, Z+1	; 0x01
     602:	86 95       	lsr	r24
     604:	86 95       	lsr	r24
     606:	86 95       	lsr	r24
     608:	fe 01       	movw	r30, r28
     60a:	ee 0f       	add	r30, r30
     60c:	ff 1f       	adc	r31, r31
     60e:	ee 0f       	add	r30, r30
     610:	ff 1f       	adc	r31, r31
     612:	ee 0f       	add	r30, r30
     614:	ff 1f       	adc	r31, r31
     616:	e7 5b       	subi	r30, 0xB7	; 183
     618:	f8 4f       	sbci	r31, 0xF8	; 248
     61a:	e8 0f       	add	r30, r24
     61c:	f1 1d       	adc	r31, r1
     61e:	80 81       	ld	r24, Z
     620:	7c df       	rcall	.-264    	; 0x51a <GLCD_SendData>
     622:	21 96       	adiw	r28, 0x01	; 1
     624:	c0 38       	cpi	r28, 0x80	; 128
     626:	d1 05       	cpc	r29, r1
     628:	31 f7       	brne	.-52     	; 0x5f6 <g_render+0x42>
     62a:	f8 e0       	ldi	r31, 0x08	; 8
     62c:	df 0e       	add	r13, r31
     62e:	80 e4       	ldi	r24, 0x40	; 64
     630:	d8 12       	cpse	r13, r24
     632:	cf cf       	rjmp	.-98     	; 0x5d2 <g_render+0x1e>
     634:	03 c0       	rjmp	.+6      	; 0x63c <g_render+0x88>
     636:	c0 e0       	ldi	r28, 0x00	; 0
     638:	d0 e0       	ldi	r29, 0x00	; 0
     63a:	dd cf       	rjmp	.-70     	; 0x5f6 <g_render+0x42>
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	1f 91       	pop	r17
     642:	0f 91       	pop	r16
     644:	ff 90       	pop	r15
     646:	ef 90       	pop	r14
     648:	df 90       	pop	r13
     64a:	cf 90       	pop	r12
     64c:	08 95       	ret

0000064e <g_xy>:
     64e:	cf 93       	push	r28
     650:	c6 2f       	mov	r28, r22
     652:	a4 df       	rcall	.-184    	; 0x59c <GLCD_GotoX>
     654:	8c 2f       	mov	r24, r28
     656:	a7 df       	rcall	.-178    	; 0x5a6 <GLCD_GotoY>
     658:	cf 91       	pop	r28
     65a:	08 95       	ret

0000065c <GLCD_SetPixel>:
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
     660:	c6 2f       	mov	r28, r22
     662:	d4 2f       	mov	r29, r20
     664:	70 e0       	ldi	r23, 0x00	; 0
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	f2 df       	rcall	.-28     	; 0x64e <g_xy>
     66a:	ef e3       	ldi	r30, 0x3F	; 63
     66c:	f7 e0       	ldi	r31, 0x07	; 7
     66e:	20 81       	ld	r18, Z
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	81 81       	ldd	r24, Z+1	; 0x01
     674:	86 95       	lsr	r24
     676:	86 95       	lsr	r24
     678:	86 95       	lsr	r24
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	f9 01       	movw	r30, r18
     67e:	ee 0f       	add	r30, r30
     680:	ff 1f       	adc	r31, r31
     682:	ee 0f       	add	r30, r30
     684:	ff 1f       	adc	r31, r31
     686:	ee 0f       	add	r30, r30
     688:	ff 1f       	adc	r31, r31
     68a:	e7 5b       	subi	r30, 0xB7	; 183
     68c:	f8 4f       	sbci	r31, 0xF8	; 248
     68e:	e8 0f       	add	r30, r24
     690:	f9 1f       	adc	r31, r25
     692:	e0 81       	ld	r30, Z
     694:	df 3f       	cpi	r29, 0xFF	; 255
     696:	71 f4       	brne	.+28     	; 0x6b4 <GLCD_SetPixel+0x58>
     698:	c7 70       	andi	r28, 0x07	; 7
     69a:	41 e0       	ldi	r20, 0x01	; 1
     69c:	50 e0       	ldi	r21, 0x00	; 0
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	70 e0       	ldi	r23, 0x00	; 0
     6a2:	04 c0       	rjmp	.+8      	; 0x6ac <GLCD_SetPixel+0x50>
     6a4:	44 0f       	add	r20, r20
     6a6:	55 1f       	adc	r21, r21
     6a8:	66 1f       	adc	r22, r22
     6aa:	77 1f       	adc	r23, r23
     6ac:	ca 95       	dec	r28
     6ae:	d2 f7       	brpl	.-12     	; 0x6a4 <GLCD_SetPixel+0x48>
     6b0:	4e 2b       	or	r20, r30
     6b2:	0e c0       	rjmp	.+28     	; 0x6d0 <GLCD_SetPixel+0x74>
     6b4:	c7 70       	andi	r28, 0x07	; 7
     6b6:	41 e0       	ldi	r20, 0x01	; 1
     6b8:	50 e0       	ldi	r21, 0x00	; 0
     6ba:	60 e0       	ldi	r22, 0x00	; 0
     6bc:	70 e0       	ldi	r23, 0x00	; 0
     6be:	04 c0       	rjmp	.+8      	; 0x6c8 <GLCD_SetPixel+0x6c>
     6c0:	44 0f       	add	r20, r20
     6c2:	55 1f       	adc	r21, r21
     6c4:	66 1f       	adc	r22, r22
     6c6:	77 1f       	adc	r23, r23
     6c8:	ca 95       	dec	r28
     6ca:	d2 f7       	brpl	.-12     	; 0x6c0 <GLCD_SetPixel+0x64>
     6cc:	40 95       	com	r20
     6ce:	4e 23       	and	r20, r30
     6d0:	22 0f       	add	r18, r18
     6d2:	33 1f       	adc	r19, r19
     6d4:	22 0f       	add	r18, r18
     6d6:	33 1f       	adc	r19, r19
     6d8:	22 0f       	add	r18, r18
     6da:	33 1f       	adc	r19, r19
     6dc:	27 5b       	subi	r18, 0xB7	; 183
     6de:	38 4f       	sbci	r19, 0xF8	; 248
     6e0:	f9 01       	movw	r30, r18
     6e2:	e8 0f       	add	r30, r24
     6e4:	f9 1f       	adc	r31, r25
     6e6:	40 83       	st	Z, r20
     6e8:	df 91       	pop	r29
     6ea:	cf 91       	pop	r28
     6ec:	08 95       	ret

000006ee <GLCD_SetPixels>:
     6ee:	6f 92       	push	r6
     6f0:	7f 92       	push	r7
     6f2:	8f 92       	push	r8
     6f4:	9f 92       	push	r9
     6f6:	af 92       	push	r10
     6f8:	bf 92       	push	r11
     6fa:	cf 92       	push	r12
     6fc:	ef 92       	push	r14
     6fe:	ff 92       	push	r15
     700:	0f 93       	push	r16
     702:	1f 93       	push	r17
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	88 23       	and	r24, r24
     70a:	0c f4       	brge	.+2      	; 0x70e <GLCD_SetPixels+0x20>
     70c:	e5 c0       	rjmp	.+458    	; 0x8d8 <GLCD_SetPixels+0x1ea>
     70e:	44 23       	and	r20, r20
     710:	0c f4       	brge	.+2      	; 0x714 <GLCD_SetPixels+0x26>
     712:	e2 c0       	rjmp	.+452    	; 0x8d8 <GLCD_SetPixels+0x1ea>
     714:	60 34       	cpi	r22, 0x40	; 64
     716:	08 f0       	brcs	.+2      	; 0x71a <GLCD_SetPixels+0x2c>
     718:	df c0       	rjmp	.+446    	; 0x8d8 <GLCD_SetPixels+0x1ea>
     71a:	20 34       	cpi	r18, 0x40	; 64
     71c:	08 f0       	brcs	.+2      	; 0x720 <GLCD_SetPixels+0x32>
     71e:	dc c0       	rjmp	.+440    	; 0x8d8 <GLCD_SetPixels+0x1ea>
     720:	2f 5f       	subi	r18, 0xFF	; 255
     722:	92 2e       	mov	r9, r18
     724:	96 1a       	sub	r9, r22
     726:	4f 5f       	subi	r20, 0xFF	; 255
     728:	b4 2e       	mov	r11, r20
     72a:	b8 1a       	sub	r11, r24
     72c:	96 2f       	mov	r25, r22
     72e:	97 70       	andi	r25, 0x07	; 7
     730:	86 2e       	mov	r8, r22
     732:	89 1a       	sub	r8, r25
     734:	e9 2c       	mov	r14, r9
     736:	f1 2c       	mov	r15, r1
     738:	28 e0       	ldi	r18, 0x08	; 8
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	29 1b       	sub	r18, r25
     73e:	31 09       	sbc	r19, r1
     740:	e2 16       	cp	r14, r18
     742:	f3 06       	cpc	r15, r19
     744:	6c f4       	brge	.+26     	; 0x760 <GLCD_SetPixels+0x72>
     746:	48 e0       	ldi	r20, 0x08	; 8
     748:	50 e0       	ldi	r21, 0x00	; 0
     74a:	4e 19       	sub	r20, r14
     74c:	5f 09       	sbc	r21, r15
     74e:	2f ef       	ldi	r18, 0xFF	; 255
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	02 c0       	rjmp	.+4      	; 0x758 <GLCD_SetPixels+0x6a>
     754:	35 95       	asr	r19
     756:	27 95       	ror	r18
     758:	4a 95       	dec	r20
     75a:	e2 f7       	brpl	.-8      	; 0x754 <GLCD_SetPixels+0x66>
     75c:	a9 2c       	mov	r10, r9
     75e:	04 c0       	rjmp	.+8      	; 0x768 <GLCD_SetPixels+0x7a>
     760:	28 e0       	ldi	r18, 0x08	; 8
     762:	a2 2e       	mov	r10, r18
     764:	a9 1a       	sub	r10, r25
     766:	2f ef       	ldi	r18, 0xFF	; 255
     768:	c0 2f       	mov	r28, r16
     76a:	02 2f       	mov	r16, r18
     76c:	10 e0       	ldi	r17, 0x00	; 0
     76e:	02 c0       	rjmp	.+4      	; 0x774 <GLCD_SetPixels+0x86>
     770:	00 0f       	add	r16, r16
     772:	11 1f       	adc	r17, r17
     774:	9a 95       	dec	r25
     776:	e2 f7       	brpl	.-8      	; 0x770 <GLCD_SetPixels+0x82>
     778:	c0 2e       	mov	r12, r16
     77a:	68 2e       	mov	r6, r24
     77c:	71 2c       	mov	r7, r1
     77e:	68 2d       	mov	r22, r8
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	c3 01       	movw	r24, r6
     784:	64 df       	rcall	.-312    	; 0x64e <g_xy>
     786:	bb 20       	and	r11, r11
     788:	09 f4       	brne	.+2      	; 0x78c <GLCD_SetPixels+0x9e>
     78a:	53 c0       	rjmp	.+166    	; 0x832 <GLCD_SetPixels+0x144>
     78c:	ef e3       	ldi	r30, 0x3F	; 63
     78e:	f7 e0       	ldi	r31, 0x07	; 7
     790:	20 81       	ld	r18, Z
     792:	41 81       	ldd	r20, Z+1	; 0x01
     794:	46 95       	lsr	r20
     796:	46 95       	lsr	r20
     798:	46 95       	lsr	r20
     79a:	50 e0       	ldi	r21, 0x00	; 0
     79c:	6b 2d       	mov	r22, r11
     79e:	62 0f       	add	r22, r18
     7a0:	00 95       	com	r16
     7a2:	82 2f       	mov	r24, r18
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	fc 01       	movw	r30, r24
     7a8:	ee 0f       	add	r30, r30
     7aa:	ff 1f       	adc	r31, r31
     7ac:	ee 0f       	add	r30, r30
     7ae:	ff 1f       	adc	r31, r31
     7b0:	ee 0f       	add	r30, r30
     7b2:	ff 1f       	adc	r31, r31
     7b4:	e7 5b       	subi	r30, 0xB7	; 183
     7b6:	f8 4f       	sbci	r31, 0xF8	; 248
     7b8:	e4 0f       	add	r30, r20
     7ba:	f5 1f       	adc	r31, r21
     7bc:	30 81       	ld	r19, Z
     7be:	cf 3f       	cpi	r28, 0xFF	; 255
     7c0:	11 f4       	brne	.+4      	; 0x7c6 <GLCD_SetPixels+0xd8>
     7c2:	3c 29       	or	r19, r12
     7c4:	01 c0       	rjmp	.+2      	; 0x7c8 <GLCD_SetPixels+0xda>
     7c6:	30 23       	and	r19, r16
     7c8:	fc 01       	movw	r30, r24
     7ca:	ee 0f       	add	r30, r30
     7cc:	ff 1f       	adc	r31, r31
     7ce:	ee 0f       	add	r30, r30
     7d0:	ff 1f       	adc	r31, r31
     7d2:	ee 0f       	add	r30, r30
     7d4:	ff 1f       	adc	r31, r31
     7d6:	e7 5b       	subi	r30, 0xB7	; 183
     7d8:	f8 4f       	sbci	r31, 0xF8	; 248
     7da:	e4 0f       	add	r30, r20
     7dc:	f5 1f       	adc	r31, r21
     7de:	30 83       	st	Z, r19
     7e0:	2f 5f       	subi	r18, 0xFF	; 255
     7e2:	62 13       	cpse	r22, r18
     7e4:	de cf       	rjmp	.-68     	; 0x7a2 <GLCD_SetPixels+0xb4>
     7e6:	60 93 3f 07 	sts	0x073F, r22	; 0x80073f <__GLCD>
     7ea:	23 c0       	rjmp	.+70     	; 0x832 <GLCD_SetPixels+0x144>
     7ec:	d8 5f       	subi	r29, 0xF8	; 248
     7ee:	6d 2f       	mov	r22, r29
     7f0:	70 e0       	ldi	r23, 0x00	; 0
     7f2:	c3 01       	movw	r24, r6
     7f4:	2c df       	rcall	.-424    	; 0x64e <g_xy>
     7f6:	bb 20       	and	r11, r11
     7f8:	01 f1       	breq	.+64     	; 0x83a <GLCD_SetPixels+0x14c>
     7fa:	f8 01       	movw	r30, r16
     7fc:	20 81       	ld	r18, Z
     7fe:	81 81       	ldd	r24, Z+1	; 0x01
     800:	86 95       	lsr	r24
     802:	86 95       	lsr	r24
     804:	86 95       	lsr	r24
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	32 2f       	mov	r19, r18
     80a:	3b 0d       	add	r19, r11
     80c:	e2 2f       	mov	r30, r18
     80e:	f0 e0       	ldi	r31, 0x00	; 0
     810:	ee 0f       	add	r30, r30
     812:	ff 1f       	adc	r31, r31
     814:	ee 0f       	add	r30, r30
     816:	ff 1f       	adc	r31, r31
     818:	ee 0f       	add	r30, r30
     81a:	ff 1f       	adc	r31, r31
     81c:	e7 5b       	subi	r30, 0xB7	; 183
     81e:	f8 4f       	sbci	r31, 0xF8	; 248
     820:	e8 0f       	add	r30, r24
     822:	f9 1f       	adc	r31, r25
     824:	c0 83       	st	Z, r28
     826:	2f 5f       	subi	r18, 0xFF	; 255
     828:	32 13       	cpse	r19, r18
     82a:	f0 cf       	rjmp	.-32     	; 0x80c <GLCD_SetPixels+0x11e>
     82c:	f8 01       	movw	r30, r16
     82e:	30 83       	st	Z, r19
     830:	04 c0       	rjmp	.+8      	; 0x83a <GLCD_SetPixels+0x14c>
     832:	d8 2d       	mov	r29, r8
     834:	a8 18       	sub	r10, r8
     836:	0f e3       	ldi	r16, 0x3F	; 63
     838:	17 e0       	ldi	r17, 0x07	; 7
     83a:	8a 2d       	mov	r24, r10
     83c:	8d 0f       	add	r24, r29
     83e:	28 2f       	mov	r18, r24
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	a9 01       	movw	r20, r18
     844:	48 5f       	subi	r20, 0xF8	; 248
     846:	5f 4f       	sbci	r21, 0xFF	; 255
     848:	e4 16       	cp	r14, r20
     84a:	f5 06       	cpc	r15, r21
     84c:	7c f6       	brge	.-98     	; 0x7ec <GLCD_SetPixels+0xfe>
     84e:	89 15       	cp	r24, r9
     850:	08 f0       	brcs	.+2      	; 0x854 <GLCD_SetPixels+0x166>
     852:	42 c0       	rjmp	.+132    	; 0x8d8 <GLCD_SetPixels+0x1ea>
     854:	e2 1a       	sub	r14, r18
     856:	f3 0a       	sbc	r15, r19
     858:	8f ef       	ldi	r24, 0xFF	; 255
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	02 c0       	rjmp	.+4      	; 0x862 <GLCD_SetPixels+0x174>
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	ea 94       	dec	r14
     864:	e2 f7       	brpl	.-8      	; 0x85e <GLCD_SetPixels+0x170>
     866:	18 2f       	mov	r17, r24
     868:	10 95       	com	r17
     86a:	6d 2f       	mov	r22, r29
     86c:	70 e0       	ldi	r23, 0x00	; 0
     86e:	68 5f       	subi	r22, 0xF8	; 248
     870:	7f 4f       	sbci	r23, 0xFF	; 255
     872:	c3 01       	movw	r24, r6
     874:	ec de       	rcall	.-552    	; 0x64e <g_xy>
     876:	bb 20       	and	r11, r11
     878:	79 f1       	breq	.+94     	; 0x8d8 <GLCD_SetPixels+0x1ea>
     87a:	ef e3       	ldi	r30, 0x3F	; 63
     87c:	f7 e0       	ldi	r31, 0x07	; 7
     87e:	40 81       	ld	r20, Z
     880:	21 81       	ldd	r18, Z+1	; 0x01
     882:	26 95       	lsr	r18
     884:	26 95       	lsr	r18
     886:	26 95       	lsr	r18
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	b4 0e       	add	r11, r20
     88c:	61 2f       	mov	r22, r17
     88e:	60 95       	com	r22
     890:	84 2f       	mov	r24, r20
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	fc 01       	movw	r30, r24
     896:	ee 0f       	add	r30, r30
     898:	ff 1f       	adc	r31, r31
     89a:	ee 0f       	add	r30, r30
     89c:	ff 1f       	adc	r31, r31
     89e:	ee 0f       	add	r30, r30
     8a0:	ff 1f       	adc	r31, r31
     8a2:	e7 5b       	subi	r30, 0xB7	; 183
     8a4:	f8 4f       	sbci	r31, 0xF8	; 248
     8a6:	e2 0f       	add	r30, r18
     8a8:	f3 1f       	adc	r31, r19
     8aa:	50 81       	ld	r21, Z
     8ac:	cf 3f       	cpi	r28, 0xFF	; 255
     8ae:	11 f4       	brne	.+4      	; 0x8b4 <GLCD_SetPixels+0x1c6>
     8b0:	51 2b       	or	r21, r17
     8b2:	01 c0       	rjmp	.+2      	; 0x8b6 <GLCD_SetPixels+0x1c8>
     8b4:	56 23       	and	r21, r22
     8b6:	fc 01       	movw	r30, r24
     8b8:	ee 0f       	add	r30, r30
     8ba:	ff 1f       	adc	r31, r31
     8bc:	ee 0f       	add	r30, r30
     8be:	ff 1f       	adc	r31, r31
     8c0:	ee 0f       	add	r30, r30
     8c2:	ff 1f       	adc	r31, r31
     8c4:	e7 5b       	subi	r30, 0xB7	; 183
     8c6:	f8 4f       	sbci	r31, 0xF8	; 248
     8c8:	e2 0f       	add	r30, r18
     8ca:	f3 1f       	adc	r31, r19
     8cc:	50 83       	st	Z, r21
     8ce:	4f 5f       	subi	r20, 0xFF	; 255
     8d0:	b4 12       	cpse	r11, r20
     8d2:	de cf       	rjmp	.-68     	; 0x890 <GLCD_SetPixels+0x1a2>
     8d4:	b0 92 3f 07 	sts	0x073F, r11	; 0x80073f <__GLCD>
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	1f 91       	pop	r17
     8de:	0f 91       	pop	r16
     8e0:	ff 90       	pop	r15
     8e2:	ef 90       	pop	r14
     8e4:	cf 90       	pop	r12
     8e6:	bf 90       	pop	r11
     8e8:	af 90       	pop	r10
     8ea:	9f 90       	pop	r9
     8ec:	8f 90       	pop	r8
     8ee:	7f 90       	pop	r7
     8f0:	6f 90       	pop	r6
     8f2:	08 95       	ret

000008f4 <g_init>:
     8f4:	d0 9a       	sbi	0x1a, 0	; 26
     8f6:	d1 9a       	sbi	0x1a, 1	; 26
     8f8:	d2 9a       	sbi	0x1a, 2	; 26
     8fa:	d3 9a       	sbi	0x1a, 3	; 26
     8fc:	d4 9a       	sbi	0x1a, 4	; 26
     8fe:	d5 9a       	sbi	0x1a, 5	; 26
     900:	d6 9a       	sbi	0x1a, 6	; 26
     902:	d7 9a       	sbi	0x1a, 7	; 26
     904:	bc 9a       	sbi	0x17, 4	; 23
     906:	bd 9a       	sbi	0x17, 5	; 23
     908:	ba 9a       	sbi	0x17, 2	; 23
     90a:	b8 9a       	sbi	0x17, 0	; 23
     90c:	b9 9a       	sbi	0x17, 1	; 23
     90e:	bb 9a       	sbi	0x17, 3	; 23
     910:	c2 98       	cbi	0x18, 2	; 24
     912:	c1 98       	cbi	0x18, 1	; 24
     914:	c0 98       	cbi	0x18, 0	; 24
     916:	c3 98       	cbi	0x18, 3	; 24
     918:	8f e1       	ldi	r24, 0x1F	; 31
     91a:	9e e4       	ldi	r25, 0x4E	; 78
     91c:	01 97       	sbiw	r24, 0x01	; 1
     91e:	f1 f7       	brne	.-4      	; 0x91c <g_init+0x28>
     920:	00 c0       	rjmp	.+0      	; 0x922 <g_init+0x2e>
     922:	00 00       	nop
     924:	c3 9a       	sbi	0x18, 3	; 24
     926:	9f ef       	ldi	r25, 0xFF	; 255
     928:	20 e7       	ldi	r18, 0x70	; 112
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	91 50       	subi	r25, 0x01	; 1
     92e:	20 40       	sbci	r18, 0x00	; 0
     930:	80 40       	sbci	r24, 0x00	; 0
     932:	e1 f7       	brne	.-8      	; 0x92c <g_init+0x38>
     934:	00 c0       	rjmp	.+0      	; 0x936 <g_init+0x42>
     936:	00 00       	nop
     938:	62 e0       	ldi	r22, 0x02	; 2
     93a:	8f e3       	ldi	r24, 0x3F	; 63
     93c:	d0 dd       	rcall	.-1120   	; 0x4de <GLCD_SendCommand>
     93e:	62 e0       	ldi	r22, 0x02	; 2
     940:	80 ec       	ldi	r24, 0xC0	; 192
     942:	cd dd       	rcall	.-1126   	; 0x4de <GLCD_SendCommand>
     944:	60 e0       	ldi	r22, 0x00	; 0
     946:	70 e0       	ldi	r23, 0x00	; 0
     948:	80 e0       	ldi	r24, 0x00	; 0
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	80 de       	rcall	.-768    	; 0x64e <g_xy>
     94e:	ef e3       	ldi	r30, 0x3F	; 63
     950:	f7 e0       	ldi	r31, 0x07	; 7
     952:	81 e0       	ldi	r24, 0x01	; 1
     954:	82 83       	std	Z+2, r24	; 0x02
     956:	17 82       	std	Z+7, r1	; 0x07
     958:	16 82       	std	Z+6, r1	; 0x06
     95a:	15 82       	std	Z+5, r1	; 0x05
     95c:	11 82       	std	Z+1, r1	; 0x01
     95e:	10 82       	st	Z, r1
     960:	08 95       	ret

00000962 <g_clearline>:
     962:	88 30       	cpi	r24, 0x08	; 8
     964:	d8 f4       	brcc	.+54     	; 0x99c <g_clearline+0x3a>
     966:	68 2f       	mov	r22, r24
     968:	70 e0       	ldi	r23, 0x00	; 0
     96a:	66 0f       	add	r22, r22
     96c:	77 1f       	adc	r23, r23
     96e:	66 0f       	add	r22, r22
     970:	77 1f       	adc	r23, r23
     972:	66 0f       	add	r22, r22
     974:	77 1f       	adc	r23, r23
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	69 de       	rcall	.-814    	; 0x64e <g_xy>
     97c:	80 91 40 07 	lds	r24, 0x0740	; 0x800740 <__GLCD+0x1>
     980:	86 95       	lsr	r24
     982:	86 95       	lsr	r24
     984:	86 95       	lsr	r24
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	fc 01       	movw	r30, r24
     98a:	e7 5b       	subi	r30, 0xB7	; 183
     98c:	f8 4f       	sbci	r31, 0xF8	; 248
     98e:	87 5b       	subi	r24, 0xB7	; 183
     990:	94 4f       	sbci	r25, 0xF4	; 244
     992:	10 82       	st	Z, r1
     994:	38 96       	adiw	r30, 0x08	; 8
     996:	e8 17       	cp	r30, r24
     998:	f9 07       	cpc	r31, r25
     99a:	d9 f7       	brne	.-10     	; 0x992 <g_clearline+0x30>
     99c:	08 95       	ret

0000099e <g_line>:
     99e:	9f 92       	push	r9
     9a0:	af 92       	push	r10
     9a2:	bf 92       	push	r11
     9a4:	cf 92       	push	r12
     9a6:	df 92       	push	r13
     9a8:	ef 92       	push	r14
     9aa:	ff 92       	push	r15
     9ac:	0f 93       	push	r16
     9ae:	1f 93       	push	r17
     9b0:	cf 93       	push	r28
     9b2:	df 93       	push	r29
     9b4:	c8 2f       	mov	r28, r24
     9b6:	d6 2f       	mov	r29, r22
     9b8:	04 2f       	mov	r16, r20
     9ba:	88 23       	and	r24, r24
     9bc:	0c f4       	brge	.+2      	; 0x9c0 <g_line+0x22>
     9be:	92 c0       	rjmp	.+292    	; 0xae4 <g_line+0x146>
     9c0:	44 23       	and	r20, r20
     9c2:	0c f4       	brge	.+2      	; 0x9c6 <g_line+0x28>
     9c4:	8f c0       	rjmp	.+286    	; 0xae4 <g_line+0x146>
     9c6:	60 34       	cpi	r22, 0x40	; 64
     9c8:	08 f0       	brcs	.+2      	; 0x9cc <g_line+0x2e>
     9ca:	8c c0       	rjmp	.+280    	; 0xae4 <g_line+0x146>
     9cc:	20 34       	cpi	r18, 0x40	; 64
     9ce:	08 f0       	brcs	.+2      	; 0x9d2 <g_line+0x34>
     9d0:	89 c0       	rjmp	.+274    	; 0xae4 <g_line+0x146>
     9d2:	84 13       	cpse	r24, r20
     9d4:	0a c0       	rjmp	.+20     	; 0x9ea <g_line+0x4c>
     9d6:	26 17       	cp	r18, r22
     9d8:	10 f4       	brcc	.+4      	; 0x9de <g_line+0x40>
     9da:	d2 2f       	mov	r29, r18
     9dc:	26 2f       	mov	r18, r22
     9de:	0f ef       	ldi	r16, 0xFF	; 255
     9e0:	4c 2f       	mov	r20, r28
     9e2:	6d 2f       	mov	r22, r29
     9e4:	8c 2f       	mov	r24, r28
     9e6:	83 de       	rcall	.-762    	; 0x6ee <GLCD_SetPixels>
     9e8:	7d c0       	rjmp	.+250    	; 0xae4 <g_line+0x146>
     9ea:	62 13       	cpse	r22, r18
     9ec:	0c c0       	rjmp	.+24     	; 0xa06 <g_line+0x68>
     9ee:	48 17       	cp	r20, r24
     9f0:	10 f4       	brcc	.+4      	; 0x9f6 <g_line+0x58>
     9f2:	c4 2f       	mov	r28, r20
     9f4:	08 2f       	mov	r16, r24
     9f6:	4f ef       	ldi	r20, 0xFF	; 255
     9f8:	6d 2f       	mov	r22, r29
     9fa:	8c 2f       	mov	r24, r28
     9fc:	2f de       	rcall	.-930    	; 0x65c <GLCD_SetPixel>
     9fe:	cf 5f       	subi	r28, 0xFF	; 255
     a00:	0c 17       	cp	r16, r28
     a02:	c8 f7       	brcc	.-14     	; 0x9f6 <g_line+0x58>
     a04:	6f c0       	rjmp	.+222    	; 0xae4 <g_line+0x146>
     a06:	26 17       	cp	r18, r22
     a08:	28 f4       	brcc	.+10     	; 0xa14 <g_line+0x76>
     a0a:	e6 2e       	mov	r14, r22
     a0c:	f1 2c       	mov	r15, r1
     a0e:	e2 1a       	sub	r14, r18
     a10:	f1 08       	sbc	r15, r1
     a12:	04 c0       	rjmp	.+8      	; 0xa1c <g_line+0x7e>
     a14:	e2 2e       	mov	r14, r18
     a16:	f1 2c       	mov	r15, r1
     a18:	e6 1a       	sub	r14, r22
     a1a:	f1 08       	sbc	r15, r1
     a1c:	0c 17       	cp	r16, r28
     a1e:	78 f4       	brcc	.+30     	; 0xa3e <g_line+0xa0>
     a20:	cc 2e       	mov	r12, r28
     a22:	d1 2c       	mov	r13, r1
     a24:	c0 1a       	sub	r12, r16
     a26:	d1 08       	sbc	r13, r1
     a28:	ce 14       	cp	r12, r14
     a2a:	df 04       	cpc	r13, r15
     a2c:	0c f4       	brge	.+2      	; 0xa30 <g_line+0x92>
     a2e:	3f c0       	rjmp	.+126    	; 0xaae <g_line+0x110>
     a30:	8d 2f       	mov	r24, r29
     a32:	d2 2f       	mov	r29, r18
     a34:	28 2f       	mov	r18, r24
     a36:	8c 2f       	mov	r24, r28
     a38:	c0 2f       	mov	r28, r16
     a3a:	08 2f       	mov	r16, r24
     a3c:	08 c0       	rjmp	.+16     	; 0xa4e <g_line+0xb0>
     a3e:	c0 2e       	mov	r12, r16
     a40:	d1 2c       	mov	r13, r1
     a42:	cc 1a       	sub	r12, r28
     a44:	d1 08       	sbc	r13, r1
     a46:	ce 14       	cp	r12, r14
     a48:	df 04       	cpc	r13, r15
     a4a:	0c f4       	brge	.+2      	; 0xa4e <g_line+0xb0>
     a4c:	42 c0       	rjmp	.+132    	; 0xad2 <g_line+0x134>
     a4e:	a0 2e       	mov	r10, r16
     a50:	ac 1a       	sub	r10, r28
     a52:	d2 17       	cp	r29, r18
     a54:	38 f4       	brcc	.+14     	; 0xa64 <g_line+0xc6>
     a56:	b2 2e       	mov	r11, r18
     a58:	bd 1a       	sub	r11, r29
     a5a:	1a 2d       	mov	r17, r10
     a5c:	16 95       	lsr	r17
     a5e:	99 24       	eor	r9, r9
     a60:	93 94       	inc	r9
     a62:	06 c0       	rjmp	.+12     	; 0xa70 <g_line+0xd2>
     a64:	bd 2e       	mov	r11, r29
     a66:	b2 1a       	sub	r11, r18
     a68:	1a 2d       	mov	r17, r10
     a6a:	16 95       	lsr	r17
     a6c:	99 24       	eor	r9, r9
     a6e:	9a 94       	dec	r9
     a70:	0c 17       	cp	r16, r28
     a72:	c0 f1       	brcs	.+112    	; 0xae4 <g_line+0x146>
     a74:	ce 14       	cp	r12, r14
     a76:	df 04       	cpc	r13, r15
     a78:	2c f4       	brge	.+10     	; 0xa84 <g_line+0xe6>
     a7a:	4f ef       	ldi	r20, 0xFF	; 255
     a7c:	6c 2f       	mov	r22, r28
     a7e:	8d 2f       	mov	r24, r29
     a80:	ed dd       	rcall	.-1062   	; 0x65c <GLCD_SetPixel>
     a82:	04 c0       	rjmp	.+8      	; 0xa8c <g_line+0xee>
     a84:	4f ef       	ldi	r20, 0xFF	; 255
     a86:	6d 2f       	mov	r22, r29
     a88:	8c 2f       	mov	r24, r28
     a8a:	e8 dd       	rcall	.-1072   	; 0x65c <GLCD_SetPixel>
     a8c:	1b 19       	sub	r17, r11
     a8e:	12 f4       	brpl	.+4      	; 0xa94 <g_line+0xf6>
     a90:	d9 0d       	add	r29, r9
     a92:	1a 0d       	add	r17, r10
     a94:	cf 5f       	subi	r28, 0xFF	; 255
     a96:	0c 17       	cp	r16, r28
     a98:	68 f7       	brcc	.-38     	; 0xa74 <g_line+0xd6>
     a9a:	24 c0       	rjmp	.+72     	; 0xae4 <g_line+0x146>
     a9c:	ad 2e       	mov	r10, r29
     a9e:	a2 1a       	sub	r10, r18
     aa0:	8d 2f       	mov	r24, r29
     aa2:	d0 2f       	mov	r29, r16
     aa4:	08 2f       	mov	r16, r24
     aa6:	8c 2f       	mov	r24, r28
     aa8:	c2 2f       	mov	r28, r18
     aaa:	28 2f       	mov	r18, r24
     aac:	d4 cf       	rjmp	.-88     	; 0xa56 <g_line+0xb8>
     aae:	2d 17       	cp	r18, r29
     ab0:	a8 f3       	brcs	.-22     	; 0xa9c <g_line+0xfe>
     ab2:	80 2f       	mov	r24, r16
     ab4:	02 2f       	mov	r16, r18
     ab6:	28 2f       	mov	r18, r24
     ab8:	8c 2f       	mov	r24, r28
     aba:	cd 2f       	mov	r28, r29
     abc:	d8 2f       	mov	r29, r24
     abe:	c7 cf       	rjmp	.-114    	; 0xa4e <g_line+0xb0>
     ac0:	ad 2e       	mov	r10, r29
     ac2:	a2 1a       	sub	r10, r18
     ac4:	8d 2f       	mov	r24, r29
     ac6:	d0 2f       	mov	r29, r16
     ac8:	08 2f       	mov	r16, r24
     aca:	8c 2f       	mov	r24, r28
     acc:	c2 2f       	mov	r28, r18
     ace:	28 2f       	mov	r18, r24
     ad0:	c9 cf       	rjmp	.-110    	; 0xa64 <g_line+0xc6>
     ad2:	2d 17       	cp	r18, r29
     ad4:	a8 f3       	brcs	.-22     	; 0xac0 <g_line+0x122>
     ad6:	80 2f       	mov	r24, r16
     ad8:	02 2f       	mov	r16, r18
     ada:	28 2f       	mov	r18, r24
     adc:	8c 2f       	mov	r24, r28
     ade:	cd 2f       	mov	r28, r29
     ae0:	d8 2f       	mov	r29, r24
     ae2:	b5 cf       	rjmp	.-150    	; 0xa4e <g_line+0xb0>
     ae4:	df 91       	pop	r29
     ae6:	cf 91       	pop	r28
     ae8:	1f 91       	pop	r17
     aea:	0f 91       	pop	r16
     aec:	ff 90       	pop	r15
     aee:	ef 90       	pop	r14
     af0:	df 90       	pop	r13
     af2:	cf 90       	pop	r12
     af4:	bf 90       	pop	r11
     af6:	af 90       	pop	r10
     af8:	9f 90       	pop	r9
     afa:	08 95       	ret

00000afc <g_rec>:
     afc:	ef 92       	push	r14
     afe:	ff 92       	push	r15
     b00:	0f 93       	push	r16
     b02:	1f 93       	push	r17
     b04:	cf 93       	push	r28
     b06:	df 93       	push	r29
     b08:	88 23       	and	r24, r24
     b0a:	0c f4       	brge	.+2      	; 0xb0e <g_rec+0x12>
     b0c:	43 c0       	rjmp	.+134    	; 0xb94 <g_rec+0x98>
     b0e:	44 23       	and	r20, r20
     b10:	0c f4       	brge	.+2      	; 0xb14 <g_rec+0x18>
     b12:	40 c0       	rjmp	.+128    	; 0xb94 <g_rec+0x98>
     b14:	60 34       	cpi	r22, 0x40	; 64
     b16:	08 f0       	brcs	.+2      	; 0xb1a <g_rec+0x1e>
     b18:	3d c0       	rjmp	.+122    	; 0xb94 <g_rec+0x98>
     b1a:	20 34       	cpi	r18, 0x40	; 64
     b1c:	08 f0       	brcs	.+2      	; 0xb20 <g_rec+0x24>
     b1e:	3a c0       	rjmp	.+116    	; 0xb94 <g_rec+0x98>
     b20:	12 2f       	mov	r17, r18
     b22:	e4 2e       	mov	r14, r20
     b24:	d6 2f       	mov	r29, r22
     b26:	f8 2e       	mov	r15, r24
     b28:	48 17       	cp	r20, r24
     b2a:	e0 f4       	brcc	.+56     	; 0xb64 <g_rec+0x68>
     b2c:	08 2f       	mov	r16, r24
     b2e:	c4 2f       	mov	r28, r20
     b30:	4f ef       	ldi	r20, 0xFF	; 255
     b32:	6d 2f       	mov	r22, r29
     b34:	8c 2f       	mov	r24, r28
     b36:	92 dd       	rcall	.-1244   	; 0x65c <GLCD_SetPixel>
     b38:	cf 5f       	subi	r28, 0xFF	; 255
     b3a:	0c 17       	cp	r16, r28
     b3c:	c8 f7       	brcc	.-14     	; 0xb30 <g_rec+0x34>
     b3e:	ef 14       	cp	r14, r15
     b40:	a0 f4       	brcc	.+40     	; 0xb6a <g_rec+0x6e>
     b42:	0f 2d       	mov	r16, r15
     b44:	ce 2d       	mov	r28, r14
     b46:	4f ef       	ldi	r20, 0xFF	; 255
     b48:	61 2f       	mov	r22, r17
     b4a:	8c 2f       	mov	r24, r28
     b4c:	87 dd       	rcall	.-1266   	; 0x65c <GLCD_SetPixel>
     b4e:	cf 5f       	subi	r28, 0xFF	; 255
     b50:	0c 17       	cp	r16, r28
     b52:	c8 f7       	brcc	.-14     	; 0xb46 <g_rec+0x4a>
     b54:	1d 17       	cp	r17, r29
     b56:	60 f0       	brcs	.+24     	; 0xb70 <g_rec+0x74>
     b58:	14 c0       	rjmp	.+40     	; 0xb82 <g_rec+0x86>
     b5a:	0f ef       	ldi	r16, 0xFF	; 255
     b5c:	4e 2d       	mov	r20, r14
     b5e:	8e 2d       	mov	r24, r14
     b60:	c6 dd       	rcall	.-1140   	; 0x6ee <GLCD_SetPixels>
     b62:	18 c0       	rjmp	.+48     	; 0xb94 <g_rec+0x98>
     b64:	04 2f       	mov	r16, r20
     b66:	c8 2f       	mov	r28, r24
     b68:	e3 cf       	rjmp	.-58     	; 0xb30 <g_rec+0x34>
     b6a:	0e 2d       	mov	r16, r14
     b6c:	cf 2d       	mov	r28, r15
     b6e:	eb cf       	rjmp	.-42     	; 0xb46 <g_rec+0x4a>
     b70:	0f ef       	ldi	r16, 0xFF	; 255
     b72:	2d 2f       	mov	r18, r29
     b74:	4f 2d       	mov	r20, r15
     b76:	61 2f       	mov	r22, r17
     b78:	8f 2d       	mov	r24, r15
     b7a:	b9 dd       	rcall	.-1166   	; 0x6ee <GLCD_SetPixels>
     b7c:	2d 2f       	mov	r18, r29
     b7e:	61 2f       	mov	r22, r17
     b80:	ec cf       	rjmp	.-40     	; 0xb5a <g_rec+0x5e>
     b82:	0f ef       	ldi	r16, 0xFF	; 255
     b84:	21 2f       	mov	r18, r17
     b86:	4f 2d       	mov	r20, r15
     b88:	6d 2f       	mov	r22, r29
     b8a:	8f 2d       	mov	r24, r15
     b8c:	b0 dd       	rcall	.-1184   	; 0x6ee <GLCD_SetPixels>
     b8e:	21 2f       	mov	r18, r17
     b90:	6d 2f       	mov	r22, r29
     b92:	e3 cf       	rjmp	.-58     	; 0xb5a <g_rec+0x5e>
     b94:	df 91       	pop	r29
     b96:	cf 91       	pop	r28
     b98:	1f 91       	pop	r17
     b9a:	0f 91       	pop	r16
     b9c:	ff 90       	pop	r15
     b9e:	ef 90       	pop	r14
     ba0:	08 95       	ret

00000ba2 <g_cir>:
     ba2:	7f 92       	push	r7
     ba4:	8f 92       	push	r8
     ba6:	9f 92       	push	r9
     ba8:	af 92       	push	r10
     baa:	bf 92       	push	r11
     bac:	cf 92       	push	r12
     bae:	df 92       	push	r13
     bb0:	ef 92       	push	r14
     bb2:	ff 92       	push	r15
     bb4:	0f 93       	push	r16
     bb6:	1f 93       	push	r17
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	24 2f       	mov	r18, r20
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	f9 01       	movw	r30, r18
     bc2:	e8 0f       	add	r30, r24
     bc4:	f1 1d       	adc	r31, r1
     bc6:	e0 38       	cpi	r30, 0x80	; 128
     bc8:	f1 05       	cpc	r31, r1
     bca:	0c f0       	brlt	.+2      	; 0xbce <g_cir+0x2c>
     bcc:	60 c0       	rjmp	.+192    	; 0xc8e <g_cir+0xec>
     bce:	f9 01       	movw	r30, r18
     bd0:	e6 0f       	add	r30, r22
     bd2:	f1 1d       	adc	r31, r1
     bd4:	e0 34       	cpi	r30, 0x40	; 64
     bd6:	f1 05       	cpc	r31, r1
     bd8:	0c f0       	brlt	.+2      	; 0xbdc <g_cir+0x3a>
     bda:	59 c0       	rjmp	.+178    	; 0xc8e <g_cir+0xec>
     bdc:	86 2e       	mov	r8, r22
     bde:	98 2e       	mov	r9, r24
     be0:	22 0f       	add	r18, r18
     be2:	33 1f       	adc	r19, r19
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	6c 01       	movw	r12, r24
     bea:	c2 1a       	sub	r12, r18
     bec:	d3 0a       	sbc	r13, r19
     bee:	c4 2f       	mov	r28, r20
     bf0:	aa 24       	eor	r10, r10
     bf2:	a3 94       	inc	r10
     bf4:	b1 2c       	mov	r11, r1
     bf6:	e1 2c       	mov	r14, r1
     bf8:	f1 2c       	mov	r15, r1
     bfa:	d0 e0       	ldi	r29, 0x00	; 0
     bfc:	08 2d       	mov	r16, r8
     bfe:	0d 0f       	add	r16, r29
     c00:	4f ef       	ldi	r20, 0xFF	; 255
     c02:	60 2f       	mov	r22, r16
     c04:	19 2d       	mov	r17, r9
     c06:	1c 0f       	add	r17, r28
     c08:	81 2f       	mov	r24, r17
     c0a:	28 dd       	rcall	.-1456   	; 0x65c <GLCD_SetPixel>
     c0c:	4f ef       	ldi	r20, 0xFF	; 255
     c0e:	60 2f       	mov	r22, r16
     c10:	09 2d       	mov	r16, r9
     c12:	0c 1b       	sub	r16, r28
     c14:	80 2f       	mov	r24, r16
     c16:	22 dd       	rcall	.-1468   	; 0x65c <GLCD_SetPixel>
     c18:	78 2c       	mov	r7, r8
     c1a:	7d 1a       	sub	r7, r29
     c1c:	4f ef       	ldi	r20, 0xFF	; 255
     c1e:	67 2d       	mov	r22, r7
     c20:	80 2f       	mov	r24, r16
     c22:	1c dd       	rcall	.-1480   	; 0x65c <GLCD_SetPixel>
     c24:	4f ef       	ldi	r20, 0xFF	; 255
     c26:	67 2d       	mov	r22, r7
     c28:	81 2f       	mov	r24, r17
     c2a:	18 dd       	rcall	.-1488   	; 0x65c <GLCD_SetPixel>
     c2c:	09 2d       	mov	r16, r9
     c2e:	0d 0f       	add	r16, r29
     c30:	4f ef       	ldi	r20, 0xFF	; 255
     c32:	18 2d       	mov	r17, r8
     c34:	1c 0f       	add	r17, r28
     c36:	61 2f       	mov	r22, r17
     c38:	80 2f       	mov	r24, r16
     c3a:	10 dd       	rcall	.-1504   	; 0x65c <GLCD_SetPixel>
     c3c:	79 2c       	mov	r7, r9
     c3e:	7d 1a       	sub	r7, r29
     c40:	4f ef       	ldi	r20, 0xFF	; 255
     c42:	61 2f       	mov	r22, r17
     c44:	87 2d       	mov	r24, r7
     c46:	0a dd       	rcall	.-1516   	; 0x65c <GLCD_SetPixel>
     c48:	4f ef       	ldi	r20, 0xFF	; 255
     c4a:	18 2d       	mov	r17, r8
     c4c:	1c 1b       	sub	r17, r28
     c4e:	61 2f       	mov	r22, r17
     c50:	87 2d       	mov	r24, r7
     c52:	04 dd       	rcall	.-1528   	; 0x65c <GLCD_SetPixel>
     c54:	4f ef       	ldi	r20, 0xFF	; 255
     c56:	61 2f       	mov	r22, r17
     c58:	80 2f       	mov	r24, r16
     c5a:	00 dd       	rcall	.-1536   	; 0x65c <GLCD_SetPixel>
     c5c:	df 5f       	subi	r29, 0xFF	; 255
     c5e:	ea 0c       	add	r14, r10
     c60:	fb 1c       	adc	r15, r11
     c62:	82 e0       	ldi	r24, 0x02	; 2
     c64:	a8 0e       	add	r10, r24
     c66:	b1 1c       	adc	r11, r1
     c68:	97 01       	movw	r18, r14
     c6a:	22 0f       	add	r18, r18
     c6c:	33 1f       	adc	r19, r19
     c6e:	2c 0d       	add	r18, r12
     c70:	3d 1d       	adc	r19, r13
     c72:	12 16       	cp	r1, r18
     c74:	13 06       	cpc	r1, r19
     c76:	44 f4       	brge	.+16     	; 0xc88 <g_cir+0xe6>
     c78:	c1 50       	subi	r28, 0x01	; 1
     c7a:	c9 01       	movw	r24, r18
     c7c:	8e 19       	sub	r24, r14
     c7e:	9f 09       	sbc	r25, r15
     c80:	7c 01       	movw	r14, r24
     c82:	92 e0       	ldi	r25, 0x02	; 2
     c84:	c9 0e       	add	r12, r25
     c86:	d1 1c       	adc	r13, r1
     c88:	cd 17       	cp	r28, r29
     c8a:	08 f0       	brcs	.+2      	; 0xc8e <g_cir+0xec>
     c8c:	b7 cf       	rjmp	.-146    	; 0xbfc <g_cir+0x5a>
     c8e:	df 91       	pop	r29
     c90:	cf 91       	pop	r28
     c92:	1f 91       	pop	r17
     c94:	0f 91       	pop	r16
     c96:	ff 90       	pop	r15
     c98:	ef 90       	pop	r14
     c9a:	df 90       	pop	r13
     c9c:	cf 90       	pop	r12
     c9e:	bf 90       	pop	r11
     ca0:	af 90       	pop	r10
     ca2:	9f 90       	pop	r9
     ca4:	8f 90       	pop	r8
     ca6:	7f 90       	pop	r7
     ca8:	08 95       	ret

00000caa <g_fill>:
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	08 c0       	rjmp	.+16     	; 0xcbe <g_fill+0x14>
     cae:	80 83       	st	Z, r24
     cb0:	38 96       	adiw	r30, 0x08	; 8
     cb2:	e2 17       	cp	r30, r18
     cb4:	f3 07       	cpc	r31, r19
     cb6:	d9 f7       	brne	.-10     	; 0xcae <g_fill+0x4>
     cb8:	98 5f       	subi	r25, 0xF8	; 248
     cba:	90 34       	cpi	r25, 0x40	; 64
     cbc:	59 f0       	breq	.+22     	; 0xcd4 <g_fill+0x2a>
     cbe:	29 2f       	mov	r18, r25
     cc0:	26 95       	lsr	r18
     cc2:	26 95       	lsr	r18
     cc4:	26 95       	lsr	r18
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	f9 01       	movw	r30, r18
     cca:	e7 5b       	subi	r30, 0xB7	; 183
     ccc:	f8 4f       	sbci	r31, 0xF8	; 248
     cce:	27 5b       	subi	r18, 0xB7	; 183
     cd0:	34 4f       	sbci	r19, 0xF4	; 244
     cd2:	ed cf       	rjmp	.-38     	; 0xcae <g_fill+0x4>
     cd4:	08 95       	ret

00000cd6 <g_clear>:
     cd6:	80 91 41 07 	lds	r24, 0x0741	; 0x800741 <__GLCD+0x2>
     cda:	81 30       	cpi	r24, 0x01	; 1
     cdc:	19 f0       	breq	.+6      	; 0xce4 <g_clear+0xe>
     cde:	8f ef       	ldi	r24, 0xFF	; 255
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	02 c0       	rjmp	.+4      	; 0xce8 <g_clear+0x12>
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	e0 cf       	rjmp	.-64     	; 0xcaa <g_fill>
     cea:	08 95       	ret

00000cec <g_f_rec>:
     cec:	0f 93       	push	r16
     cee:	0f ef       	ldi	r16, 0xFF	; 255
     cf0:	fe dc       	rcall	.-1540   	; 0x6ee <GLCD_SetPixels>
     cf2:	0f 91       	pop	r16
     cf4:	08 95       	ret

00000cf6 <g_i_rec>:
     cf6:	6f 92       	push	r6
     cf8:	7f 92       	push	r7
     cfa:	9f 92       	push	r9
     cfc:	af 92       	push	r10
     cfe:	bf 92       	push	r11
     d00:	cf 92       	push	r12
     d02:	ef 92       	push	r14
     d04:	ff 92       	push	r15
     d06:	0f 93       	push	r16
     d08:	1f 93       	push	r17
     d0a:	cf 93       	push	r28
     d0c:	c4 2e       	mov	r12, r20
     d0e:	c8 1a       	sub	r12, r24
     d10:	aa 24       	eor	r10, r10
     d12:	a3 94       	inc	r10
     d14:	ac 0c       	add	r10, r12
     d16:	92 2e       	mov	r9, r18
     d18:	96 1a       	sub	r9, r22
     d1a:	93 94       	inc	r9
     d1c:	96 2f       	mov	r25, r22
     d1e:	97 70       	andi	r25, 0x07	; 7
     d20:	f6 2e       	mov	r15, r22
     d22:	f9 1a       	sub	r15, r25
     d24:	09 2d       	mov	r16, r9
     d26:	10 e0       	ldi	r17, 0x00	; 0
     d28:	28 e0       	ldi	r18, 0x08	; 8
     d2a:	30 e0       	ldi	r19, 0x00	; 0
     d2c:	29 1b       	sub	r18, r25
     d2e:	31 09       	sbc	r19, r1
     d30:	02 17       	cp	r16, r18
     d32:	13 07       	cpc	r17, r19
     d34:	6c f4       	brge	.+26     	; 0xd50 <g_i_rec+0x5a>
     d36:	48 e0       	ldi	r20, 0x08	; 8
     d38:	50 e0       	ldi	r21, 0x00	; 0
     d3a:	40 1b       	sub	r20, r16
     d3c:	51 0b       	sbc	r21, r17
     d3e:	2f ef       	ldi	r18, 0xFF	; 255
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <g_i_rec+0x52>
     d44:	35 95       	asr	r19
     d46:	27 95       	ror	r18
     d48:	4a 95       	dec	r20
     d4a:	e2 f7       	brpl	.-8      	; 0xd44 <g_i_rec+0x4e>
     d4c:	b9 2c       	mov	r11, r9
     d4e:	04 c0       	rjmp	.+8      	; 0xd58 <g_i_rec+0x62>
     d50:	28 e0       	ldi	r18, 0x08	; 8
     d52:	b2 2e       	mov	r11, r18
     d54:	b9 1a       	sub	r11, r25
     d56:	2f ef       	ldi	r18, 0xFF	; 255
     d58:	e2 2e       	mov	r14, r18
     d5a:	01 c0       	rjmp	.+2      	; 0xd5e <g_i_rec+0x68>
     d5c:	ee 0c       	add	r14, r14
     d5e:	9a 95       	dec	r25
     d60:	ea f7       	brpl	.-6      	; 0xd5c <g_i_rec+0x66>
     d62:	68 2e       	mov	r6, r24
     d64:	71 2c       	mov	r7, r1
     d66:	6f 2d       	mov	r22, r15
     d68:	70 e0       	ldi	r23, 0x00	; 0
     d6a:	c3 01       	movw	r24, r6
     d6c:	70 dc       	rcall	.-1824   	; 0x64e <g_xy>
     d6e:	aa 20       	and	r10, r10
     d70:	09 f4       	brne	.+2      	; 0xd74 <g_i_rec+0x7e>
     d72:	46 c0       	rjmp	.+140    	; 0xe00 <g_i_rec+0x10a>
     d74:	ef e3       	ldi	r30, 0x3F	; 63
     d76:	f7 e0       	ldi	r31, 0x07	; 7
     d78:	81 81       	ldd	r24, Z+1	; 0x01
     d7a:	86 95       	lsr	r24
     d7c:	86 95       	lsr	r24
     d7e:	86 95       	lsr	r24
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	20 81       	ld	r18, Z
     d84:	41 e0       	ldi	r20, 0x01	; 1
     d86:	42 0f       	add	r20, r18
     d88:	4c 0d       	add	r20, r12
     d8a:	e2 2f       	mov	r30, r18
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	ee 0f       	add	r30, r30
     d90:	ff 1f       	adc	r31, r31
     d92:	ee 0f       	add	r30, r30
     d94:	ff 1f       	adc	r31, r31
     d96:	ee 0f       	add	r30, r30
     d98:	ff 1f       	adc	r31, r31
     d9a:	e7 5b       	subi	r30, 0xB7	; 183
     d9c:	f8 4f       	sbci	r31, 0xF8	; 248
     d9e:	e8 0f       	add	r30, r24
     da0:	f9 1f       	adc	r31, r25
     da2:	30 81       	ld	r19, Z
     da4:	3e 25       	eor	r19, r14
     da6:	30 83       	st	Z, r19
     da8:	2f 5f       	subi	r18, 0xFF	; 255
     daa:	24 13       	cpse	r18, r20
     dac:	ee cf       	rjmp	.-36     	; 0xd8a <g_i_rec+0x94>
     dae:	40 93 3f 07 	sts	0x073F, r20	; 0x80073f <__GLCD>
     db2:	26 c0       	rjmp	.+76     	; 0xe00 <g_i_rec+0x10a>
     db4:	c8 5f       	subi	r28, 0xF8	; 248
     db6:	6c 2f       	mov	r22, r28
     db8:	70 e0       	ldi	r23, 0x00	; 0
     dba:	c3 01       	movw	r24, r6
     dbc:	48 dc       	rcall	.-1904   	; 0x64e <g_xy>
     dbe:	aa 20       	and	r10, r10
     dc0:	39 f1       	breq	.+78     	; 0xe10 <g_i_rec+0x11a>
     dc2:	f7 01       	movw	r30, r14
     dc4:	81 81       	ldd	r24, Z+1	; 0x01
     dc6:	86 95       	lsr	r24
     dc8:	86 95       	lsr	r24
     dca:	86 95       	lsr	r24
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	20 81       	ld	r18, Z
     dd0:	41 e0       	ldi	r20, 0x01	; 1
     dd2:	42 0f       	add	r20, r18
     dd4:	4c 0d       	add	r20, r12
     dd6:	e2 2f       	mov	r30, r18
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	ee 0f       	add	r30, r30
     ddc:	ff 1f       	adc	r31, r31
     dde:	ee 0f       	add	r30, r30
     de0:	ff 1f       	adc	r31, r31
     de2:	ee 0f       	add	r30, r30
     de4:	ff 1f       	adc	r31, r31
     de6:	e7 5b       	subi	r30, 0xB7	; 183
     de8:	f8 4f       	sbci	r31, 0xF8	; 248
     dea:	e8 0f       	add	r30, r24
     dec:	f9 1f       	adc	r31, r25
     dee:	30 81       	ld	r19, Z
     df0:	30 95       	com	r19
     df2:	30 83       	st	Z, r19
     df4:	2f 5f       	subi	r18, 0xFF	; 255
     df6:	24 13       	cpse	r18, r20
     df8:	ee cf       	rjmp	.-36     	; 0xdd6 <g_i_rec+0xe0>
     dfa:	f7 01       	movw	r30, r14
     dfc:	40 83       	st	Z, r20
     dfe:	08 c0       	rjmp	.+16     	; 0xe10 <g_i_rec+0x11a>
     e00:	cf 2d       	mov	r28, r15
     e02:	bf 18       	sub	r11, r15
     e04:	0f 2e       	mov	r0, r31
     e06:	ff e3       	ldi	r31, 0x3F	; 63
     e08:	ef 2e       	mov	r14, r31
     e0a:	f7 e0       	ldi	r31, 0x07	; 7
     e0c:	ff 2e       	mov	r15, r31
     e0e:	f0 2d       	mov	r31, r0
     e10:	8b 2d       	mov	r24, r11
     e12:	8c 0f       	add	r24, r28
     e14:	28 2f       	mov	r18, r24
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	a9 01       	movw	r20, r18
     e1a:	48 5f       	subi	r20, 0xF8	; 248
     e1c:	5f 4f       	sbci	r21, 0xFF	; 255
     e1e:	04 17       	cp	r16, r20
     e20:	15 07       	cpc	r17, r21
     e22:	44 f6       	brge	.-112    	; 0xdb4 <g_i_rec+0xbe>
     e24:	89 15       	cp	r24, r9
     e26:	90 f5       	brcc	.+100    	; 0xe8c <g_i_rec+0x196>
     e28:	02 1b       	sub	r16, r18
     e2a:	13 0b       	sbc	r17, r19
     e2c:	8f ef       	ldi	r24, 0xFF	; 255
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <g_i_rec+0x140>
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	0a 95       	dec	r16
     e38:	e2 f7       	brpl	.-8      	; 0xe32 <g_i_rec+0x13c>
     e3a:	18 2f       	mov	r17, r24
     e3c:	10 95       	com	r17
     e3e:	6c 2f       	mov	r22, r28
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	68 5f       	subi	r22, 0xF8	; 248
     e44:	7f 4f       	sbci	r23, 0xFF	; 255
     e46:	c3 01       	movw	r24, r6
     e48:	02 dc       	rcall	.-2044   	; 0x64e <g_xy>
     e4a:	aa 20       	and	r10, r10
     e4c:	f9 f0       	breq	.+62     	; 0xe8c <g_i_rec+0x196>
     e4e:	ef e3       	ldi	r30, 0x3F	; 63
     e50:	f7 e0       	ldi	r31, 0x07	; 7
     e52:	21 81       	ldd	r18, Z+1	; 0x01
     e54:	26 95       	lsr	r18
     e56:	26 95       	lsr	r18
     e58:	26 95       	lsr	r18
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	80 81       	ld	r24, Z
     e5e:	91 e0       	ldi	r25, 0x01	; 1
     e60:	98 0f       	add	r25, r24
     e62:	c9 0e       	add	r12, r25
     e64:	e8 2f       	mov	r30, r24
     e66:	f0 e0       	ldi	r31, 0x00	; 0
     e68:	ee 0f       	add	r30, r30
     e6a:	ff 1f       	adc	r31, r31
     e6c:	ee 0f       	add	r30, r30
     e6e:	ff 1f       	adc	r31, r31
     e70:	ee 0f       	add	r30, r30
     e72:	ff 1f       	adc	r31, r31
     e74:	e7 5b       	subi	r30, 0xB7	; 183
     e76:	f8 4f       	sbci	r31, 0xF8	; 248
     e78:	e2 0f       	add	r30, r18
     e7a:	f3 1f       	adc	r31, r19
     e7c:	90 81       	ld	r25, Z
     e7e:	91 27       	eor	r25, r17
     e80:	90 83       	st	Z, r25
     e82:	8f 5f       	subi	r24, 0xFF	; 255
     e84:	8c 11       	cpse	r24, r12
     e86:	ee cf       	rjmp	.-36     	; 0xe64 <g_i_rec+0x16e>
     e88:	c0 92 3f 07 	sts	0x073F, r12	; 0x80073f <__GLCD>
     e8c:	cf 91       	pop	r28
     e8e:	1f 91       	pop	r17
     e90:	0f 91       	pop	r16
     e92:	ff 90       	pop	r15
     e94:	ef 90       	pop	r14
     e96:	cf 90       	pop	r12
     e98:	bf 90       	pop	r11
     e9a:	af 90       	pop	r10
     e9c:	9f 90       	pop	r9
     e9e:	7f 90       	pop	r7
     ea0:	6f 90       	pop	r6
     ea2:	08 95       	ret

00000ea4 <g_font>:
     ea4:	66 23       	and	r22, r22
     ea6:	dc f0       	brlt	.+54     	; 0xede <g_font+0x3a>
     ea8:	40 34       	cpi	r20, 0x40	; 64
     eaa:	c8 f4       	brcc	.+50     	; 0xede <g_font+0x3a>
     eac:	ef e3       	ldi	r30, 0x3F	; 63
     eae:	f7 e0       	ldi	r31, 0x07	; 7
     eb0:	94 83       	std	Z+4, r25	; 0x04
     eb2:	83 83       	std	Z+3, r24	; 0x03
     eb4:	65 83       	std	Z+5, r22	; 0x05
     eb6:	46 83       	std	Z+6, r20	; 0x06
     eb8:	50 e0       	ldi	r21, 0x00	; 0
     eba:	41 50       	subi	r20, 0x01	; 1
     ebc:	51 09       	sbc	r21, r1
     ebe:	ca 01       	movw	r24, r20
     ec0:	99 23       	and	r25, r25
     ec2:	0c f4       	brge	.+2      	; 0xec6 <g_font+0x22>
     ec4:	07 96       	adiw	r24, 0x07	; 7
     ec6:	95 95       	asr	r25
     ec8:	87 95       	ror	r24
     eca:	95 95       	asr	r25
     ecc:	87 95       	ror	r24
     ece:	95 95       	asr	r25
     ed0:	87 95       	ror	r24
     ed2:	8f 5f       	subi	r24, 0xFF	; 255
     ed4:	80 93 46 07 	sts	0x0746, r24	; 0x800746 <__GLCD+0x7>
     ed8:	81 e0       	ldi	r24, 0x01	; 1
     eda:	80 93 47 07 	sts	0x0747, r24	; 0x800747 <__GLCD+0x8>
     ede:	08 95       	ret

00000ee0 <printc>:
     ee0:	2f 92       	push	r2
     ee2:	3f 92       	push	r3
     ee4:	4f 92       	push	r4
     ee6:	5f 92       	push	r5
     ee8:	6f 92       	push	r6
     eea:	7f 92       	push	r7
     eec:	8f 92       	push	r8
     eee:	9f 92       	push	r9
     ef0:	af 92       	push	r10
     ef2:	bf 92       	push	r11
     ef4:	cf 92       	push	r12
     ef6:	df 92       	push	r13
     ef8:	ef 92       	push	r14
     efa:	ff 92       	push	r15
     efc:	0f 93       	push	r16
     efe:	1f 93       	push	r17
     f00:	cf 93       	push	r28
     f02:	df 93       	push	r29
     f04:	cd b7       	in	r28, 0x3d	; 61
     f06:	de b7       	in	r29, 0x3e	; 62
     f08:	28 97       	sbiw	r28, 0x08	; 8
     f0a:	0f b6       	in	r0, 0x3f	; 63
     f0c:	f8 94       	cli
     f0e:	de bf       	out	0x3e, r29	; 62
     f10:	0f be       	out	0x3f, r0	; 63
     f12:	cd bf       	out	0x3d, r28	; 61
     f14:	ef e3       	ldi	r30, 0x3F	; 63
     f16:	f7 e0       	ldi	r31, 0x07	; 7
     f18:	00 81       	ld	r16, Z
     f1a:	0c 83       	std	Y+4, r16	; 0x04
     f1c:	01 81       	ldd	r16, Z+1	; 0x01
     f1e:	0b 83       	std	Y+3, r16	; 0x03
     f20:	57 80       	ldd	r5, Z+7	; 0x07
     f22:	25 81       	ldd	r18, Z+5	; 0x05
     f24:	25 9d       	mul	r18, r5
     f26:	90 01       	movw	r18, r0
     f28:	11 24       	eor	r1, r1
     f2a:	2f 5f       	subi	r18, 0xFF	; 255
     f2c:	3f 4f       	sbci	r19, 0xFF	; 255
     f2e:	80 52       	subi	r24, 0x20	; 32
     f30:	82 9f       	mul	r24, r18
     f32:	a0 01       	movw	r20, r0
     f34:	83 9f       	mul	r24, r19
     f36:	50 0d       	add	r21, r0
     f38:	11 24       	eor	r1, r1
     f3a:	5e 83       	std	Y+6, r21	; 0x06
     f3c:	4d 83       	std	Y+5, r20	; 0x05
     f3e:	03 80       	ldd	r0, Z+3	; 0x03
     f40:	f4 81       	ldd	r31, Z+4	; 0x04
     f42:	e0 2d       	mov	r30, r0
     f44:	e4 0f       	add	r30, r20
     f46:	f5 1f       	adc	r31, r21
     f48:	64 90       	lpm	r6, Z
     f4a:	8c 81       	ldd	r24, Y+4	; 0x04
     f4c:	86 0d       	add	r24, r6
     f4e:	22 f4       	brpl	.+8      	; 0xf58 <printc+0x78>
     f50:	80 e8       	ldi	r24, 0x80	; 128
     f52:	68 2e       	mov	r6, r24
     f54:	0c 81       	ldd	r16, Y+4	; 0x04
     f56:	60 1a       	sub	r6, r16
     f58:	8b 81       	ldd	r24, Y+3	; 0x03
     f5a:	86 95       	lsr	r24
     f5c:	86 95       	lsr	r24
     f5e:	86 95       	lsr	r24
     f60:	95 2d       	mov	r25, r5
     f62:	98 0f       	add	r25, r24
     f64:	99 30       	cpi	r25, 0x09	; 9
     f66:	18 f0       	brcs	.+6      	; 0xf6e <printc+0x8e>
     f68:	98 e0       	ldi	r25, 0x08	; 8
     f6a:	59 2e       	mov	r5, r25
     f6c:	58 1a       	sub	r5, r24
     f6e:	0b 81       	ldd	r16, Y+3	; 0x03
     f70:	07 70       	andi	r16, 0x07	; 7
     f72:	a0 2e       	mov	r10, r16
     f74:	55 20       	and	r5, r5
     f76:	09 f4       	brne	.+2      	; 0xf7a <printc+0x9a>
     f78:	6b c1       	rjmp	.+726    	; 0x1250 <__stack+0x151>
     f7a:	2d 81       	ldd	r18, Y+5	; 0x05
     f7c:	3e 81       	ldd	r19, Y+6	; 0x06
     f7e:	7b 80       	ldd	r7, Y+3	; 0x03
     f80:	10 e0       	ldi	r17, 0x00	; 0
     f82:	5c 81       	ldd	r21, Y+4	; 0x04
     f84:	45 2f       	mov	r20, r21
     f86:	50 e0       	ldi	r21, 0x00	; 0
     f88:	5a 83       	std	Y+2, r21	; 0x02
     f8a:	49 83       	std	Y+1, r20	; 0x01
     f8c:	0f 2e       	mov	r0, r31
     f8e:	ff e3       	ldi	r31, 0x3F	; 63
     f90:	8f 2e       	mov	r8, r31
     f92:	f7 e0       	ldi	r31, 0x07	; 7
     f94:	9f 2e       	mov	r9, r31
     f96:	f0 2d       	mov	r31, r0
     f98:	88 e0       	ldi	r24, 0x08	; 8
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	1c 01       	movw	r2, r24
     f9e:	20 1a       	sub	r2, r16
     fa0:	31 08       	sbc	r3, r1
     fa2:	38 87       	std	Y+8, r19	; 0x08
     fa4:	2f 83       	std	Y+7, r18	; 0x07
     fa6:	d5 2c       	mov	r13, r5
     fa8:	b9 80       	ldd	r11, Y+1	; 0x01
     faa:	ca 80       	ldd	r12, Y+2	; 0x02
     fac:	67 2d       	mov	r22, r7
     fae:	70 e0       	ldi	r23, 0x00	; 0
     fb0:	89 81       	ldd	r24, Y+1	; 0x01
     fb2:	9a 81       	ldd	r25, Y+2	; 0x02
     fb4:	4c db       	rcall	.-2408   	; 0x64e <g_xy>
     fb6:	4f 80       	ldd	r4, Y+7	; 0x07
     fb8:	58 84       	ldd	r5, Y+8	; 0x08
     fba:	8f ef       	ldi	r24, 0xFF	; 255
     fbc:	48 1a       	sub	r4, r24
     fbe:	58 0a       	sbc	r5, r24
     fc0:	66 20       	and	r6, r6
     fc2:	09 f4       	brne	.+2      	; 0xfc6 <printc+0xe6>
     fc4:	62 c0       	rjmp	.+196    	; 0x108a <printc+0x1aa>
     fc6:	d4 01       	movw	r26, r8
     fc8:	13 96       	adiw	r26, 0x03	; 3
     fca:	6d 91       	ld	r22, X+
     fcc:	7c 91       	ld	r23, X
     fce:	14 97       	sbiw	r26, 0x04	; 4
     fd0:	17 96       	adiw	r26, 0x07	; 7
     fd2:	2c 91       	ld	r18, X
     fd4:	17 97       	sbiw	r26, 0x07	; 7
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	18 96       	adiw	r26, 0x08	; 8
     fda:	ec 90       	ld	r14, X
     fdc:	18 97       	sbiw	r26, 0x08	; 8
     fde:	11 96       	adiw	r26, 0x01	; 1
     fe0:	4c 91       	ld	r20, X
     fe2:	11 97       	sbiw	r26, 0x01	; 1
     fe4:	46 95       	lsr	r20
     fe6:	46 95       	lsr	r20
     fe8:	46 95       	lsr	r20
     fea:	50 e0       	ldi	r21, 0x00	; 0
     fec:	0c 91       	ld	r16, X
     fee:	cb 01       	movw	r24, r22
     ff0:	84 0d       	add	r24, r4
     ff2:	95 1d       	adc	r25, r5
     ff4:	f0 2e       	mov	r15, r16
     ff6:	f6 0c       	add	r15, r6
     ff8:	e1 2f       	mov	r30, r17
     ffa:	1e 2d       	mov	r17, r14
     ffc:	ee 2e       	mov	r14, r30
     ffe:	fc 01       	movw	r30, r24
    1000:	a4 91       	lpm	r26, Z
    1002:	ea 2f       	mov	r30, r26
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	df 01       	movw	r26, r30
    1008:	0a 2c       	mov	r0, r10
    100a:	02 c0       	rjmp	.+4      	; 0x1010 <printc+0x130>
    100c:	aa 0f       	add	r26, r26
    100e:	bb 1f       	adc	r27, r27
    1010:	0a 94       	dec	r0
    1012:	e2 f7       	brpl	.-8      	; 0x100c <printc+0x12c>
    1014:	ea 2f       	mov	r30, r26
    1016:	ee 20       	and	r14, r14
    1018:	99 f0       	breq	.+38     	; 0x1040 <printc+0x160>
    101a:	ef 81       	ldd	r30, Y+7	; 0x07
    101c:	f8 85       	ldd	r31, Y+8	; 0x08
    101e:	e6 0f       	add	r30, r22
    1020:	f7 1f       	adc	r31, r23
    1022:	e4 91       	lpm	r30, Z
    1024:	f0 e0       	ldi	r31, 0x00	; 0
    1026:	02 2c       	mov	r0, r2
    1028:	02 c0       	rjmp	.+4      	; 0x102e <printc+0x14e>
    102a:	f5 95       	asr	r31
    102c:	e7 95       	ror	r30
    102e:	0a 94       	dec	r0
    1030:	e2 f7       	brpl	.-8      	; 0x102a <printc+0x14a>
    1032:	ea 2b       	or	r30, r26
    1034:	af 81       	ldd	r26, Y+7	; 0x07
    1036:	b8 85       	ldd	r27, Y+8	; 0x08
    1038:	a2 0f       	add	r26, r18
    103a:	b3 1f       	adc	r27, r19
    103c:	b8 87       	std	Y+8, r27	; 0x08
    103e:	af 83       	std	Y+7, r26	; 0x07
    1040:	11 30       	cpi	r17, 0x01	; 1
    1042:	71 f4       	brne	.+28     	; 0x1060 <printc+0x180>
    1044:	a0 2f       	mov	r26, r16
    1046:	b0 e0       	ldi	r27, 0x00	; 0
    1048:	aa 0f       	add	r26, r26
    104a:	bb 1f       	adc	r27, r27
    104c:	aa 0f       	add	r26, r26
    104e:	bb 1f       	adc	r27, r27
    1050:	aa 0f       	add	r26, r26
    1052:	bb 1f       	adc	r27, r27
    1054:	a7 5b       	subi	r26, 0xB7	; 183
    1056:	b8 4f       	sbci	r27, 0xF8	; 248
    1058:	a4 0f       	add	r26, r20
    105a:	b5 1f       	adc	r27, r21
    105c:	fc 91       	ld	r31, X
    105e:	ef 2b       	or	r30, r31
    1060:	a0 2f       	mov	r26, r16
    1062:	b0 e0       	ldi	r27, 0x00	; 0
    1064:	aa 0f       	add	r26, r26
    1066:	bb 1f       	adc	r27, r27
    1068:	aa 0f       	add	r26, r26
    106a:	bb 1f       	adc	r27, r27
    106c:	aa 0f       	add	r26, r26
    106e:	bb 1f       	adc	r27, r27
    1070:	a7 5b       	subi	r26, 0xB7	; 183
    1072:	b8 4f       	sbci	r27, 0xF8	; 248
    1074:	a4 0f       	add	r26, r20
    1076:	b5 1f       	adc	r27, r21
    1078:	ec 93       	st	X, r30
    107a:	0f 5f       	subi	r16, 0xFF	; 255
    107c:	82 0f       	add	r24, r18
    107e:	93 1f       	adc	r25, r19
    1080:	f0 12       	cpse	r15, r16
    1082:	bd cf       	rjmp	.-134    	; 0xffe <printc+0x11e>
    1084:	1e 2d       	mov	r17, r14
    1086:	f4 01       	movw	r30, r8
    1088:	f0 82       	st	Z, r15
    108a:	d4 01       	movw	r26, r8
    108c:	18 96       	adiw	r26, 0x08	; 8
    108e:	8c 91       	ld	r24, X
    1090:	18 97       	sbiw	r26, 0x08	; 8
    1092:	88 23       	and	r24, r24
    1094:	99 f0       	breq	.+38     	; 0x10bc <printc+0x1dc>
    1096:	ec 91       	ld	r30, X
    1098:	f0 e0       	ldi	r31, 0x00	; 0
    109a:	11 96       	adiw	r26, 0x01	; 1
    109c:	8c 91       	ld	r24, X
    109e:	86 95       	lsr	r24
    10a0:	86 95       	lsr	r24
    10a2:	86 95       	lsr	r24
    10a4:	ee 0f       	add	r30, r30
    10a6:	ff 1f       	adc	r31, r31
    10a8:	ee 0f       	add	r30, r30
    10aa:	ff 1f       	adc	r31, r31
    10ac:	ee 0f       	add	r30, r30
    10ae:	ff 1f       	adc	r31, r31
    10b0:	e7 5b       	subi	r30, 0xB7	; 183
    10b2:	f8 4f       	sbci	r31, 0xF8	; 248
    10b4:	e8 0f       	add	r30, r24
    10b6:	f1 1d       	adc	r31, r1
    10b8:	90 81       	ld	r25, Z
    10ba:	01 c0       	rjmp	.+2      	; 0x10be <printc+0x1de>
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	d4 01       	movw	r26, r8
    10c0:	ec 91       	ld	r30, X
    10c2:	f0 e0       	ldi	r31, 0x00	; 0
    10c4:	11 96       	adiw	r26, 0x01	; 1
    10c6:	8c 91       	ld	r24, X
    10c8:	86 95       	lsr	r24
    10ca:	86 95       	lsr	r24
    10cc:	86 95       	lsr	r24
    10ce:	ee 0f       	add	r30, r30
    10d0:	ff 1f       	adc	r31, r31
    10d2:	ee 0f       	add	r30, r30
    10d4:	ff 1f       	adc	r31, r31
    10d6:	ee 0f       	add	r30, r30
    10d8:	ff 1f       	adc	r31, r31
    10da:	e7 5b       	subi	r30, 0xB7	; 183
    10dc:	f8 4f       	sbci	r31, 0xF8	; 248
    10de:	e8 0f       	add	r30, r24
    10e0:	f1 1d       	adc	r31, r1
    10e2:	90 83       	st	Z, r25
    10e4:	b8 e0       	ldi	r27, 0x08	; 8
    10e6:	7b 0e       	add	r7, r27
    10e8:	1f 5f       	subi	r17, 0xFF	; 255
    10ea:	58 86       	std	Y+8, r5	; 0x08
    10ec:	4f 82       	std	Y+7, r4	; 0x07
    10ee:	d1 12       	cpse	r13, r17
    10f0:	5b cf       	rjmp	.-330    	; 0xfa8 <printc+0xc8>
    10f2:	8f e1       	ldi	r24, 0x1F	; 31
    10f4:	8d 0d       	add	r24, r13
    10f6:	68 2f       	mov	r22, r24
    10f8:	66 0f       	add	r22, r22
    10fa:	66 0f       	add	r22, r22
    10fc:	66 0f       	add	r22, r22
    10fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1100:	88 5f       	subi	r24, 0xF8	; 248
    1102:	86 0f       	add	r24, r22
    1104:	e1 e0       	ldi	r30, 0x01	; 1
    1106:	ed 15       	cp	r30, r13
    1108:	08 f0       	brcs	.+2      	; 0x110c <__stack+0xd>
    110a:	a2 c0       	rjmp	.+324    	; 0x1250 <__stack+0x151>
    110c:	68 2f       	mov	r22, r24
    110e:	70 e0       	ldi	r23, 0x00	; 0
    1110:	8b 2d       	mov	r24, r11
    1112:	9c 2d       	mov	r25, r12
    1114:	9c da       	rcall	.-2760   	; 0x64e <g_xy>
    1116:	8d 81       	ldd	r24, Y+5	; 0x05
    1118:	9e 81       	ldd	r25, Y+6	; 0x06
    111a:	8d 0d       	add	r24, r13
    111c:	91 1d       	adc	r25, r1
    111e:	66 20       	and	r6, r6
    1120:	09 f4       	brne	.+2      	; 0x1124 <__stack+0x25>
    1122:	4c c0       	rjmp	.+152    	; 0x11bc <__stack+0xbd>
    1124:	af e3       	ldi	r26, 0x3F	; 63
    1126:	b7 e0       	ldi	r27, 0x07	; 7
    1128:	6c 91       	ld	r22, X
    112a:	70 e0       	ldi	r23, 0x00	; 0
    112c:	11 96       	adiw	r26, 0x01	; 1
    112e:	4c 91       	ld	r20, X
    1130:	11 97       	sbiw	r26, 0x01	; 1
    1132:	46 95       	lsr	r20
    1134:	46 95       	lsr	r20
    1136:	46 95       	lsr	r20
    1138:	50 e0       	ldi	r21, 0x00	; 0
    113a:	18 96       	adiw	r26, 0x08	; 8
    113c:	1c 91       	ld	r17, X
    113e:	18 97       	sbiw	r26, 0x08	; 8
    1140:	9b 01       	movw	r18, r22
    1142:	22 0f       	add	r18, r18
    1144:	33 1f       	adc	r19, r19
    1146:	22 0f       	add	r18, r18
    1148:	33 1f       	adc	r19, r19
    114a:	22 0f       	add	r18, r18
    114c:	33 1f       	adc	r19, r19
    114e:	27 5b       	subi	r18, 0xB7	; 183
    1150:	38 4f       	sbci	r19, 0xF8	; 248
    1152:	24 0f       	add	r18, r20
    1154:	35 1f       	adc	r19, r21
    1156:	f9 01       	movw	r30, r18
    1158:	f0 81       	ld	r31, Z
    115a:	fd 83       	std	Y+5, r31	; 0x05
    115c:	17 96       	adiw	r26, 0x07	; 7
    115e:	2c 91       	ld	r18, X
    1160:	17 97       	sbiw	r26, 0x07	; 7
    1162:	30 e0       	ldi	r19, 0x00	; 0
    1164:	13 96       	adiw	r26, 0x03	; 3
    1166:	ed 91       	ld	r30, X+
    1168:	fc 91       	ld	r31, X
    116a:	14 97       	sbiw	r26, 0x04	; 4
    116c:	e8 0f       	add	r30, r24
    116e:	f9 1f       	adc	r31, r25
    1170:	19 82       	std	Y+1, r1	; 0x01
    1172:	a8 e0       	ldi	r26, 0x08	; 8
    1174:	b0 e0       	ldi	r27, 0x00	; 0
    1176:	aa 19       	sub	r26, r10
    1178:	b1 09       	sbc	r27, r1
    117a:	84 91       	lpm	r24, Z
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	0a 2e       	mov	r0, r26
    1180:	02 c0       	rjmp	.+4      	; 0x1186 <__stack+0x87>
    1182:	95 95       	asr	r25
    1184:	87 95       	ror	r24
    1186:	0a 94       	dec	r0
    1188:	e2 f7       	brpl	.-8      	; 0x1182 <__stack+0x83>
    118a:	0d 81       	ldd	r16, Y+5	; 0x05
    118c:	80 2b       	or	r24, r16
    118e:	11 30       	cpi	r17, 0x01	; 1
    1190:	09 f4       	brne	.+2      	; 0x1194 <__stack+0x95>
    1192:	80 2b       	or	r24, r16
    1194:	99 81       	ldd	r25, Y+1	; 0x01
    1196:	9f 5f       	subi	r25, 0xFF	; 255
    1198:	99 83       	std	Y+1, r25	; 0x01
    119a:	e2 0f       	add	r30, r18
    119c:	f3 1f       	adc	r31, r19
    119e:	8d 83       	std	Y+5, r24	; 0x05
    11a0:	69 12       	cpse	r6, r25
    11a2:	eb cf       	rjmp	.-42     	; 0x117a <__stack+0x7b>
    11a4:	66 0f       	add	r22, r22
    11a6:	77 1f       	adc	r23, r23
    11a8:	66 0f       	add	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	66 0f       	add	r22, r22
    11ae:	77 1f       	adc	r23, r23
    11b0:	67 5b       	subi	r22, 0xB7	; 183
    11b2:	78 4f       	sbci	r23, 0xF8	; 248
    11b4:	fb 01       	movw	r30, r22
    11b6:	e4 0f       	add	r30, r20
    11b8:	f5 1f       	adc	r31, r21
    11ba:	80 83       	st	Z, r24
    11bc:	80 91 47 07 	lds	r24, 0x0747	; 0x800747 <__GLCD+0x8>
    11c0:	88 23       	and	r24, r24
    11c2:	69 f1       	breq	.+90     	; 0x121e <__stack+0x11f>
    11c4:	81 30       	cpi	r24, 0x01	; 1
    11c6:	a9 f4       	brne	.+42     	; 0x11f2 <__stack+0xf3>
    11c8:	af e3       	ldi	r26, 0x3F	; 63
    11ca:	b7 e0       	ldi	r27, 0x07	; 7
    11cc:	ec 91       	ld	r30, X
    11ce:	f0 e0       	ldi	r31, 0x00	; 0
    11d0:	11 96       	adiw	r26, 0x01	; 1
    11d2:	8c 91       	ld	r24, X
    11d4:	86 95       	lsr	r24
    11d6:	86 95       	lsr	r24
    11d8:	86 95       	lsr	r24
    11da:	ee 0f       	add	r30, r30
    11dc:	ff 1f       	adc	r31, r31
    11de:	ee 0f       	add	r30, r30
    11e0:	ff 1f       	adc	r31, r31
    11e2:	ee 0f       	add	r30, r30
    11e4:	ff 1f       	adc	r31, r31
    11e6:	e7 5b       	subi	r30, 0xB7	; 183
    11e8:	f8 4f       	sbci	r31, 0xF8	; 248
    11ea:	e8 0f       	add	r30, r24
    11ec:	f1 1d       	adc	r31, r1
    11ee:	90 81       	ld	r25, Z
    11f0:	17 c0       	rjmp	.+46     	; 0x1220 <__stack+0x121>
    11f2:	af e3       	ldi	r26, 0x3F	; 63
    11f4:	b7 e0       	ldi	r27, 0x07	; 7
    11f6:	ec 91       	ld	r30, X
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	11 96       	adiw	r26, 0x01	; 1
    11fc:	8c 91       	ld	r24, X
    11fe:	86 95       	lsr	r24
    1200:	86 95       	lsr	r24
    1202:	86 95       	lsr	r24
    1204:	ee 0f       	add	r30, r30
    1206:	ff 1f       	adc	r31, r31
    1208:	ee 0f       	add	r30, r30
    120a:	ff 1f       	adc	r31, r31
    120c:	ee 0f       	add	r30, r30
    120e:	ff 1f       	adc	r31, r31
    1210:	e7 5b       	subi	r30, 0xB7	; 183
    1212:	f8 4f       	sbci	r31, 0xF8	; 248
    1214:	e8 0f       	add	r30, r24
    1216:	f1 1d       	adc	r31, r1
    1218:	90 81       	ld	r25, Z
    121a:	90 95       	com	r25
    121c:	01 c0       	rjmp	.+2      	; 0x1220 <__stack+0x121>
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	af e3       	ldi	r26, 0x3F	; 63
    1222:	b7 e0       	ldi	r27, 0x07	; 7
    1224:	11 96       	adiw	r26, 0x01	; 1
    1226:	8c 91       	ld	r24, X
    1228:	11 97       	sbiw	r26, 0x01	; 1
    122a:	ec 91       	ld	r30, X
    122c:	21 e0       	ldi	r18, 0x01	; 1
    122e:	2e 0f       	add	r18, r30
    1230:	2c 93       	st	X, r18
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	86 95       	lsr	r24
    1236:	86 95       	lsr	r24
    1238:	86 95       	lsr	r24
    123a:	ee 0f       	add	r30, r30
    123c:	ff 1f       	adc	r31, r31
    123e:	ee 0f       	add	r30, r30
    1240:	ff 1f       	adc	r31, r31
    1242:	ee 0f       	add	r30, r30
    1244:	ff 1f       	adc	r31, r31
    1246:	e7 5b       	subi	r30, 0xB7	; 183
    1248:	f8 4f       	sbci	r31, 0xF8	; 248
    124a:	e8 0f       	add	r30, r24
    124c:	f1 1d       	adc	r31, r1
    124e:	90 83       	st	Z, r25
    1250:	0b 81       	ldd	r16, Y+3	; 0x03
    1252:	60 2f       	mov	r22, r16
    1254:	70 e0       	ldi	r23, 0x00	; 0
    1256:	86 2d       	mov	r24, r6
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	0c 81       	ldd	r16, Y+4	; 0x04
    125c:	80 0f       	add	r24, r16
    125e:	91 1d       	adc	r25, r1
    1260:	01 96       	adiw	r24, 0x01	; 1
    1262:	f5 d9       	rcall	.-3094   	; 0x64e <g_xy>
    1264:	28 96       	adiw	r28, 0x08	; 8
    1266:	0f b6       	in	r0, 0x3f	; 63
    1268:	f8 94       	cli
    126a:	de bf       	out	0x3e, r29	; 62
    126c:	0f be       	out	0x3f, r0	; 63
    126e:	cd bf       	out	0x3d, r28	; 61
    1270:	df 91       	pop	r29
    1272:	cf 91       	pop	r28
    1274:	1f 91       	pop	r17
    1276:	0f 91       	pop	r16
    1278:	ff 90       	pop	r15
    127a:	ef 90       	pop	r14
    127c:	df 90       	pop	r13
    127e:	cf 90       	pop	r12
    1280:	bf 90       	pop	r11
    1282:	af 90       	pop	r10
    1284:	9f 90       	pop	r9
    1286:	8f 90       	pop	r8
    1288:	7f 90       	pop	r7
    128a:	6f 90       	pop	r6
    128c:	5f 90       	pop	r5
    128e:	4f 90       	pop	r4
    1290:	3f 90       	pop	r3
    1292:	2f 90       	pop	r2
    1294:	08 95       	ret

00001296 <prints>:
    1296:	0f 93       	push	r16
    1298:	1f 93       	push	r17
    129a:	cf 93       	push	r28
    129c:	df 93       	push	r29
    129e:	ec 01       	movw	r28, r24
    12a0:	88 81       	ld	r24, Y
    12a2:	88 23       	and	r24, r24
    12a4:	d1 f0       	breq	.+52     	; 0x12da <prints+0x44>
    12a6:	ef e3       	ldi	r30, 0x3F	; 63
    12a8:	f7 e0       	ldi	r31, 0x07	; 7
    12aa:	90 81       	ld	r25, Z
    12ac:	25 81       	ldd	r18, Z+5	; 0x05
    12ae:	30 e0       	ldi	r19, 0x00	; 0
    12b0:	29 0f       	add	r18, r25
    12b2:	31 1d       	adc	r19, r1
    12b4:	20 38       	cpi	r18, 0x80	; 128
    12b6:	31 05       	cpc	r19, r1
    12b8:	84 f4       	brge	.+32     	; 0x12da <prints+0x44>
    12ba:	21 96       	adiw	r28, 0x01	; 1
    12bc:	8f 01       	movw	r16, r30
    12be:	09 c0       	rjmp	.+18     	; 0x12d2 <prints+0x3c>
    12c0:	f8 01       	movw	r30, r16
    12c2:	90 81       	ld	r25, Z
    12c4:	25 81       	ldd	r18, Z+5	; 0x05
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	29 0f       	add	r18, r25
    12ca:	31 1d       	adc	r19, r1
    12cc:	20 38       	cpi	r18, 0x80	; 128
    12ce:	31 05       	cpc	r19, r1
    12d0:	24 f4       	brge	.+8      	; 0x12da <prints+0x44>
    12d2:	06 de       	rcall	.-1012   	; 0xee0 <printc>
    12d4:	89 91       	ld	r24, Y+
    12d6:	81 11       	cpse	r24, r1
    12d8:	f3 cf       	rjmp	.-26     	; 0x12c0 <prints+0x2a>
    12da:	df 91       	pop	r29
    12dc:	cf 91       	pop	r28
    12de:	1f 91       	pop	r17
    12e0:	0f 91       	pop	r16
    12e2:	08 95       	ret

000012e4 <printi>:
    12e4:	1f 93       	push	r17
    12e6:	cf 93       	push	r28
    12e8:	df 93       	push	r29
    12ea:	cd b7       	in	r28, 0x3d	; 61
    12ec:	de b7       	in	r29, 0x3e	; 62
    12ee:	2c 97       	sbiw	r28, 0x0c	; 12
    12f0:	0f b6       	in	r0, 0x3f	; 63
    12f2:	f8 94       	cli
    12f4:	de bf       	out	0x3e, r29	; 62
    12f6:	0f be       	out	0x3f, r0	; 63
    12f8:	cd bf       	out	0x3d, r28	; 61
    12fa:	61 15       	cp	r22, r1
    12fc:	71 05       	cpc	r23, r1
    12fe:	81 05       	cpc	r24, r1
    1300:	91 05       	cpc	r25, r1
    1302:	19 f4       	brne	.+6      	; 0x130a <printi+0x26>
    1304:	80 e3       	ldi	r24, 0x30	; 48
    1306:	ec dd       	rcall	.-1064   	; 0xee0 <printc>
    1308:	3a c1       	rjmp	.+628    	; 0x157e <printi+0x29a>
    130a:	61 15       	cp	r22, r1
    130c:	71 05       	cpc	r23, r1
    130e:	81 05       	cpc	r24, r1
    1310:	20 e8       	ldi	r18, 0x80	; 128
    1312:	92 07       	cpc	r25, r18
    1314:	09 f4       	brne	.+2      	; 0x1318 <printi+0x34>
    1316:	33 c1       	rjmp	.+614    	; 0x157e <printi+0x29a>
    1318:	fe 01       	movw	r30, r28
    131a:	31 96       	adiw	r30, 0x01	; 1
    131c:	2c e0       	ldi	r18, 0x0C	; 12
    131e:	df 01       	movw	r26, r30
    1320:	1d 92       	st	X+, r1
    1322:	2a 95       	dec	r18
    1324:	e9 f7       	brne	.-6      	; 0x1320 <printi+0x3c>
    1326:	20 e3       	ldi	r18, 0x30	; 48
    1328:	2b 87       	std	Y+11, r18	; 0x0b
    132a:	2a 87       	std	Y+10, r18	; 0x0a
    132c:	29 87       	std	Y+9, r18	; 0x09
    132e:	28 87       	std	Y+8, r18	; 0x08
    1330:	2f 83       	std	Y+7, r18	; 0x07
    1332:	2e 83       	std	Y+6, r18	; 0x06
    1334:	2d 83       	std	Y+5, r18	; 0x05
    1336:	2c 83       	std	Y+4, r18	; 0x04
    1338:	2b 83       	std	Y+3, r18	; 0x03
    133a:	2a 83       	std	Y+2, r18	; 0x02
    133c:	29 83       	std	Y+1, r18	; 0x01
    133e:	99 23       	and	r25, r25
    1340:	5c f4       	brge	.+22     	; 0x1358 <printi+0x74>
    1342:	9b 01       	movw	r18, r22
    1344:	ac 01       	movw	r20, r24
    1346:	88 27       	eor	r24, r24
    1348:	99 27       	eor	r25, r25
    134a:	dc 01       	movw	r26, r24
    134c:	82 1b       	sub	r24, r18
    134e:	93 0b       	sbc	r25, r19
    1350:	a4 0b       	sbc	r26, r20
    1352:	b5 0b       	sbc	r27, r21
    1354:	11 e0       	ldi	r17, 0x01	; 1
    1356:	03 c0       	rjmp	.+6      	; 0x135e <printi+0x7a>
    1358:	dc 01       	movw	r26, r24
    135a:	cb 01       	movw	r24, r22
    135c:	10 e0       	ldi	r17, 0x00	; 0
    135e:	81 30       	cpi	r24, 0x01	; 1
    1360:	3a ec       	ldi	r19, 0xCA	; 202
    1362:	93 07       	cpc	r25, r19
    1364:	3a e9       	ldi	r19, 0x9A	; 154
    1366:	a3 07       	cpc	r26, r19
    1368:	3b e3       	ldi	r19, 0x3B	; 59
    136a:	b3 07       	cpc	r27, r19
    136c:	8c f0       	brlt	.+34     	; 0x1390 <printi+0xac>
    136e:	21 e3       	ldi	r18, 0x31	; 49
    1370:	01 c0       	rjmp	.+2      	; 0x1374 <printi+0x90>
    1372:	23 2f       	mov	r18, r19
    1374:	9a 5c       	subi	r25, 0xCA	; 202
    1376:	aa 49       	sbci	r26, 0x9A	; 154
    1378:	bb 43       	sbci	r27, 0x3B	; 59
    137a:	31 e0       	ldi	r19, 0x01	; 1
    137c:	32 0f       	add	r19, r18
    137e:	81 30       	cpi	r24, 0x01	; 1
    1380:	4a ec       	ldi	r20, 0xCA	; 202
    1382:	94 07       	cpc	r25, r20
    1384:	4a e9       	ldi	r20, 0x9A	; 154
    1386:	a4 07       	cpc	r26, r20
    1388:	4b e3       	ldi	r20, 0x3B	; 59
    138a:	b4 07       	cpc	r27, r20
    138c:	94 f7       	brge	.-28     	; 0x1372 <printi+0x8e>
    138e:	2a 83       	std	Y+2, r18	; 0x02
    1390:	81 15       	cp	r24, r1
    1392:	51 ee       	ldi	r21, 0xE1	; 225
    1394:	95 07       	cpc	r25, r21
    1396:	55 ef       	ldi	r21, 0xF5	; 245
    1398:	a5 07       	cpc	r26, r21
    139a:	55 e0       	ldi	r21, 0x05	; 5
    139c:	b5 07       	cpc	r27, r21
    139e:	8c f0       	brlt	.+34     	; 0x13c2 <printi+0xde>
    13a0:	21 e3       	ldi	r18, 0x31	; 49
    13a2:	01 c0       	rjmp	.+2      	; 0x13a6 <printi+0xc2>
    13a4:	23 2f       	mov	r18, r19
    13a6:	91 5e       	subi	r25, 0xE1	; 225
    13a8:	a5 4f       	sbci	r26, 0xF5	; 245
    13aa:	b5 40       	sbci	r27, 0x05	; 5
    13ac:	31 e0       	ldi	r19, 0x01	; 1
    13ae:	32 0f       	add	r19, r18
    13b0:	81 15       	cp	r24, r1
    13b2:	41 ee       	ldi	r20, 0xE1	; 225
    13b4:	94 07       	cpc	r25, r20
    13b6:	45 ef       	ldi	r20, 0xF5	; 245
    13b8:	a4 07       	cpc	r26, r20
    13ba:	45 e0       	ldi	r20, 0x05	; 5
    13bc:	b4 07       	cpc	r27, r20
    13be:	94 f7       	brge	.-28     	; 0x13a4 <printi+0xc0>
    13c0:	2b 83       	std	Y+3, r18	; 0x03
    13c2:	80 38       	cpi	r24, 0x80	; 128
    13c4:	56 e9       	ldi	r21, 0x96	; 150
    13c6:	95 07       	cpc	r25, r21
    13c8:	58 e9       	ldi	r21, 0x98	; 152
    13ca:	a5 07       	cpc	r26, r21
    13cc:	b1 05       	cpc	r27, r1
    13ce:	8c f0       	brlt	.+34     	; 0x13f2 <printi+0x10e>
    13d0:	21 e3       	ldi	r18, 0x31	; 49
    13d2:	01 c0       	rjmp	.+2      	; 0x13d6 <printi+0xf2>
    13d4:	23 2f       	mov	r18, r19
    13d6:	80 58       	subi	r24, 0x80	; 128
    13d8:	96 49       	sbci	r25, 0x96	; 150
    13da:	a8 49       	sbci	r26, 0x98	; 152
    13dc:	b1 09       	sbc	r27, r1
    13de:	31 e0       	ldi	r19, 0x01	; 1
    13e0:	32 0f       	add	r19, r18
    13e2:	80 38       	cpi	r24, 0x80	; 128
    13e4:	46 e9       	ldi	r20, 0x96	; 150
    13e6:	94 07       	cpc	r25, r20
    13e8:	48 e9       	ldi	r20, 0x98	; 152
    13ea:	a4 07       	cpc	r26, r20
    13ec:	b1 05       	cpc	r27, r1
    13ee:	94 f7       	brge	.-28     	; 0x13d4 <printi+0xf0>
    13f0:	2c 83       	std	Y+4, r18	; 0x04
    13f2:	80 34       	cpi	r24, 0x40	; 64
    13f4:	52 e4       	ldi	r21, 0x42	; 66
    13f6:	95 07       	cpc	r25, r21
    13f8:	5f e0       	ldi	r21, 0x0F	; 15
    13fa:	a5 07       	cpc	r26, r21
    13fc:	b1 05       	cpc	r27, r1
    13fe:	8c f0       	brlt	.+34     	; 0x1422 <printi+0x13e>
    1400:	21 e3       	ldi	r18, 0x31	; 49
    1402:	01 c0       	rjmp	.+2      	; 0x1406 <printi+0x122>
    1404:	23 2f       	mov	r18, r19
    1406:	80 54       	subi	r24, 0x40	; 64
    1408:	92 44       	sbci	r25, 0x42	; 66
    140a:	af 40       	sbci	r26, 0x0F	; 15
    140c:	b1 09       	sbc	r27, r1
    140e:	31 e0       	ldi	r19, 0x01	; 1
    1410:	32 0f       	add	r19, r18
    1412:	80 34       	cpi	r24, 0x40	; 64
    1414:	42 e4       	ldi	r20, 0x42	; 66
    1416:	94 07       	cpc	r25, r20
    1418:	4f e0       	ldi	r20, 0x0F	; 15
    141a:	a4 07       	cpc	r26, r20
    141c:	b1 05       	cpc	r27, r1
    141e:	94 f7       	brge	.-28     	; 0x1404 <printi+0x120>
    1420:	2d 83       	std	Y+5, r18	; 0x05
    1422:	80 3a       	cpi	r24, 0xA0	; 160
    1424:	56 e8       	ldi	r21, 0x86	; 134
    1426:	95 07       	cpc	r25, r21
    1428:	51 e0       	ldi	r21, 0x01	; 1
    142a:	a5 07       	cpc	r26, r21
    142c:	b1 05       	cpc	r27, r1
    142e:	8c f0       	brlt	.+34     	; 0x1452 <printi+0x16e>
    1430:	21 e3       	ldi	r18, 0x31	; 49
    1432:	01 c0       	rjmp	.+2      	; 0x1436 <printi+0x152>
    1434:	23 2f       	mov	r18, r19
    1436:	80 5a       	subi	r24, 0xA0	; 160
    1438:	96 48       	sbci	r25, 0x86	; 134
    143a:	a1 40       	sbci	r26, 0x01	; 1
    143c:	b1 09       	sbc	r27, r1
    143e:	31 e0       	ldi	r19, 0x01	; 1
    1440:	32 0f       	add	r19, r18
    1442:	80 3a       	cpi	r24, 0xA0	; 160
    1444:	46 e8       	ldi	r20, 0x86	; 134
    1446:	94 07       	cpc	r25, r20
    1448:	41 e0       	ldi	r20, 0x01	; 1
    144a:	a4 07       	cpc	r26, r20
    144c:	b1 05       	cpc	r27, r1
    144e:	94 f7       	brge	.-28     	; 0x1434 <printi+0x150>
    1450:	2e 83       	std	Y+6, r18	; 0x06
    1452:	80 31       	cpi	r24, 0x10	; 16
    1454:	57 e2       	ldi	r21, 0x27	; 39
    1456:	95 07       	cpc	r25, r21
    1458:	a1 05       	cpc	r26, r1
    145a:	b1 05       	cpc	r27, r1
    145c:	84 f0       	brlt	.+32     	; 0x147e <printi+0x19a>
    145e:	21 e3       	ldi	r18, 0x31	; 49
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <printi+0x180>
    1462:	23 2f       	mov	r18, r19
    1464:	80 51       	subi	r24, 0x10	; 16
    1466:	97 42       	sbci	r25, 0x27	; 39
    1468:	a1 09       	sbc	r26, r1
    146a:	b1 09       	sbc	r27, r1
    146c:	31 e0       	ldi	r19, 0x01	; 1
    146e:	32 0f       	add	r19, r18
    1470:	80 31       	cpi	r24, 0x10	; 16
    1472:	47 e2       	ldi	r20, 0x27	; 39
    1474:	94 07       	cpc	r25, r20
    1476:	a1 05       	cpc	r26, r1
    1478:	b1 05       	cpc	r27, r1
    147a:	9c f7       	brge	.-26     	; 0x1462 <printi+0x17e>
    147c:	2f 83       	std	Y+7, r18	; 0x07
    147e:	88 3e       	cpi	r24, 0xE8	; 232
    1480:	53 e0       	ldi	r21, 0x03	; 3
    1482:	95 07       	cpc	r25, r21
    1484:	a1 05       	cpc	r26, r1
    1486:	b1 05       	cpc	r27, r1
    1488:	84 f0       	brlt	.+32     	; 0x14aa <printi+0x1c6>
    148a:	21 e3       	ldi	r18, 0x31	; 49
    148c:	01 c0       	rjmp	.+2      	; 0x1490 <printi+0x1ac>
    148e:	23 2f       	mov	r18, r19
    1490:	88 5e       	subi	r24, 0xE8	; 232
    1492:	93 40       	sbci	r25, 0x03	; 3
    1494:	a1 09       	sbc	r26, r1
    1496:	b1 09       	sbc	r27, r1
    1498:	31 e0       	ldi	r19, 0x01	; 1
    149a:	32 0f       	add	r19, r18
    149c:	88 3e       	cpi	r24, 0xE8	; 232
    149e:	43 e0       	ldi	r20, 0x03	; 3
    14a0:	94 07       	cpc	r25, r20
    14a2:	a1 05       	cpc	r26, r1
    14a4:	b1 05       	cpc	r27, r1
    14a6:	9c f7       	brge	.-26     	; 0x148e <printi+0x1aa>
    14a8:	28 87       	std	Y+8, r18	; 0x08
    14aa:	84 36       	cpi	r24, 0x64	; 100
    14ac:	91 05       	cpc	r25, r1
    14ae:	a1 05       	cpc	r26, r1
    14b0:	b1 05       	cpc	r27, r1
    14b2:	7c f0       	brlt	.+30     	; 0x14d2 <printi+0x1ee>
    14b4:	21 e3       	ldi	r18, 0x31	; 49
    14b6:	01 c0       	rjmp	.+2      	; 0x14ba <printi+0x1d6>
    14b8:	23 2f       	mov	r18, r19
    14ba:	84 56       	subi	r24, 0x64	; 100
    14bc:	91 09       	sbc	r25, r1
    14be:	a1 09       	sbc	r26, r1
    14c0:	b1 09       	sbc	r27, r1
    14c2:	31 e0       	ldi	r19, 0x01	; 1
    14c4:	32 0f       	add	r19, r18
    14c6:	84 36       	cpi	r24, 0x64	; 100
    14c8:	91 05       	cpc	r25, r1
    14ca:	a1 05       	cpc	r26, r1
    14cc:	b1 05       	cpc	r27, r1
    14ce:	a4 f7       	brge	.-24     	; 0x14b8 <printi+0x1d4>
    14d0:	29 87       	std	Y+9, r18	; 0x09
    14d2:	8a 30       	cpi	r24, 0x0A	; 10
    14d4:	91 05       	cpc	r25, r1
    14d6:	a1 05       	cpc	r26, r1
    14d8:	b1 05       	cpc	r27, r1
    14da:	74 f0       	brlt	.+28     	; 0x14f8 <printi+0x214>
    14dc:	21 e3       	ldi	r18, 0x31	; 49
    14de:	01 c0       	rjmp	.+2      	; 0x14e2 <printi+0x1fe>
    14e0:	23 2f       	mov	r18, r19
    14e2:	0a 97       	sbiw	r24, 0x0a	; 10
    14e4:	a1 09       	sbc	r26, r1
    14e6:	b1 09       	sbc	r27, r1
    14e8:	31 e0       	ldi	r19, 0x01	; 1
    14ea:	32 0f       	add	r19, r18
    14ec:	8a 30       	cpi	r24, 0x0A	; 10
    14ee:	91 05       	cpc	r25, r1
    14f0:	a1 05       	cpc	r26, r1
    14f2:	b1 05       	cpc	r27, r1
    14f4:	ac f7       	brge	.-22     	; 0x14e0 <printi+0x1fc>
    14f6:	2a 87       	std	Y+10, r18	; 0x0a
    14f8:	18 16       	cp	r1, r24
    14fa:	19 06       	cpc	r1, r25
    14fc:	1a 06       	cpc	r1, r26
    14fe:	1b 06       	cpc	r1, r27
    1500:	0c f0       	brlt	.+2      	; 0x1504 <printi+0x220>
    1502:	3b c0       	rjmp	.+118    	; 0x157a <printi+0x296>
    1504:	ac 01       	movw	r20, r24
    1506:	bd 01       	movw	r22, r26
    1508:	41 50       	subi	r20, 0x01	; 1
    150a:	51 09       	sbc	r21, r1
    150c:	61 09       	sbc	r22, r1
    150e:	71 09       	sbc	r23, r1
    1510:	d9 f7       	brne	.-10     	; 0x1508 <printi+0x224>
    1512:	80 5d       	subi	r24, 0xD0	; 208
    1514:	8b 87       	std	Y+11, r24	; 0x0b
    1516:	31 c0       	rjmp	.+98     	; 0x157a <printi+0x296>
    1518:	98 2f       	mov	r25, r24
    151a:	81 e0       	ldi	r24, 0x01	; 1
    151c:	89 0f       	add	r24, r25
    151e:	e1 e0       	ldi	r30, 0x01	; 1
    1520:	f0 e0       	ldi	r31, 0x00	; 0
    1522:	ec 0f       	add	r30, r28
    1524:	fd 1f       	adc	r31, r29
    1526:	e8 0f       	add	r30, r24
    1528:	f1 1d       	adc	r31, r1
    152a:	20 81       	ld	r18, Z
    152c:	20 33       	cpi	r18, 0x30	; 48
    152e:	a1 f3       	breq	.-24     	; 0x1518 <printi+0x234>
    1530:	11 23       	and	r17, r17
    1532:	31 f0       	breq	.+12     	; 0x1540 <printi+0x25c>
    1534:	fe 01       	movw	r30, r28
    1536:	e9 0f       	add	r30, r25
    1538:	f1 1d       	adc	r31, r1
    153a:	8d e2       	ldi	r24, 0x2D	; 45
    153c:	81 83       	std	Z+1, r24	; 0x01
    153e:	89 2f       	mov	r24, r25
    1540:	4a e0       	ldi	r20, 0x0A	; 10
    1542:	48 1b       	sub	r20, r24
    1544:	20 e0       	ldi	r18, 0x00	; 0
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	e1 e0       	ldi	r30, 0x01	; 1
    154a:	f0 e0       	ldi	r31, 0x00	; 0
    154c:	ec 0f       	add	r30, r28
    154e:	fd 1f       	adc	r31, r29
    1550:	e2 0f       	add	r30, r18
    1552:	f1 1d       	adc	r31, r1
    1554:	df 01       	movw	r26, r30
    1556:	a8 0f       	add	r26, r24
    1558:	b9 1f       	adc	r27, r25
    155a:	3c 91       	ld	r19, X
    155c:	30 83       	st	Z, r19
    155e:	2f 5f       	subi	r18, 0xFF	; 255
    1560:	42 17       	cp	r20, r18
    1562:	90 f7       	brcc	.-28     	; 0x1548 <printi+0x264>
    1564:	e1 e0       	ldi	r30, 0x01	; 1
    1566:	f0 e0       	ldi	r31, 0x00	; 0
    1568:	ec 0f       	add	r30, r28
    156a:	fd 1f       	adc	r31, r29
    156c:	e2 0f       	add	r30, r18
    156e:	f1 1d       	adc	r31, r1
    1570:	10 82       	st	Z, r1
    1572:	ce 01       	movw	r24, r28
    1574:	01 96       	adiw	r24, 0x01	; 1
    1576:	8f de       	rcall	.-738    	; 0x1296 <prints>
    1578:	02 c0       	rjmp	.+4      	; 0x157e <printi+0x29a>
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	ce cf       	rjmp	.-100    	; 0x151a <printi+0x236>
    157e:	2c 96       	adiw	r28, 0x0c	; 12
    1580:	0f b6       	in	r0, 0x3f	; 63
    1582:	f8 94       	cli
    1584:	de bf       	out	0x3e, r29	; 62
    1586:	0f be       	out	0x3f, r0	; 63
    1588:	cd bf       	out	0x3d, r28	; 61
    158a:	df 91       	pop	r29
    158c:	cf 91       	pop	r28
    158e:	1f 91       	pop	r17
    1590:	08 95       	ret

00001592 <I2C_Init>:
    1592:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    1596:	88 e4       	ldi	r24, 0x48	; 72
    1598:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    159c:	08 95       	ret

0000159e <I2C_Repeated_Start>:

uint8_t I2C_Repeated_Start(char slave_read_address)			/* I2C repeated start function */
{
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
    159e:	94 ea       	ldi	r25, 0xA4	; 164
    15a0:	90 93 74 00 	sts	0x0074, r25	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
    15a4:	e4 e7       	ldi	r30, 0x74	; 116
    15a6:	f0 e0       	ldi	r31, 0x00	; 0
    15a8:	90 81       	ld	r25, Z
    15aa:	99 23       	and	r25, r25
    15ac:	ec f7       	brge	.-6      	; 0x15a8 <I2C_Repeated_Start+0xa>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
    15ae:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
    15b2:	98 7f       	andi	r25, 0xF8	; 248
    15b4:	90 31       	cpi	r25, 0x10	; 16
    15b6:	99 f4       	brne	.+38     	; 0x15de <I2C_Repeated_Start+0x40>
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
    15b8:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
    15bc:	84 e8       	ldi	r24, 0x84	; 132
    15be:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
    15c2:	e4 e7       	ldi	r30, 0x74	; 116
    15c4:	f0 e0       	ldi	r31, 0x00	; 0
    15c6:	80 81       	ld	r24, Z
    15c8:	88 23       	and	r24, r24
    15ca:	ec f7       	brge	.-6      	; 0x15c6 <I2C_Repeated_Start+0x28>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
    15cc:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    15d0:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
    15d2:	80 34       	cpi	r24, 0x40	; 64
    15d4:	31 f0       	breq	.+12     	; 0x15e2 <I2C_Repeated_Start+0x44>
	return 1;												/* If yes then return 1 to indicate ack received */
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
    15d6:	80 32       	cpi	r24, 0x20	; 32
    15d8:	31 f0       	breq	.+12     	; 0x15e6 <I2C_Repeated_Start+0x48>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
    15da:	83 e0       	ldi	r24, 0x03	; 3
    15dc:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
    15de:	80 e0       	ldi	r24, 0x00	; 0
    15e0:	08 95       	ret
	TWDR = slave_read_address;								/* If yes then write SLA+R in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received */
    15e2:	81 e0       	ldi	r24, 0x01	; 1
    15e4:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
    15e6:	82 e0       	ldi	r24, 0x02	; 2
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
    15e8:	08 95       	ret

000015ea <I2C_Stop>:

void I2C_Stop()												/* I2C stop function */
{
	TWCR=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);					/* Enable TWI, generate stop condition and clear interrupt flag */
    15ea:	84 e9       	ldi	r24, 0x94	; 148
    15ec:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(TWCR & (1<<TWSTO));								/* Wait until stop condition execution */
    15f0:	e4 e7       	ldi	r30, 0x74	; 116
    15f2:	f0 e0       	ldi	r31, 0x00	; 0
    15f4:	80 81       	ld	r24, Z
    15f6:	84 fd       	sbrc	r24, 4
    15f8:	fd cf       	rjmp	.-6      	; 0x15f4 <I2C_Stop+0xa>
}
    15fa:	08 95       	ret

000015fc <I2C_Start_Wait>:

void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
    15fc:	bf 92       	push	r11
    15fe:	cf 92       	push	r12
    1600:	df 92       	push	r13
    1602:	ef 92       	push	r14
    1604:	ff 92       	push	r15
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	cf 93       	push	r28
    160c:	df 93       	push	r29
    160e:	b8 2e       	mov	r11, r24
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
    1610:	c4 e7       	ldi	r28, 0x74	; 116
    1612:	d0 e0       	ldi	r29, 0x00	; 0
    1614:	0f 2e       	mov	r0, r31
    1616:	f4 ea       	ldi	r31, 0xA4	; 164
    1618:	df 2e       	mov	r13, r31
    161a:	f0 2d       	mov	r31, r0
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
    161c:	01 e7       	ldi	r16, 0x71	; 113
    161e:	10 e0       	ldi	r17, 0x00	; 0
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
		continue;											/* If no then continue with start loop again */
		TWDR = slave_write_address;							/* If yes then write SLA+W in TWI data register */
    1620:	0f 2e       	mov	r0, r31
    1622:	f3 e7       	ldi	r31, 0x73	; 115
    1624:	ef 2e       	mov	r14, r31
    1626:	f1 2c       	mov	r15, r1
    1628:	f0 2d       	mov	r31, r0
		TWCR = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
    162a:	0f 2e       	mov	r0, r31
    162c:	f4 e8       	ldi	r31, 0x84	; 132
    162e:	cf 2e       	mov	r12, r31
    1630:	f0 2d       	mov	r31, r0
void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
    1632:	d8 82       	st	Y, r13
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
    1634:	88 81       	ld	r24, Y
    1636:	88 23       	and	r24, r24
    1638:	ec f7       	brge	.-6      	; 0x1634 <I2C_Start_Wait+0x38>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
    163a:	f8 01       	movw	r30, r16
    163c:	80 81       	ld	r24, Z
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
    163e:	88 7f       	andi	r24, 0xF8	; 248
    1640:	88 30       	cpi	r24, 0x08	; 8
    1642:	b9 f7       	brne	.-18     	; 0x1632 <I2C_Start_Wait+0x36>
		continue;											/* If no then continue with start loop again */
		TWDR = slave_write_address;							/* If yes then write SLA+W in TWI data register */
    1644:	f7 01       	movw	r30, r14
    1646:	b0 82       	st	Z, r11
		TWCR = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
    1648:	c8 82       	st	Y, r12
		while (!(TWCR & (1<<TWINT)));						/* Wait until TWI finish its current job (Write operation) */
    164a:	88 81       	ld	r24, Y
    164c:	88 23       	and	r24, r24
    164e:	ec f7       	brge	.-6      	; 0x164a <I2C_Start_Wait+0x4e>
		status = TWSR & 0xF8;								/* Read TWI status register with masking lower three bits */
    1650:	f8 01       	movw	r30, r16
    1652:	80 81       	ld	r24, Z
		if (status != 0x18 )								/* Check weather SLA+W transmitted & ack received or not? */
    1654:	88 7f       	andi	r24, 0xF8	; 248
    1656:	88 31       	cpi	r24, 0x18	; 24
    1658:	11 f0       	breq	.+4      	; 0x165e <I2C_Start_Wait+0x62>
		{
			I2C_Stop();										/* If not then generate stop condition */
    165a:	c7 df       	rcall	.-114    	; 0x15ea <I2C_Stop>
			continue;										/* continue with start loop again */
    165c:	ea cf       	rjmp	.-44     	; 0x1632 <I2C_Start_Wait+0x36>
		}
		break;												/* If yes then break loop */
	}
}
    165e:	df 91       	pop	r29
    1660:	cf 91       	pop	r28
    1662:	1f 91       	pop	r17
    1664:	0f 91       	pop	r16
    1666:	ff 90       	pop	r15
    1668:	ef 90       	pop	r14
    166a:	df 90       	pop	r13
    166c:	cf 90       	pop	r12
    166e:	bf 90       	pop	r11
    1670:	08 95       	ret

00001672 <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR = data;											/* Copy data in TWI data register */
    1672:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
    1676:	84 e8       	ldi	r24, 0x84	; 132
    1678:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
    167c:	e4 e7       	ldi	r30, 0x74	; 116
    167e:	f0 e0       	ldi	r31, 0x00	; 0
    1680:	80 81       	ld	r24, Z
    1682:	88 23       	and	r24, r24
    1684:	ec f7       	brge	.-6      	; 0x1680 <I2C_Write+0xe>
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
    1686:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
    168a:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
    168c:	88 32       	cpi	r24, 0x28	; 40
    168e:	21 f0       	breq	.+8      	; 0x1698 <I2C_Write+0x26>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
    1690:	80 33       	cpi	r24, 0x30	; 48
    1692:	21 f0       	breq	.+8      	; 0x169c <I2C_Write+0x2a>
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
    1694:	82 e0       	ldi	r24, 0x02	; 2
    1696:	08 95       	ret
	TWDR = data;											/* Copy data in TWI data register */
	TWCR = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
    1698:	80 e0       	ldi	r24, 0x00	; 0
    169a:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
    169c:	81 e0       	ldi	r24, 0x01	; 1
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
}
    169e:	08 95       	ret

000016a0 <I2C_Read_Ack>:

char I2C_Read_Ack()										/* I2C read ack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
    16a0:	84 ec       	ldi	r24, 0xC4	; 196
    16a2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
    16a6:	e4 e7       	ldi	r30, 0x74	; 116
    16a8:	f0 e0       	ldi	r31, 0x00	; 0
    16aa:	80 81       	ld	r24, Z
    16ac:	88 23       	and	r24, r24
    16ae:	ec f7       	brge	.-6      	; 0x16aa <I2C_Read_Ack+0xa>
	return TWDR;											/* Return received data */
    16b0:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
}
    16b4:	08 95       	ret

000016b6 <I2C_Read_Nack>:

char I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
    16b6:	84 e8       	ldi	r24, 0x84	; 132
    16b8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (!(TWCR & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
    16bc:	e4 e7       	ldi	r30, 0x74	; 116
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	80 81       	ld	r24, Z
    16c2:	88 23       	and	r24, r24
    16c4:	ec f7       	brge	.-6      	; 0x16c0 <I2C_Read_Nack+0xa>
	return TWDR;											/* Return received data */
    16c6:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
}
    16ca:	08 95       	ret

000016cc <MPU6050_Init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    16cc:	2f ef       	ldi	r18, 0xFF	; 255
    16ce:	82 e5       	ldi	r24, 0x52	; 82
    16d0:	97 e0       	ldi	r25, 0x07	; 7
    16d2:	21 50       	subi	r18, 0x01	; 1
    16d4:	80 40       	sbci	r24, 0x00	; 0
    16d6:	90 40       	sbci	r25, 0x00	; 0
    16d8:	e1 f7       	brne	.-8      	; 0x16d2 <MPU6050_Init+0x6>
    16da:	00 c0       	rjmp	.+0      	; 0x16dc <MPU6050_Init+0x10>
    16dc:	00 00       	nop
float Acc_x,Acc_y,Acc_z,Temperature,Gyro_x,Gyro_y,Gyro_z;

void MPU6050_Init()										/* Gyro initialization function */
{
	_delay_ms(150);										/* Power up time >100ms */
	I2C_Start_Wait(0xD0);								/* Start with device write address */
    16de:	80 ed       	ldi	r24, 0xD0	; 208
    16e0:	8d df       	rcall	.-230    	; 0x15fc <I2C_Start_Wait>
	I2C_Write(SMPLRT_DIV);								/* Write to sample rate register */
    16e2:	89 e1       	ldi	r24, 0x19	; 25
    16e4:	c6 df       	rcall	.-116    	; 0x1672 <I2C_Write>
	I2C_Write(0x07);									/* 1KHz sample rate */
    16e6:	87 e0       	ldi	r24, 0x07	; 7
    16e8:	c4 df       	rcall	.-120    	; 0x1672 <I2C_Write>
	I2C_Stop();
    16ea:	7f df       	rcall	.-258    	; 0x15ea <I2C_Stop>

	I2C_Start_Wait(0xD0);
    16ec:	80 ed       	ldi	r24, 0xD0	; 208
    16ee:	86 df       	rcall	.-244    	; 0x15fc <I2C_Start_Wait>
	I2C_Write(PWR_MGMT_1);								/* Write to power management register */
    16f0:	8b e6       	ldi	r24, 0x6B	; 107
    16f2:	bf df       	rcall	.-130    	; 0x1672 <I2C_Write>
	I2C_Write(0x01);									/* X axis gyroscope reference frequency */
    16f4:	81 e0       	ldi	r24, 0x01	; 1
    16f6:	bd df       	rcall	.-134    	; 0x1672 <I2C_Write>
	I2C_Stop();
    16f8:	78 df       	rcall	.-272    	; 0x15ea <I2C_Stop>

	I2C_Start_Wait(0xD0);
    16fa:	80 ed       	ldi	r24, 0xD0	; 208
    16fc:	7f df       	rcall	.-258    	; 0x15fc <I2C_Start_Wait>
	I2C_Write(CONFIG);									/* Write to Configuration register */
    16fe:	8a e1       	ldi	r24, 0x1A	; 26
    1700:	b8 df       	rcall	.-144    	; 0x1672 <I2C_Write>
	I2C_Write(0x00);									/* Fs = 8KHz */
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	b6 df       	rcall	.-148    	; 0x1672 <I2C_Write>
	I2C_Stop();
    1706:	71 df       	rcall	.-286    	; 0x15ea <I2C_Stop>

	I2C_Start_Wait(0xD0);
    1708:	80 ed       	ldi	r24, 0xD0	; 208
	I2C_Write(GYRO_CONFIG);								/* Write to Gyro configuration register */
    170a:	78 df       	rcall	.-272    	; 0x15fc <I2C_Start_Wait>
    170c:	8b e1       	ldi	r24, 0x1B	; 27
    170e:	b1 df       	rcall	.-158    	; 0x1672 <I2C_Write>
	I2C_Write(0x18);									/* Full scale range +/- 2000 degree/C */
    1710:	88 e1       	ldi	r24, 0x18	; 24
    1712:	af df       	rcall	.-162    	; 0x1672 <I2C_Write>
    1714:	6a df       	rcall	.-300    	; 0x15ea <I2C_Stop>
	I2C_Stop();
    1716:	80 ed       	ldi	r24, 0xD0	; 208
    1718:	71 df       	rcall	.-286    	; 0x15fc <I2C_Start_Wait>

	I2C_Start_Wait(0xD0);
    171a:	88 e3       	ldi	r24, 0x38	; 56
    171c:	aa df       	rcall	.-172    	; 0x1672 <I2C_Write>
    171e:	81 e0       	ldi	r24, 0x01	; 1
	I2C_Write(INT_ENABLE);								/* Write to interrupt enable register */
    1720:	a8 df       	rcall	.-176    	; 0x1672 <I2C_Write>
    1722:	63 cf       	rjmp	.-314    	; 0x15ea <I2C_Stop>
    1724:	08 95       	ret

00001726 <MPU_Start_Loc>:
	I2C_Write(0x01);
    1726:	80 ed       	ldi	r24, 0xD0	; 208
    1728:	69 df       	rcall	.-302    	; 0x15fc <I2C_Start_Wait>
    172a:	8b e3       	ldi	r24, 0x3B	; 59
	I2C_Stop();
    172c:	a2 df       	rcall	.-188    	; 0x1672 <I2C_Write>
    172e:	81 ed       	ldi	r24, 0xD1	; 209
    1730:	36 cf       	rjmp	.-404    	; 0x159e <I2C_Repeated_Start>

void MPU_Start_Loc()
{
	I2C_Start_Wait(0xD0);								/* I2C start with device write address */
	I2C_Write(ACCEL_XOUT_H);							/* Write start location address from where to read */ 
	I2C_Repeated_Start(0xD1);							/* I2C start with device read address */
    1732:	08 95       	ret

00001734 <Read_RawValue>:
    1734:	cf 93       	push	r28
}

void Read_RawValue()
{
	MPU_Start_Loc();									/* Read Gyro values */
    1736:	f7 df       	rcall	.-18     	; 0x1726 <MPU_Start_Loc>
	Acc_x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
    1738:	b3 df       	rcall	.-154    	; 0x16a0 <I2C_Read_Ack>
    173a:	c8 2f       	mov	r28, r24
    173c:	b1 df       	rcall	.-158    	; 0x16a0 <I2C_Read_Ack>
    173e:	6c 2f       	mov	r22, r28
    1740:	70 e0       	ldi	r23, 0x00	; 0
    1742:	76 2f       	mov	r23, r22
    1744:	66 27       	eor	r22, r22
    1746:	68 2b       	or	r22, r24
    1748:	07 2e       	mov	r0, r23
    174a:	00 0c       	add	r0, r0
    174c:	88 0b       	sbc	r24, r24
    174e:	99 0b       	sbc	r25, r25
    1750:	0e 94 f7 29 	call	0x53ee	; 0x53ee <__floatsisf>
    1754:	60 93 81 0b 	sts	0x0B81, r22	; 0x800b81 <Acc_x>
    1758:	70 93 82 0b 	sts	0x0B82, r23	; 0x800b82 <Acc_x+0x1>
    175c:	80 93 83 0b 	sts	0x0B83, r24	; 0x800b83 <Acc_x+0x2>
    1760:	90 93 84 0b 	sts	0x0B84, r25	; 0x800b84 <Acc_x+0x3>
	Acc_y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
    1764:	9d df       	rcall	.-198    	; 0x16a0 <I2C_Read_Ack>
    1766:	c8 2f       	mov	r28, r24
    1768:	9b df       	rcall	.-202    	; 0x16a0 <I2C_Read_Ack>
    176a:	6c 2f       	mov	r22, r28
    176c:	70 e0       	ldi	r23, 0x00	; 0
    176e:	76 2f       	mov	r23, r22
    1770:	66 27       	eor	r22, r22
    1772:	68 2b       	or	r22, r24
    1774:	07 2e       	mov	r0, r23
    1776:	00 0c       	add	r0, r0
    1778:	88 0b       	sbc	r24, r24
    177a:	99 0b       	sbc	r25, r25
    177c:	0e 94 f7 29 	call	0x53ee	; 0x53ee <__floatsisf>
    1780:	60 93 d5 06 	sts	0x06D5, r22	; 0x8006d5 <Acc_y>
    1784:	70 93 d6 06 	sts	0x06D6, r23	; 0x8006d6 <Acc_y+0x1>
    1788:	80 93 d7 06 	sts	0x06D7, r24	; 0x8006d7 <Acc_y+0x2>
    178c:	90 93 d8 06 	sts	0x06D8, r25	; 0x8006d8 <Acc_y+0x3>
	Acc_z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
    1790:	87 df       	rcall	.-242    	; 0x16a0 <I2C_Read_Ack>
    1792:	c8 2f       	mov	r28, r24
    1794:	85 df       	rcall	.-246    	; 0x16a0 <I2C_Read_Ack>
    1796:	6c 2f       	mov	r22, r28
    1798:	70 e0       	ldi	r23, 0x00	; 0
    179a:	76 2f       	mov	r23, r22
    179c:	66 27       	eor	r22, r22
    179e:	68 2b       	or	r22, r24
    17a0:	07 2e       	mov	r0, r23
    17a2:	00 0c       	add	r0, r0
    17a4:	88 0b       	sbc	r24, r24
    17a6:	99 0b       	sbc	r25, r25
    17a8:	0e 94 f7 29 	call	0x53ee	; 0x53ee <__floatsisf>
    17ac:	60 93 60 06 	sts	0x0660, r22	; 0x800660 <Acc_z>
    17b0:	70 93 61 06 	sts	0x0661, r23	; 0x800661 <Acc_z+0x1>
    17b4:	80 93 62 06 	sts	0x0662, r24	; 0x800662 <Acc_z+0x2>
    17b8:	90 93 63 06 	sts	0x0663, r25	; 0x800663 <Acc_z+0x3>
	Temperature = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
    17bc:	71 df       	rcall	.-286    	; 0x16a0 <I2C_Read_Ack>
    17be:	c8 2f       	mov	r28, r24
    17c0:	6f df       	rcall	.-290    	; 0x16a0 <I2C_Read_Ack>
    17c2:	6c 2f       	mov	r22, r28
    17c4:	70 e0       	ldi	r23, 0x00	; 0
    17c6:	76 2f       	mov	r23, r22
    17c8:	66 27       	eor	r22, r22
    17ca:	68 2b       	or	r22, r24
    17cc:	07 2e       	mov	r0, r23
    17ce:	00 0c       	add	r0, r0
    17d0:	88 0b       	sbc	r24, r24
    17d2:	99 0b       	sbc	r25, r25
    17d4:	0e 94 f7 29 	call	0x53ee	; 0x53ee <__floatsisf>
    17d8:	60 93 d1 06 	sts	0x06D1, r22	; 0x8006d1 <Temperature>
    17dc:	70 93 d2 06 	sts	0x06D2, r23	; 0x8006d2 <Temperature+0x1>
    17e0:	80 93 d3 06 	sts	0x06D3, r24	; 0x8006d3 <Temperature+0x2>
    17e4:	90 93 d4 06 	sts	0x06D4, r25	; 0x8006d4 <Temperature+0x3>
	Gyro_x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
    17e8:	5b df       	rcall	.-330    	; 0x16a0 <I2C_Read_Ack>
    17ea:	c8 2f       	mov	r28, r24
    17ec:	59 df       	rcall	.-334    	; 0x16a0 <I2C_Read_Ack>
    17ee:	6c 2f       	mov	r22, r28
    17f0:	70 e0       	ldi	r23, 0x00	; 0
    17f2:	76 2f       	mov	r23, r22
    17f4:	66 27       	eor	r22, r22
    17f6:	68 2b       	or	r22, r24
    17f8:	07 2e       	mov	r0, r23
    17fa:	00 0c       	add	r0, r0
    17fc:	88 0b       	sbc	r24, r24
    17fe:	99 0b       	sbc	r25, r25
    1800:	0e 94 f7 29 	call	0x53ee	; 0x53ee <__floatsisf>
    1804:	60 93 cd 06 	sts	0x06CD, r22	; 0x8006cd <Gyro_x>
    1808:	70 93 ce 06 	sts	0x06CE, r23	; 0x8006ce <Gyro_x+0x1>
    180c:	80 93 cf 06 	sts	0x06CF, r24	; 0x8006cf <Gyro_x+0x2>
    1810:	90 93 d0 06 	sts	0x06D0, r25	; 0x8006d0 <Gyro_x+0x3>
	Gyro_y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
    1814:	45 df       	rcall	.-374    	; 0x16a0 <I2C_Read_Ack>
    1816:	c8 2f       	mov	r28, r24
    1818:	43 df       	rcall	.-378    	; 0x16a0 <I2C_Read_Ack>
    181a:	6c 2f       	mov	r22, r28
    181c:	70 e0       	ldi	r23, 0x00	; 0
    181e:	76 2f       	mov	r23, r22
    1820:	66 27       	eor	r22, r22
    1822:	68 2b       	or	r22, r24
    1824:	07 2e       	mov	r0, r23
    1826:	00 0c       	add	r0, r0
    1828:	88 0b       	sbc	r24, r24
    182a:	99 0b       	sbc	r25, r25
    182c:	0e 94 f7 29 	call	0x53ee	; 0x53ee <__floatsisf>
    1830:	60 93 be 0b 	sts	0x0BBE, r22	; 0x800bbe <Gyro_y>
    1834:	70 93 bf 0b 	sts	0x0BBF, r23	; 0x800bbf <Gyro_y+0x1>
    1838:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <Gyro_y+0x2>
    183c:	90 93 c1 0b 	sts	0x0BC1, r25	; 0x800bc1 <Gyro_y+0x3>
	Gyro_z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Nack());
    1840:	2f df       	rcall	.-418    	; 0x16a0 <I2C_Read_Ack>
    1842:	c8 2f       	mov	r28, r24
    1844:	38 df       	rcall	.-400    	; 0x16b6 <I2C_Read_Nack>
    1846:	6c 2f       	mov	r22, r28
    1848:	70 e0       	ldi	r23, 0x00	; 0
    184a:	76 2f       	mov	r23, r22
    184c:	66 27       	eor	r22, r22
    184e:	68 2b       	or	r22, r24
    1850:	07 2e       	mov	r0, r23
    1852:	00 0c       	add	r0, r0
    1854:	88 0b       	sbc	r24, r24
    1856:	99 0b       	sbc	r25, r25
    1858:	0e 94 f7 29 	call	0x53ee	; 0x53ee <__floatsisf>
    185c:	60 93 49 0b 	sts	0x0B49, r22	; 0x800b49 <Gyro_z>
    1860:	70 93 4a 0b 	sts	0x0B4A, r23	; 0x800b4a <Gyro_z+0x1>
    1864:	80 93 4b 0b 	sts	0x0B4B, r24	; 0x800b4b <Gyro_z+0x2>
    1868:	90 93 4c 0b 	sts	0x0B4C, r25	; 0x800b4c <Gyro_z+0x3>
    186c:	be de       	rcall	.-644    	; 0x15ea <I2C_Stop>
	I2C_Stop();
    186e:	cf 91       	pop	r28
    1870:	08 95       	ret

00001872 <read_gyro>:
}
    1872:	60 df       	rcall	.-320    	; 0x1734 <Read_RawValue>
    1874:	20 e0       	ldi	r18, 0x00	; 0
	float Xg=0,Yg=0,Zg=0;
int read_gyro()
{									/* Initialize MPU6050 */
		Read_RawValue();

		Xa = Acc_x/16384.0;								/* Divide raw value by sensitivity scale factor to get real values */
    1876:	30 e0       	ldi	r19, 0x00	; 0
    1878:	40 e8       	ldi	r20, 0x80	; 128
    187a:	58 e3       	ldi	r21, 0x38	; 56
    187c:	60 91 81 0b 	lds	r22, 0x0B81	; 0x800b81 <Acc_x>
    1880:	70 91 82 0b 	lds	r23, 0x0B82	; 0x800b82 <Acc_x+0x1>
    1884:	80 91 83 0b 	lds	r24, 0x0B83	; 0x800b83 <Acc_x+0x2>
    1888:	90 91 84 0b 	lds	r25, 0x0B84	; 0x800b84 <Acc_x+0x3>
    188c:	0e 94 e4 2a 	call	0x55c8	; 0x55c8 <__mulsf3>
    1890:	60 93 99 0b 	sts	0x0B99, r22	; 0x800b99 <Xa>
    1894:	70 93 9a 0b 	sts	0x0B9A, r23	; 0x800b9a <Xa+0x1>
    1898:	80 93 9b 0b 	sts	0x0B9B, r24	; 0x800b9b <Xa+0x2>
    189c:	90 93 9c 0b 	sts	0x0B9C, r25	; 0x800b9c <Xa+0x3>
		Ya = Acc_y/16384.0;
    18a0:	20 e0       	ldi	r18, 0x00	; 0
    18a2:	30 e0       	ldi	r19, 0x00	; 0
    18a4:	40 e8       	ldi	r20, 0x80	; 128
    18a6:	58 e3       	ldi	r21, 0x38	; 56
    18a8:	60 91 d5 06 	lds	r22, 0x06D5	; 0x8006d5 <Acc_y>
    18ac:	70 91 d6 06 	lds	r23, 0x06D6	; 0x8006d6 <Acc_y+0x1>
    18b0:	80 91 d7 06 	lds	r24, 0x06D7	; 0x8006d7 <Acc_y+0x2>
    18b4:	90 91 d8 06 	lds	r25, 0x06D8	; 0x8006d8 <Acc_y+0x3>
    18b8:	0e 94 e4 2a 	call	0x55c8	; 0x55c8 <__mulsf3>
    18bc:	60 93 a2 0b 	sts	0x0BA2, r22	; 0x800ba2 <Ya>
    18c0:	70 93 a3 0b 	sts	0x0BA3, r23	; 0x800ba3 <Ya+0x1>
    18c4:	80 93 a4 0b 	sts	0x0BA4, r24	; 0x800ba4 <Ya+0x2>
    18c8:	90 93 a5 0b 	sts	0x0BA5, r25	; 0x800ba5 <Ya+0x3>
}
    18cc:	08 95       	ret

000018ce <timer0_init>:
int fcon=1;
int gcon=1;

void timer0_init()
{
	TIMSK |= (1<<TOIE0) ;
    18ce:	87 b7       	in	r24, 0x37	; 55
    18d0:	81 60       	ori	r24, 0x01	; 1
    18d2:	87 bf       	out	0x37, r24	; 55
	OCR0=0;
    18d4:	11 be       	out	0x31, r1	; 49
	TCCR0 |= (0 << CS02)|(1 << CS01)|(0 << CS00);
    18d6:	83 b7       	in	r24, 0x33	; 51
    18d8:	82 60       	ori	r24, 0x02	; 2
    18da:	83 bf       	out	0x33, r24	; 51
	TCNT0=0x88;
    18dc:	88 e8       	ldi	r24, 0x88	; 136
    18de:	82 bf       	out	0x32, r24	; 50
    18e0:	08 95       	ret

000018e2 <timer2_init>:
}
void timer2_init()
{
	TIMSK|=(1<<TOIE2);
    18e2:	87 b7       	in	r24, 0x37	; 55
    18e4:	80 64       	ori	r24, 0x40	; 64
    18e6:	87 bf       	out	0x37, r24	; 55
	OCR2=0;
    18e8:	13 bc       	out	0x23, r1	; 35
	TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (1<<CS21) | (1<<CS20);
    18ea:	83 e0       	ldi	r24, 0x03	; 3
    18ec:	85 bd       	out	0x25, r24	; 37
	TCNT2=0x06;
    18ee:	86 e0       	ldi	r24, 0x06	; 6
    18f0:	84 bd       	out	0x24, r24	; 36
    18f2:	08 95       	ret

000018f4 <__vector_16>:
}

ISR(TIMER0_OVF_vect)
{
    18f4:	1f 92       	push	r1
    18f6:	0f 92       	push	r0
    18f8:	0f b6       	in	r0, 0x3f	; 63
    18fa:	0f 92       	push	r0
    18fc:	11 24       	eor	r1, r1
    18fe:	2f 93       	push	r18
    1900:	3f 93       	push	r19
    1902:	8f 93       	push	r24
    1904:	9f 93       	push	r25
	TCNT0=0x88;
    1906:	88 e8       	ldi	r24, 0x88	; 136
    1908:	82 bf       	out	0x32, r24	; 50
	if(spwmtrig==1)
    190a:	80 91 30 06 	lds	r24, 0x0630	; 0x800630 <spwmtrig>
    190e:	90 91 31 06 	lds	r25, 0x0631	; 0x800631 <spwmtrig+0x1>
    1912:	01 97       	sbiw	r24, 0x01	; 1
    1914:	41 f5       	brne	.+80     	; 0x1966 <__vector_16+0x72>
	{
		zz++;
    1916:	80 91 2c 06 	lds	r24, 0x062C	; 0x80062c <zz>
    191a:	90 91 2d 06 	lds	r25, 0x062D	; 0x80062d <zz+0x1>
    191e:	01 96       	adiw	r24, 0x01	; 1
    1920:	90 93 2d 06 	sts	0x062D, r25	; 0x80062d <zz+0x1>
    1924:	80 93 2c 06 	sts	0x062C, r24	; 0x80062c <zz>
		if(zz<spwmon)PORTE|=(1<<pwm);
    1928:	20 91 32 06 	lds	r18, 0x0632	; 0x800632 <spwmon>
    192c:	30 91 33 06 	lds	r19, 0x0633	; 0x800633 <spwmon+0x1>
    1930:	82 17       	cp	r24, r18
    1932:	93 07       	cpc	r25, r19
    1934:	64 f4       	brge	.+24     	; 0x194e <__vector_16+0x5a>
    1936:	1d 9a       	sbi	0x03, 5	; 3
		if(zz>=spwmon)PORTE&=~(1<<pwm);
    1938:	20 91 2c 06 	lds	r18, 0x062C	; 0x80062c <zz>
    193c:	30 91 2d 06 	lds	r19, 0x062D	; 0x80062d <zz+0x1>
    1940:	80 91 32 06 	lds	r24, 0x0632	; 0x800632 <spwmon>
    1944:	90 91 33 06 	lds	r25, 0x0633	; 0x800633 <spwmon+0x1>
    1948:	28 17       	cp	r18, r24
    194a:	39 07       	cpc	r19, r25
    194c:	0c f0       	brlt	.+2      	; 0x1950 <__vector_16+0x5c>
    194e:	1d 98       	cbi	0x03, 5	; 3
		if(zz>=400){zz=0;}
    1950:	80 91 2c 06 	lds	r24, 0x062C	; 0x80062c <zz>
    1954:	90 91 2d 06 	lds	r25, 0x062D	; 0x80062d <zz+0x1>
    1958:	80 39       	cpi	r24, 0x90	; 144
    195a:	91 40       	sbci	r25, 0x01	; 1
    195c:	24 f0       	brlt	.+8      	; 0x1966 <__vector_16+0x72>
    195e:	10 92 2d 06 	sts	0x062D, r1	; 0x80062d <zz+0x1>
    1962:	10 92 2c 06 	sts	0x062C, r1	; 0x80062c <zz>
	}
}
    1966:	9f 91       	pop	r25
    1968:	8f 91       	pop	r24
    196a:	3f 91       	pop	r19
    196c:	2f 91       	pop	r18
    196e:	0f 90       	pop	r0
    1970:	0f be       	out	0x3f, r0	; 63
    1972:	0f 90       	pop	r0
    1974:	1f 90       	pop	r1
    1976:	18 95       	reti

00001978 <__vector_10>:
ISR(TIMER2_OVF_vect)
{
    1978:	1f 92       	push	r1
    197a:	0f 92       	push	r0
    197c:	0f b6       	in	r0, 0x3f	; 63
    197e:	0f 92       	push	r0
    1980:	11 24       	eor	r1, r1
    1982:	2f 93       	push	r18
    1984:	3f 93       	push	r19
    1986:	8f 93       	push	r24
    1988:	9f 93       	push	r25
	TCNT2=0x06;
    198a:	86 e0       	ldi	r24, 0x06	; 6
    198c:	84 bd       	out	0x24, r24	; 36
	
	t++;
    198e:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    1992:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    1996:	01 96       	adiw	r24, 0x01	; 1
	if(t>=2000){t=0;}
    1998:	80 3d       	cpi	r24, 0xD0	; 208
    199a:	27 e0       	ldi	r18, 0x07	; 7
    199c:	92 07       	cpc	r25, r18
    199e:	2c f4       	brge	.+10     	; 0x19aa <__vector_10+0x32>
}
ISR(TIMER2_OVF_vect)
{
	TCNT2=0x06;
	
	t++;
    19a0:	90 93 4a 06 	sts	0x064A, r25	; 0x80064a <t+0x1>
    19a4:	80 93 49 06 	sts	0x0649, r24	; 0x800649 <t>
    19a8:	04 c0       	rjmp	.+8      	; 0x19b2 <__vector_10+0x3a>
	if(t>=2000){t=0;}
    19aa:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    19ae:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
	
	if(ttrig==1)
    19b2:	80 91 5b 06 	lds	r24, 0x065B	; 0x80065b <ttrig>
    19b6:	90 91 5c 06 	lds	r25, 0x065C	; 0x80065c <ttrig+0x1>
    19ba:	01 97       	sbiw	r24, 0x01	; 1
    19bc:	49 f4       	brne	.+18     	; 0x19d0 <__vector_10+0x58>
	{tint++;}
    19be:	80 91 38 06 	lds	r24, 0x0638	; 0x800638 <tint>
    19c2:	90 91 39 06 	lds	r25, 0x0639	; 0x800639 <tint+0x1>
    19c6:	01 96       	adiw	r24, 0x01	; 1
    19c8:	90 93 39 06 	sts	0x0639, r25	; 0x800639 <tint+0x1>
    19cc:	80 93 38 06 	sts	0x0638, r24	; 0x800638 <tint>
	
	if(tint>=1000)
    19d0:	80 91 38 06 	lds	r24, 0x0638	; 0x800638 <tint>
    19d4:	90 91 39 06 	lds	r25, 0x0639	; 0x800639 <tint+0x1>
    19d8:	88 3e       	cpi	r24, 0xE8	; 232
    19da:	93 40       	sbci	r25, 0x03	; 3
    19dc:	0c f4       	brge	.+2      	; 0x19e0 <__vector_10+0x68>
    19de:	43 c0       	rjmp	.+134    	; 0x1a66 <__vector_10+0xee>
	{
		sc++;
    19e0:	80 91 3d 06 	lds	r24, 0x063D	; 0x80063d <sc>
    19e4:	90 91 3e 06 	lds	r25, 0x063E	; 0x80063e <sc+0x1>
    19e8:	01 96       	adiw	r24, 0x01	; 1
		if(sc==60){sc=0; mc++;}
    19ea:	8c 33       	cpi	r24, 0x3C	; 60
    19ec:	91 05       	cpc	r25, r1
    19ee:	29 f0       	breq	.+10     	; 0x19fa <__vector_10+0x82>
	if(ttrig==1)
	{tint++;}
	
	if(tint>=1000)
	{
		sc++;
    19f0:	90 93 3e 06 	sts	0x063E, r25	; 0x80063e <sc+0x1>
    19f4:	80 93 3d 06 	sts	0x063D, r24	; 0x80063d <sc>
    19f8:	0d c0       	rjmp	.+26     	; 0x1a14 <__vector_10+0x9c>
		if(sc==60){sc=0; mc++;}
    19fa:	10 92 3e 06 	sts	0x063E, r1	; 0x80063e <sc+0x1>
    19fe:	10 92 3d 06 	sts	0x063D, r1	; 0x80063d <sc>
    1a02:	80 91 3f 06 	lds	r24, 0x063F	; 0x80063f <mc>
    1a06:	90 91 40 06 	lds	r25, 0x0640	; 0x800640 <mc+0x1>
    1a0a:	01 96       	adiw	r24, 0x01	; 1
    1a0c:	90 93 40 06 	sts	0x0640, r25	; 0x800640 <mc+0x1>
    1a10:	80 93 3f 06 	sts	0x063F, r24	; 0x80063f <mc>
		if(mc==60){mc=0; hc++;}
    1a14:	80 91 3f 06 	lds	r24, 0x063F	; 0x80063f <mc>
    1a18:	90 91 40 06 	lds	r25, 0x0640	; 0x800640 <mc+0x1>
    1a1c:	cc 97       	sbiw	r24, 0x3c	; 60
    1a1e:	69 f4       	brne	.+26     	; 0x1a3a <__vector_10+0xc2>
    1a20:	10 92 40 06 	sts	0x0640, r1	; 0x800640 <mc+0x1>
    1a24:	10 92 3f 06 	sts	0x063F, r1	; 0x80063f <mc>
    1a28:	80 91 41 06 	lds	r24, 0x0641	; 0x800641 <hc>
    1a2c:	90 91 42 06 	lds	r25, 0x0642	; 0x800642 <hc+0x1>
    1a30:	01 96       	adiw	r24, 0x01	; 1
    1a32:	90 93 42 06 	sts	0x0642, r25	; 0x800642 <hc+0x1>
    1a36:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <hc>
		if(hc==24){hc=0; mc=0; sc=0;}
    1a3a:	80 91 41 06 	lds	r24, 0x0641	; 0x800641 <hc>
    1a3e:	90 91 42 06 	lds	r25, 0x0642	; 0x800642 <hc+0x1>
    1a42:	48 97       	sbiw	r24, 0x18	; 24
    1a44:	61 f4       	brne	.+24     	; 0x1a5e <__vector_10+0xe6>
    1a46:	10 92 42 06 	sts	0x0642, r1	; 0x800642 <hc+0x1>
    1a4a:	10 92 41 06 	sts	0x0641, r1	; 0x800641 <hc>
    1a4e:	10 92 40 06 	sts	0x0640, r1	; 0x800640 <mc+0x1>
    1a52:	10 92 3f 06 	sts	0x063F, r1	; 0x80063f <mc>
    1a56:	10 92 3e 06 	sts	0x063E, r1	; 0x80063e <sc+0x1>
    1a5a:	10 92 3d 06 	sts	0x063D, r1	; 0x80063d <sc>
		
		tint=0;
    1a5e:	10 92 39 06 	sts	0x0639, r1	; 0x800639 <tint+0x1>
    1a62:	10 92 38 06 	sts	0x0638, r1	; 0x800638 <tint>
		
	}
	
	if(sel==1){lcnt++;}
    1a66:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    1a6a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    1a6e:	01 97       	sbiw	r24, 0x01	; 1
    1a70:	49 f4       	brne	.+18     	; 0x1a84 <__vector_10+0x10c>
    1a72:	80 91 fa 05 	lds	r24, 0x05FA	; 0x8005fa <lcnt>
    1a76:	90 91 fb 05 	lds	r25, 0x05FB	; 0x8005fb <lcnt+0x1>
    1a7a:	01 96       	adiw	r24, 0x01	; 1
    1a7c:	90 93 fb 05 	sts	0x05FB, r25	; 0x8005fb <lcnt+0x1>
    1a80:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <lcnt>
	
	if(fpwmtrig==1)
    1a84:	80 91 34 06 	lds	r24, 0x0634	; 0x800634 <fpwmtrig>
    1a88:	90 91 35 06 	lds	r25, 0x0635	; 0x800635 <fpwmtrig+0x1>
    1a8c:	01 97       	sbiw	r24, 0x01	; 1
    1a8e:	39 f5       	brne	.+78     	; 0x1ade <__vector_10+0x166>
	{
		z++;
    1a90:	80 91 2e 06 	lds	r24, 0x062E	; 0x80062e <z>
    1a94:	90 91 2f 06 	lds	r25, 0x062F	; 0x80062f <z+0x1>
    1a98:	01 96       	adiw	r24, 0x01	; 1
    1a9a:	90 93 2f 06 	sts	0x062F, r25	; 0x80062f <z+0x1>
    1a9e:	80 93 2e 06 	sts	0x062E, r24	; 0x80062e <z>
		if(z<=fpwmon)PORTB|=(1<<fan);
    1aa2:	20 91 36 06 	lds	r18, 0x0636	; 0x800636 <fpwmon>
    1aa6:	30 91 37 06 	lds	r19, 0x0637	; 0x800637 <fpwmon+0x1>
    1aaa:	28 17       	cp	r18, r24
    1aac:	39 07       	cpc	r19, r25
    1aae:	64 f0       	brlt	.+24     	; 0x1ac8 <__vector_10+0x150>
    1ab0:	c7 9a       	sbi	0x18, 7	; 24
		if(z>fpwmon)PORTB&=~(1<<fan);
    1ab2:	20 91 2e 06 	lds	r18, 0x062E	; 0x80062e <z>
    1ab6:	30 91 2f 06 	lds	r19, 0x062F	; 0x80062f <z+0x1>
    1aba:	80 91 36 06 	lds	r24, 0x0636	; 0x800636 <fpwmon>
    1abe:	90 91 37 06 	lds	r25, 0x0637	; 0x800637 <fpwmon+0x1>
    1ac2:	82 17       	cp	r24, r18
    1ac4:	93 07       	cpc	r25, r19
    1ac6:	0c f4       	brge	.+2      	; 0x1aca <__vector_10+0x152>
    1ac8:	c7 98       	cbi	0x18, 7	; 24
		if(z>=20){z=0;}
    1aca:	80 91 2e 06 	lds	r24, 0x062E	; 0x80062e <z>
    1ace:	90 91 2f 06 	lds	r25, 0x062F	; 0x80062f <z+0x1>
    1ad2:	44 97       	sbiw	r24, 0x14	; 20
    1ad4:	24 f0       	brlt	.+8      	; 0x1ade <__vector_10+0x166>
    1ad6:	10 92 2f 06 	sts	0x062F, r1	; 0x80062f <z+0x1>
    1ada:	10 92 2e 06 	sts	0x062E, r1	; 0x80062e <z>
	}
}
    1ade:	9f 91       	pop	r25
    1ae0:	8f 91       	pop	r24
    1ae2:	3f 91       	pop	r19
    1ae4:	2f 91       	pop	r18
    1ae6:	0f 90       	pop	r0
    1ae8:	0f be       	out	0x3f, r0	; 63
    1aea:	0f 90       	pop	r0
    1aec:	1f 90       	pop	r1
    1aee:	18 95       	reti

00001af0 <serial1_init>:

void serial1_init(void)
{
	DDRD |= 0x08;
    1af0:	8b 9a       	sbi	0x11, 3	; 17
	UBRR1H = baudrate[2]>>8;
    1af2:	e6 e1       	ldi	r30, 0x16	; 22
    1af4:	f1 e0       	ldi	r31, 0x01	; 1
    1af6:	85 81       	ldd	r24, Z+5	; 0x05
    1af8:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = baudrate[2];
    1afc:	84 81       	ldd	r24, Z+4	; 0x04
    1afe:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	UCSR1A = 0x02;
    1b02:	82 e0       	ldi	r24, 0x02	; 2
    1b04:	80 93 9b 00 	sts	0x009B, r24	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
	UCSR1B = 0x18;
    1b08:	88 e1       	ldi	r24, 0x18	; 24
    1b0a:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C = 0x06;
    1b0e:	86 e0       	ldi	r24, 0x06	; 6
    1b10:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
	temp = UDR1;
    1b14:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1b18:	80 93 48 07 	sts	0x0748, r24	; 0x800748 <temp>
    1b1c:	08 95       	ret

00001b1e <rx>:
}
unsigned char rx(void)
{
	while(1)
	{
		if((UCSR1A&0x80) != 0x00){return UDR1;}
    1b1e:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    1b22:	88 23       	and	r24, r24
    1b24:	1c f4       	brge	.+6      	; 0x1b2c <rx+0xe>
    1b26:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1b2a:	08 95       	ret
		else return key;
    1b2c:	80 91 3a 06 	lds	r24, 0x063A	; 0x80063a <key>
	}
	
}
    1b30:	08 95       	ret

00001b32 <serial_tx>:
void serial_tx(unsigned char tx_data)
{
	while((UCSR1A&0x20) == 0x00);
    1b32:	eb e9       	ldi	r30, 0x9B	; 155
    1b34:	f0 e0       	ldi	r31, 0x00	; 0
    1b36:	90 81       	ld	r25, Z
    1b38:	95 ff       	sbrs	r25, 5
    1b3a:	fd cf       	rjmp	.-6      	; 0x1b36 <serial_tx+0x4>
	UDR1 = tx_data;
    1b3c:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    1b40:	08 95       	ret

00001b42 <print>:
}
void print(unsigned char asd[50])
{
    1b42:	cf 93       	push	r28
    1b44:	df 93       	push	r29
    1b46:	ec 01       	movw	r28, r24
	int v=0;
	
	while(1)
	{
		serial_tx(asd[v]);
    1b48:	89 91       	ld	r24, Y+
    1b4a:	f3 df       	rcall	.-26     	; 0x1b32 <serial_tx>
		v++;
		
		if(asd[v]=='\0'){break;}
    1b4c:	88 81       	ld	r24, Y
    1b4e:	81 11       	cpse	r24, r1
    1b50:	fb cf       	rjmp	.-10     	; 0x1b48 <print+0x6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1b52:	85 e0       	ldi	r24, 0x05	; 5
    1b54:	8a 95       	dec	r24
    1b56:	f1 f7       	brne	.-4      	; 0x1b54 <print+0x12>
    1b58:	00 00       	nop
	}
	_delay_us(1);
}
    1b5a:	df 91       	pop	r29
    1b5c:	cf 91       	pop	r28
    1b5e:	08 95       	ret

00001b60 <Request>:

void Request()
{
	DDRD |= (1<<DHT11_PIN);
    1b60:	8e 9a       	sbi	0x11, 6	; 17
	PORTD &= ~(1<<DHT11_PIN);
    1b62:	96 98       	cbi	0x12, 6	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1b64:	2f ef       	ldi	r18, 0xFF	; 255
    1b66:	89 ef       	ldi	r24, 0xF9	; 249
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	21 50       	subi	r18, 0x01	; 1
    1b6c:	80 40       	sbci	r24, 0x00	; 0
    1b6e:	90 40       	sbci	r25, 0x00	; 0
    1b70:	e1 f7       	brne	.-8      	; 0x1b6a <Request+0xa>
    1b72:	00 c0       	rjmp	.+0      	; 0x1b74 <Request+0x14>
    1b74:	00 00       	nop
	_delay_ms(20);
	PORTD |= (1<<DHT11_PIN);
    1b76:	96 9a       	sbi	0x12, 6	; 18
    1b78:	08 95       	ret

00001b7a <Response>:
}
void Response()
{
	DDRD &= ~(1<<DHT11_PIN);
    1b7a:	8e 98       	cbi	0x11, 6	; 17
	while(PIND & (1<<DHT11_PIN));
    1b7c:	86 99       	sbic	0x10, 6	; 16
    1b7e:	fe cf       	rjmp	.-4      	; 0x1b7c <Response+0x2>
	while((PIND & (1<<DHT11_PIN))==0);
    1b80:	86 9b       	sbis	0x10, 6	; 16
    1b82:	fe cf       	rjmp	.-4      	; 0x1b80 <Response+0x6>
	while(PIND & (1<<DHT11_PIN));
    1b84:	86 99       	sbic	0x10, 6	; 16
    1b86:	fe cf       	rjmp	.-4      	; 0x1b84 <Response+0xa>
}
    1b88:	08 95       	ret

00001b8a <Receive_data>:
uint8_t Receive_data()
{
    1b8a:	88 e0       	ldi	r24, 0x08	; 8
    1b8c:	90 e0       	ldi	r25, 0x00	; 0
	for (int q=0; q<8; q++)
	{
		while((PIND & (1<<DHT11_PIN)) == 0);
    1b8e:	86 9b       	sbis	0x10, 6	; 16
    1b90:	fe cf       	rjmp	.-4      	; 0x1b8e <Receive_data+0x4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1b92:	20 ea       	ldi	r18, 0xA0	; 160
    1b94:	2a 95       	dec	r18
    1b96:	f1 f7       	brne	.-4      	; 0x1b94 <Receive_data+0xa>
		_delay_us(30);
		if(PIND & (1<<DHT11_PIN))
    1b98:	86 9b       	sbis	0x10, 6	; 16
    1b9a:	07 c0       	rjmp	.+14     	; 0x1baa <Receive_data+0x20>
		c = (c<<1)|(0x01);
    1b9c:	20 91 5d 06 	lds	r18, 0x065D	; 0x80065d <c>
    1ba0:	22 0f       	add	r18, r18
    1ba2:	21 60       	ori	r18, 0x01	; 1
    1ba4:	20 93 5d 06 	sts	0x065D, r18	; 0x80065d <c>
    1ba8:	05 c0       	rjmp	.+10     	; 0x1bb4 <Receive_data+0x2a>
		else
		c = (c<<1);
    1baa:	20 91 5d 06 	lds	r18, 0x065D	; 0x80065d <c>
    1bae:	22 0f       	add	r18, r18
    1bb0:	20 93 5d 06 	sts	0x065D, r18	; 0x80065d <c>
		while(PIND & (1<<DHT11_PIN));
    1bb4:	86 99       	sbic	0x10, 6	; 16
    1bb6:	fe cf       	rjmp	.-4      	; 0x1bb4 <Receive_data+0x2a>
    1bb8:	01 97       	sbiw	r24, 0x01	; 1
	while((PIND & (1<<DHT11_PIN))==0);
	while(PIND & (1<<DHT11_PIN));
}
uint8_t Receive_data()
{
	for (int q=0; q<8; q++)
    1bba:	49 f7       	brne	.-46     	; 0x1b8e <Receive_data+0x4>
		else
		c = (c<<1);
		while(PIND & (1<<DHT11_PIN));
	}
	return c;
}
    1bbc:	80 91 5d 06 	lds	r24, 0x065D	; 0x80065d <c>
    1bc0:	08 95       	ret

00001bc2 <adc_init>:

void adc_init()
{
	ADMUX=(1<<REFS0);
    1bc2:	80 e4       	ldi	r24, 0x40	; 64
    1bc4:	87 b9       	out	0x07, r24	; 7
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
    1bc6:	87 e8       	ldi	r24, 0x87	; 135
    1bc8:	86 b9       	out	0x06, r24	; 6
    1bca:	08 95       	ret

00001bcc <read_adc>:
}
uint16_t read_adc(uint8_t ch)
{
	ch=ch&0b00000111;
	ADMUX|=ch;
    1bcc:	97 b1       	in	r25, 0x07	; 7
    1bce:	87 70       	andi	r24, 0x07	; 7
    1bd0:	98 2b       	or	r25, r24
    1bd2:	97 b9       	out	0x07, r25	; 7
	ADCSRA|=(1<<ADSC);
    1bd4:	36 9a       	sbi	0x06, 6	; 6
	while(!(ADCSRA & (1<<ADIF)));
    1bd6:	34 9b       	sbis	0x06, 4	; 6
    1bd8:	fe cf       	rjmp	.-4      	; 0x1bd6 <read_adc+0xa>
	ADCSRA|=(1<<ADIF);
    1bda:	34 9a       	sbi	0x06, 4	; 6
	return(ADC);
    1bdc:	84 b1       	in	r24, 0x04	; 4
    1bde:	95 b1       	in	r25, 0x05	; 5
}
    1be0:	08 95       	ret

00001be2 <loading>:

void loading()
{
    1be2:	cf 93       	push	r28
    1be4:	cc e0       	ldi	r28, 0x0C	; 12
	int i=0;
	while(1)
	{
		for(t=0; t<200;)
    1be6:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    1bea:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
		{
			g_xy(16,8);
    1bee:	68 e0       	ldi	r22, 0x08	; 8
    1bf0:	70 e0       	ldi	r23, 0x00	; 0
    1bf2:	80 e1       	ldi	r24, 0x10	; 16
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Word Skills 2018");
    1bfa:	86 e3       	ldi	r24, 0x36	; 54
    1bfc:	91 e0       	ldi	r25, 0x01	; 1
    1bfe:	4b db       	rcall	.-2410   	; 0x1296 <prints>
			
			g_xy(10,24);
    1c00:	68 e1       	ldi	r22, 0x18	; 24
    1c02:	70 e0       	ldi	r23, 0x00	; 0
    1c04:	8a e0       	ldi	r24, 0x0A	; 10
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Smart Farm Manager");
    1c0c:	87 e4       	ldi	r24, 0x47	; 71
    1c0e:	91 e0       	ldi	r25, 0x01	; 1
    1c10:	42 db       	rcall	.-2428   	; 0x1296 <prints>
			
			g_xy(8,40);
    1c12:	68 e2       	ldi	r22, 0x28	; 40
    1c14:	70 e0       	ldi	r23, 0x00	; 0
    1c16:	88 e0       	ldi	r24, 0x08	; 8
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Now Initializing...");
    1c1e:	8a e5       	ldi	r24, 0x5A	; 90
    1c20:	91 e0       	ldi	r25, 0x01	; 1
    1c22:	39 db       	rcall	.-2446   	; 0x1296 <prints>
void loading()
{
	int i=0;
	while(1)
	{
		for(t=0; t<200;)
    1c24:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    1c28:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    1c2c:	88 3c       	cpi	r24, 0xC8	; 200
    1c2e:	91 05       	cpc	r25, r1
    1c30:	f4 f2       	brlt	.-68     	; 0x1bee <loading+0xc>
			g_xy(8,40);
			prints("Now Initializing...");
		}
		i++;
		
		g_f_rec(6,53,12*i,60);
    1c32:	2c e3       	ldi	r18, 0x3C	; 60
    1c34:	4c 2f       	mov	r20, r28
    1c36:	65 e3       	ldi	r22, 0x35	; 53
    1c38:	86 e0       	ldi	r24, 0x06	; 6
    1c3a:	58 d8       	rcall	.-3920   	; 0xcec <g_f_rec>
		g_render();
    1c3c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
    1c40:	c4 5f       	subi	r28, 0xF4	; 244
		if(i==10) break;
    1c42:	c4 38       	cpi	r28, 0x84	; 132
    1c44:	81 f6       	brne	.-96     	; 0x1be6 <loading+0x4>
	}
	
}
    1c46:	cf 91       	pop	r28
    1c48:	08 95       	ret

00001c4a <setprint>:
void setprint()
{
	g_clear();
    1c4a:	45 d8       	rcall	.-3958   	; 0xcd6 <g_clear>
	
	g_xy(60,0);
    1c4c:	60 e0       	ldi	r22, 0x00	; 0
    1c4e:	70 e0       	ldi	r23, 0x00	; 0
    1c50:	8c e3       	ldi	r24, 0x3C	; 60
    1c52:	90 e0       	ldi	r25, 0x00	; 0
    1c54:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("max");
    1c58:	8e e6       	ldi	r24, 0x6E	; 110
    1c5a:	91 e0       	ldi	r25, 0x01	; 1
    1c5c:	1c db       	rcall	.-2504   	; 0x1296 <prints>
	g_xy(96,0);
    1c5e:	60 e0       	ldi	r22, 0x00	; 0
    1c60:	70 e0       	ldi	r23, 0x00	; 0
    1c62:	80 e6       	ldi	r24, 0x60	; 96
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("min");
    1c6a:	82 e7       	ldi	r24, 0x72	; 114
    1c6c:	91 e0       	ldi	r25, 0x01	; 1
    1c6e:	13 db       	rcall	.-2522   	; 0x1296 <prints>
	
	g_xy(0,16);
    1c70:	60 e1       	ldi	r22, 0x10	; 16
    1c72:	70 e0       	ldi	r23, 0x00	; 0
    1c74:	80 e0       	ldi	r24, 0x00	; 0
    1c76:	90 e0       	ldi	r25, 0x00	; 0
    1c78:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("set_temp:");
    1c7c:	86 e7       	ldi	r24, 0x76	; 118
    1c7e:	91 e0       	ldi	r25, 0x01	; 1
    1c80:	0a db       	rcall	.-2540   	; 0x1296 <prints>
	g_xy(63,16);
    1c82:	60 e1       	ldi	r22, 0x10	; 16
    1c84:	70 e0       	ldi	r23, 0x00	; 0
    1c86:	8f e3       	ldi	r24, 0x3F	; 63
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	printi(maxtem);
    1c8e:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <maxtem>
    1c92:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <maxtem+0x1>
    1c96:	07 2e       	mov	r0, r23
    1c98:	00 0c       	add	r0, r0
    1c9a:	88 0b       	sbc	r24, r24
    1c9c:	99 0b       	sbc	r25, r25
    1c9e:	22 db       	rcall	.-2492   	; 0x12e4 <printi>
	g_xy(99,16);
    1ca0:	60 e1       	ldi	r22, 0x10	; 16
    1ca2:	70 e0       	ldi	r23, 0x00	; 0
    1ca4:	83 e6       	ldi	r24, 0x63	; 99
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	printi(mintem);
    1cac:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <mintem>
    1cb0:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <mintem+0x1>
    1cb4:	07 2e       	mov	r0, r23
    1cb6:	00 0c       	add	r0, r0
    1cb8:	88 0b       	sbc	r24, r24
    1cba:	99 0b       	sbc	r25, r25
    1cbc:	13 db       	rcall	.-2522   	; 0x12e4 <printi>
	
	g_xy(0,32);
    1cbe:	60 e2       	ldi	r22, 0x20	; 32
    1cc0:	70 e0       	ldi	r23, 0x00	; 0
    1cc2:	80 e0       	ldi	r24, 0x00	; 0
    1cc4:	90 e0       	ldi	r25, 0x00	; 0
    1cc6:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("set_humi:");
    1cca:	80 e8       	ldi	r24, 0x80	; 128
    1ccc:	91 e0       	ldi	r25, 0x01	; 1
    1cce:	e3 da       	rcall	.-2618   	; 0x1296 <prints>
	g_xy(63,32);
    1cd0:	60 e2       	ldi	r22, 0x20	; 32
    1cd2:	70 e0       	ldi	r23, 0x00	; 0
    1cd4:	8f e3       	ldi	r24, 0x3F	; 63
    1cd6:	90 e0       	ldi	r25, 0x00	; 0
    1cd8:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	printi(maxhum);
    1cdc:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <maxhum>
    1ce0:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <maxhum+0x1>
    1ce4:	07 2e       	mov	r0, r23
    1ce6:	00 0c       	add	r0, r0
    1ce8:	88 0b       	sbc	r24, r24
    1cea:	99 0b       	sbc	r25, r25
    1cec:	fb da       	rcall	.-2570   	; 0x12e4 <printi>
	g_xy(99,32);
    1cee:	60 e2       	ldi	r22, 0x20	; 32
    1cf0:	70 e0       	ldi	r23, 0x00	; 0
    1cf2:	83 e6       	ldi	r24, 0x63	; 99
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	printi(minhum);
    1cfa:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <minhum>
    1cfe:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <minhum+0x1>
    1d02:	07 2e       	mov	r0, r23
    1d04:	00 0c       	add	r0, r0
    1d06:	88 0b       	sbc	r24, r24
    1d08:	99 0b       	sbc	r25, r25
    1d0a:	ec da       	rcall	.-2600   	; 0x12e4 <printi>
	
	g_xy(0,48);
    1d0c:	60 e3       	ldi	r22, 0x30	; 48
    1d0e:	70 e0       	ldi	r23, 0x00	; 0
    1d10:	80 e0       	ldi	r24, 0x00	; 0
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("set_lux:");
    1d18:	8a e8       	ldi	r24, 0x8A	; 138
    1d1a:	91 e0       	ldi	r25, 0x01	; 1
    1d1c:	bc da       	rcall	.-2696   	; 0x1296 <prints>
	g_xy(63,48);
    1d1e:	60 e3       	ldi	r22, 0x30	; 48
    1d20:	70 e0       	ldi	r23, 0x00	; 0
    1d22:	8f e3       	ldi	r24, 0x3F	; 63
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	printi(maxlux);
    1d2a:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <maxlux>
    1d2e:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <maxlux+0x1>
    1d32:	07 2e       	mov	r0, r23
    1d34:	00 0c       	add	r0, r0
    1d36:	88 0b       	sbc	r24, r24
    1d38:	99 0b       	sbc	r25, r25
    1d3a:	d4 da       	rcall	.-2648   	; 0x12e4 <printi>
	g_xy(99,48);
    1d3c:	60 e3       	ldi	r22, 0x30	; 48
    1d3e:	70 e0       	ldi	r23, 0x00	; 0
    1d40:	83 e6       	ldi	r24, 0x63	; 99
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	printi(minlux);
    1d48:	60 91 51 06 	lds	r22, 0x0651	; 0x800651 <minlux>
    1d4c:	70 91 52 06 	lds	r23, 0x0652	; 0x800652 <minlux+0x1>
    1d50:	07 2e       	mov	r0, r23
    1d52:	00 0c       	add	r0, r0
    1d54:	88 0b       	sbc	r24, r24
    1d56:	99 0b       	sbc	r25, r25
    1d58:	c5 da       	rcall	.-2678   	; 0x12e4 <printi>
	
	g_render();
    1d5a:	0c 94 da 02 	jmp	0x5b4	; 0x5b4 <g_render>
    1d5e:	08 95       	ret

00001d60 <setting>:
}
void setting()
{
    1d60:	8f 92       	push	r8
    1d62:	9f 92       	push	r9
    1d64:	af 92       	push	r10
    1d66:	bf 92       	push	r11
    1d68:	cf 92       	push	r12
    1d6a:	df 92       	push	r13
    1d6c:	ef 92       	push	r14
    1d6e:	ff 92       	push	r15
    1d70:	0f 93       	push	r16
    1d72:	1f 93       	push	r17
    1d74:	cf 93       	push	r28
    1d76:	df 93       	push	r29
	int x1=60;
	int x2=76;
	int trig=5;
	int bk=0;
	
	DDRC=0x00;
    1d78:	14 ba       	out	0x14, r1	; 20

	setprint();
    1d7a:	67 df       	rcall	.-306    	; 0x1c4a <setprint>
	PORTC=0x0f;
    1d7c:	8f e0       	ldi	r24, 0x0F	; 15
    1d7e:	85 bb       	out	0x15, r24	; 21
	g_rec(x1,maxy1,x2,maxy2);
    1d80:	28 e1       	ldi	r18, 0x18	; 24
    1d82:	4c e4       	ldi	r20, 0x4C	; 76
    1d84:	6e e0       	ldi	r22, 0x0E	; 14
    1d86:	8c e3       	ldi	r24, 0x3C	; 60
    1d88:	0e 94 7e 05 	call	0xafc	; 0xafc <g_rec>
	g_render();
    1d8c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
{
	int maxy1=14;
	int maxy2=24;
	int x1=60;
	int x2=76;
	int trig=5;
    1d90:	0f 2e       	mov	r0, r31
    1d92:	f5 e0       	ldi	r31, 0x05	; 5
    1d94:	ef 2e       	mov	r14, r31
    1d96:	f1 2c       	mov	r15, r1
    1d98:	f0 2d       	mov	r31, r0
void setting()
{
	int maxy1=14;
	int maxy2=24;
	int x1=60;
	int x2=76;
    1d9a:	0f 2e       	mov	r0, r31
    1d9c:	fc e4       	ldi	r31, 0x4C	; 76
    1d9e:	af 2e       	mov	r10, r31
    1da0:	b1 2c       	mov	r11, r1
    1da2:	f0 2d       	mov	r31, r0
}
void setting()
{
	int maxy1=14;
	int maxy2=24;
	int x1=60;
    1da4:	cc e3       	ldi	r28, 0x3C	; 60
    1da6:	d0 e0       	ldi	r29, 0x00	; 0
	g_render();
}
void setting()
{
	int maxy1=14;
	int maxy2=24;
    1da8:	0f 2e       	mov	r0, r31
    1daa:	f8 e1       	ldi	r31, 0x18	; 24
    1dac:	cf 2e       	mov	r12, r31
    1dae:	d1 2c       	mov	r13, r1
    1db0:	f0 2d       	mov	r31, r0
	
	g_render();
}
void setting()
{
	int maxy1=14;
    1db2:	0e e0       	ldi	r16, 0x0E	; 14
    1db4:	10 e0       	ldi	r17, 0x00	; 0
	g_rec(x1,maxy1,x2,maxy2);
	g_render();
	while(1)
	{
		
		if(!(PINC&=(1<<sw1))||!(PINC&=(1<<sw3)))
    1db6:	83 b3       	in	r24, 0x13	; 19
    1db8:	81 70       	andi	r24, 0x01	; 1
    1dba:	83 bb       	out	0x13, r24	; 19
    1dbc:	88 23       	and	r24, r24
    1dbe:	29 f0       	breq	.+10     	; 0x1dca <setting+0x6a>
    1dc0:	83 b3       	in	r24, 0x13	; 19
    1dc2:	84 70       	andi	r24, 0x04	; 4
    1dc4:	83 bb       	out	0x13, r24	; 19
    1dc6:	81 11       	cpse	r24, r1
    1dc8:	23 c0       	rjmp	.+70     	; 0x1e10 <setting+0xb0>
		{
			while(!(PINC&=(1<<sw1))||!(PINC&=(1<<sw3))){}
    1dca:	83 b3       	in	r24, 0x13	; 19
    1dcc:	81 70       	andi	r24, 0x01	; 1
    1dce:	83 bb       	out	0x13, r24	; 19
    1dd0:	88 23       	and	r24, r24
    1dd2:	d9 f3       	breq	.-10     	; 0x1dca <setting+0x6a>
    1dd4:	83 b3       	in	r24, 0x13	; 19
    1dd6:	84 70       	andi	r24, 0x04	; 4
    1dd8:	83 bb       	out	0x13, r24	; 19
    1dda:	88 23       	and	r24, r24
    1ddc:	b1 f3       	breq	.-20     	; 0x1dca <setting+0x6a>
			if(x1==60){setprint(); x1=96; x2=112;}
    1dde:	cc 33       	cpi	r28, 0x3C	; 60
    1de0:	d1 05       	cpc	r29, r1
    1de2:	49 f4       	brne	.+18     	; 0x1df6 <setting+0x96>
    1de4:	32 df       	rcall	.-412    	; 0x1c4a <setprint>
    1de6:	0f 2e       	mov	r0, r31
    1de8:	f0 e7       	ldi	r31, 0x70	; 112
    1dea:	af 2e       	mov	r10, r31
    1dec:	b1 2c       	mov	r11, r1
    1dee:	f0 2d       	mov	r31, r0
    1df0:	c0 e6       	ldi	r28, 0x60	; 96
    1df2:	d0 e0       	ldi	r29, 0x00	; 0
			else{setprint(); x1-=36; x2-=36;}
    1df4:	05 c0       	rjmp	.+10     	; 0x1e00 <setting+0xa0>
    1df6:	29 df       	rcall	.-430    	; 0x1c4a <setprint>
    1df8:	a4 97       	sbiw	r28, 0x24	; 36
    1dfa:	24 e2       	ldi	r18, 0x24	; 36
    1dfc:	a2 1a       	sub	r10, r18
    1dfe:	b1 08       	sbc	r11, r1
			g_rec(x1,maxy1,x2,maxy2);
    1e00:	2c 2d       	mov	r18, r12
    1e02:	4a 2d       	mov	r20, r10
    1e04:	60 2f       	mov	r22, r16
    1e06:	8c 2f       	mov	r24, r28
    1e08:	0e 94 7e 05 	call	0xafc	; 0xafc <g_rec>
			g_render();
    1e0c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		}
		
		if(!(PINC&=(1<<sw2)))
    1e10:	83 b3       	in	r24, 0x13	; 19
    1e12:	82 70       	andi	r24, 0x02	; 2
    1e14:	83 bb       	out	0x13, r24	; 19
    1e16:	81 11       	cpse	r24, r1
    1e18:	1f c0       	rjmp	.+62     	; 0x1e58 <setting+0xf8>
		{
			while(!(PINC&=(1<<sw2))){}
    1e1a:	83 b3       	in	r24, 0x13	; 19
    1e1c:	82 70       	andi	r24, 0x02	; 2
    1e1e:	83 bb       	out	0x13, r24	; 19
    1e20:	88 23       	and	r24, r24
    1e22:	d9 f3       	breq	.-10     	; 0x1e1a <setting+0xba>
			if(maxy1==14){setprint(); maxy1=46; maxy2=56;}
    1e24:	0e 30       	cpi	r16, 0x0E	; 14
    1e26:	11 05       	cpc	r17, r1
    1e28:	49 f4       	brne	.+18     	; 0x1e3c <setting+0xdc>
    1e2a:	0f df       	rcall	.-482    	; 0x1c4a <setprint>
    1e2c:	0f 2e       	mov	r0, r31
    1e2e:	f8 e3       	ldi	r31, 0x38	; 56
    1e30:	cf 2e       	mov	r12, r31
    1e32:	d1 2c       	mov	r13, r1
    1e34:	f0 2d       	mov	r31, r0
    1e36:	0e e2       	ldi	r16, 0x2E	; 46
    1e38:	10 e0       	ldi	r17, 0x00	; 0
			else{setprint(); maxy1-=16; maxy2-=16;}
    1e3a:	06 c0       	rjmp	.+12     	; 0x1e48 <setting+0xe8>
    1e3c:	06 df       	rcall	.-500    	; 0x1c4a <setprint>
    1e3e:	00 51       	subi	r16, 0x10	; 16
    1e40:	11 09       	sbc	r17, r1
    1e42:	80 e1       	ldi	r24, 0x10	; 16
    1e44:	c8 1a       	sub	r12, r24
    1e46:	d1 08       	sbc	r13, r1
			g_rec(x1,maxy1,x2,maxy2);
    1e48:	2c 2d       	mov	r18, r12
    1e4a:	4a 2d       	mov	r20, r10
    1e4c:	60 2f       	mov	r22, r16
    1e4e:	8c 2f       	mov	r24, r28
    1e50:	0e 94 7e 05 	call	0xafc	; 0xafc <g_rec>
			g_render();
    1e54:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		}
		
		if(!(PINC&=(1<<sw4)))
    1e58:	83 b3       	in	r24, 0x13	; 19
    1e5a:	88 70       	andi	r24, 0x08	; 8
    1e5c:	83 bb       	out	0x13, r24	; 19
    1e5e:	81 11       	cpse	r24, r1
    1e60:	1f c0       	rjmp	.+62     	; 0x1ea0 <setting+0x140>
		{
			while(!(PINC&=(1<<sw4))){}
    1e62:	83 b3       	in	r24, 0x13	; 19
    1e64:	88 70       	andi	r24, 0x08	; 8
    1e66:	83 bb       	out	0x13, r24	; 19
    1e68:	88 23       	and	r24, r24
			if(maxy1==46){setprint(); maxy1=14; maxy2=24;}
    1e6a:	d9 f3       	breq	.-10     	; 0x1e62 <setting+0x102>
    1e6c:	0e 32       	cpi	r16, 0x2E	; 46
    1e6e:	11 05       	cpc	r17, r1
    1e70:	49 f4       	brne	.+18     	; 0x1e84 <setting+0x124>
    1e72:	eb de       	rcall	.-554    	; 0x1c4a <setprint>
    1e74:	0f 2e       	mov	r0, r31
    1e76:	f8 e1       	ldi	r31, 0x18	; 24
    1e78:	cf 2e       	mov	r12, r31
    1e7a:	d1 2c       	mov	r13, r1
    1e7c:	f0 2d       	mov	r31, r0
    1e7e:	0e e0       	ldi	r16, 0x0E	; 14
    1e80:	10 e0       	ldi	r17, 0x00	; 0
			else{setprint(); maxy1+=16; maxy2+=16;}
    1e82:	06 c0       	rjmp	.+12     	; 0x1e90 <setting+0x130>
    1e84:	e2 de       	rcall	.-572    	; 0x1c4a <setprint>
    1e86:	00 5f       	subi	r16, 0xF0	; 240
    1e88:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8a:	20 e1       	ldi	r18, 0x10	; 16
    1e8c:	c2 0e       	add	r12, r18
    1e8e:	d1 1c       	adc	r13, r1
			g_rec(x1,maxy1,x2,maxy2);
    1e90:	2c 2d       	mov	r18, r12
    1e92:	4a 2d       	mov	r20, r10
    1e94:	60 2f       	mov	r22, r16
    1e96:	8c 2f       	mov	r24, r28
    1e98:	0e 94 7e 05 	call	0xafc	; 0xafc <g_rec>
			g_render();
    1e9c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		}
		
		if(!(PINC&=(1<<sw5)))
    1ea0:	83 b3       	in	r24, 0x13	; 19
    1ea2:	80 71       	andi	r24, 0x10	; 16
    1ea4:	83 bb       	out	0x13, r24	; 19
    1ea6:	88 23       	and	r24, r24
    1ea8:	f1 f0       	breq	.+60     	; 0x1ee6 <setting+0x186>
    1eaa:	24 c0       	rjmp	.+72     	; 0x1ef4 <setting+0x194>
		{
			trig=0;
			while(!(PINC&=(1<<sw5)))
			{
				for(t=0; t<1000;){if(PINC&=(1<<sw5)){break;}}
    1eac:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    1eb0:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
    1eb4:	83 b3       	in	r24, 0x13	; 19
    1eb6:	80 71       	andi	r24, 0x10	; 16
    1eb8:	83 bb       	out	0x13, r24	; 19
    1eba:	81 11       	cpse	r24, r1
    1ebc:	07 c0       	rjmp	.+14     	; 0x1ecc <setting+0x16c>
    1ebe:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    1ec2:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    1ec6:	88 3e       	cpi	r24, 0xE8	; 232
    1ec8:	93 40       	sbci	r25, 0x03	; 3
    1eca:	a4 f3       	brlt	.-24     	; 0x1eb4 <setting+0x154>
				trig++;
    1ecc:	8f ef       	ldi	r24, 0xFF	; 255
    1ece:	e8 1a       	sub	r14, r24
    1ed0:	f8 0a       	sbc	r15, r24
				if(trig==3){while(!(PINC&=(1<<sw5))){} bk=1; break;}
    1ed2:	23 e0       	ldi	r18, 0x03	; 3
    1ed4:	e2 16       	cp	r14, r18
    1ed6:	f1 04       	cpc	r15, r1
    1ed8:	41 f4       	brne	.+16     	; 0x1eea <setting+0x18a>
    1eda:	83 b3       	in	r24, 0x13	; 19
    1edc:	80 71       	andi	r24, 0x10	; 16
    1ede:	83 bb       	out	0x13, r24	; 19
    1ee0:	88 23       	and	r24, r24
    1ee2:	d9 f3       	breq	.-10     	; 0x1eda <setting+0x17a>
    1ee4:	89 c1       	rjmp	.+786    	; 0x21f8 <setting+0x498>
    1ee6:	e1 2c       	mov	r14, r1
    1ee8:	f1 2c       	mov	r15, r1
		}
		
		if(!(PINC&=(1<<sw5)))
		{
			trig=0;
			while(!(PINC&=(1<<sw5)))
    1eea:	83 b3       	in	r24, 0x13	; 19
    1eec:	80 71       	andi	r24, 0x10	; 16
    1eee:	83 bb       	out	0x13, r24	; 19
    1ef0:	88 23       	and	r24, r24
    1ef2:	e1 f2       	breq	.-72     	; 0x1eac <setting+0x14c>
		}
		
		
		if(bk==1){break;}
		
		if(trig<3)
    1ef4:	83 e0       	ldi	r24, 0x03	; 3
    1ef6:	e8 16       	cp	r14, r24
    1ef8:	f1 04       	cpc	r15, r1
    1efa:	0c f0       	brlt	.+2      	; 0x1efe <setting+0x19e>
    1efc:	5c cf       	rjmp	.-328    	; 0x1db6 <setting+0x56>
		{
			trig=5;
			g_i_rec(x1,maxy1,x2,maxy2);
    1efe:	8c 2c       	mov	r8, r12
    1f00:	9a 2c       	mov	r9, r10
    1f02:	e0 2e       	mov	r14, r16
    1f04:	fc 2e       	mov	r15, r28
    1f06:	2c 2d       	mov	r18, r12
    1f08:	4a 2d       	mov	r20, r10
    1f0a:	60 2f       	mov	r22, r16
    1f0c:	8c 2f       	mov	r24, r28
    1f0e:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
			g_render();
    1f12:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			while(1)
			{
				if(!(PINC&=(1<<sw2)))
    1f16:	83 b3       	in	r24, 0x13	; 19
    1f18:	82 70       	andi	r24, 0x02	; 2
    1f1a:	83 bb       	out	0x13, r24	; 19
    1f1c:	81 11       	cpse	r24, r1
    1f1e:	90 c0       	rjmp	.+288    	; 0x2040 <setting+0x2e0>
				{
					while(!(PINC&=(1<<sw2))){}
    1f20:	83 b3       	in	r24, 0x13	; 19
    1f22:	82 70       	andi	r24, 0x02	; 2
    1f24:	83 bb       	out	0x13, r24	; 19
    1f26:	88 23       	and	r24, r24
    1f28:	d9 f3       	breq	.-10     	; 0x1f20 <setting+0x1c0>
					
					if(x1==60&&maxy1==14)
    1f2a:	cc 33       	cpi	r28, 0x3C	; 60
    1f2c:	d1 05       	cpc	r29, r1
    1f2e:	09 f0       	breq	.+2      	; 0x1f32 <setting+0x1d2>
    1f30:	3f c1       	rjmp	.+638    	; 0x21b0 <setting+0x450>
    1f32:	0e 30       	cpi	r16, 0x0E	; 14
    1f34:	11 05       	cpc	r17, r1
    1f36:	09 f0       	breq	.+2      	; 0x1f3a <setting+0x1da>
    1f38:	55 c1       	rjmp	.+682    	; 0x21e4 <setting+0x484>
					{
						if(maxtem<50)
    1f3a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <maxtem>
    1f3e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <maxtem+0x1>
    1f42:	82 33       	cpi	r24, 0x32	; 50
    1f44:	91 05       	cpc	r25, r1
    1f46:	0c f0       	brlt	.+2      	; 0x1f4a <setting+0x1ea>
						{maxtem++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
    1f48:	4f c0       	rjmp	.+158    	; 0x1fe8 <setting+0x288>
    1f4a:	01 96       	adiw	r24, 0x01	; 1
    1f4c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <maxtem+0x1>
    1f50:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <maxtem>
    1f54:	7a de       	rcall	.-780    	; 0x1c4a <setprint>
    1f56:	28 2d       	mov	r18, r8
    1f58:	49 2d       	mov	r20, r9
    1f5a:	6e 2d       	mov	r22, r14
    1f5c:	8f 2d       	mov	r24, r15
    1f5e:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    1f62:	42 c0       	rjmp	.+132    	; 0x1fe8 <setting+0x288>
					}
					if(x1==96&&maxy1==14)
    1f64:	0e 30       	cpi	r16, 0x0E	; 14
    1f66:	11 05       	cpc	r17, r1
    1f68:	09 f0       	breq	.+2      	; 0x1f6c <setting+0x20c>
    1f6a:	27 c1       	rjmp	.+590    	; 0x21ba <setting+0x45a>
					{
						if(mintem<25)
    1f6c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <mintem>
    1f70:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <mintem+0x1>
    1f74:	89 31       	cpi	r24, 0x19	; 25
    1f76:	91 05       	cpc	r25, r1
    1f78:	0c f0       	brlt	.+2      	; 0x1f7c <setting+0x21c>
						{mintem++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
    1f7a:	1f c1       	rjmp	.+574    	; 0x21ba <setting+0x45a>
    1f7c:	01 96       	adiw	r24, 0x01	; 1
    1f7e:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <mintem+0x1>
    1f82:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <mintem>
    1f86:	61 de       	rcall	.-830    	; 0x1c4a <setprint>
    1f88:	28 2d       	mov	r18, r8
    1f8a:	49 2d       	mov	r20, r9
    1f8c:	6e 2d       	mov	r22, r14
    1f8e:	8f 2d       	mov	r24, r15
    1f90:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    1f94:	12 c1       	rjmp	.+548    	; 0x21ba <setting+0x45a>
					}
					
					
					if(x1==60&&maxy1==30)
					{
						if(maxhum<95)
    1f96:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <maxhum>
    1f9a:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <maxhum+0x1>
    1f9e:	8f 35       	cpi	r24, 0x5F	; 95
    1fa0:	91 05       	cpc	r25, r1
						{maxhum++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
    1fa2:	14 f5       	brge	.+68     	; 0x1fe8 <setting+0x288>
    1fa4:	01 96       	adiw	r24, 0x01	; 1
    1fa6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <maxhum+0x1>
    1faa:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <maxhum>
    1fae:	4d de       	rcall	.-870    	; 0x1c4a <setprint>
    1fb0:	28 2d       	mov	r18, r8
    1fb2:	49 2d       	mov	r20, r9
    1fb4:	6e 2d       	mov	r22, r14
    1fb6:	8f 2d       	mov	r24, r15
    1fb8:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    1fbc:	15 c0       	rjmp	.+42     	; 0x1fe8 <setting+0x288>
					}
					if(x1==96&&maxy1==30)
					{
						if(minhum<50)
    1fbe:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <minhum>
    1fc2:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <minhum+0x1>
    1fc6:	82 33       	cpi	r24, 0x32	; 50
    1fc8:	91 05       	cpc	r25, r1
    1fca:	0c f0       	brlt	.+2      	; 0x1fce <setting+0x26e>
						{minhum++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
    1fcc:	fa c0       	rjmp	.+500    	; 0x21c2 <setting+0x462>
    1fce:	01 96       	adiw	r24, 0x01	; 1
    1fd0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <minhum+0x1>
    1fd4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <minhum>
    1fd8:	38 de       	rcall	.-912    	; 0x1c4a <setprint>
    1fda:	28 2d       	mov	r18, r8
    1fdc:	49 2d       	mov	r20, r9
    1fde:	6e 2d       	mov	r22, r14
    1fe0:	8f 2d       	mov	r24, r15
    1fe2:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    1fe6:	ed c0       	rjmp	.+474    	; 0x21c2 <setting+0x462>
					}
					
					if(x1==60&&maxy1==46)
    1fe8:	0e 32       	cpi	r16, 0x2E	; 46
    1fea:	11 05       	cpc	r17, r1
    1fec:	39 f5       	brne	.+78     	; 0x203c <setting+0x2dc>
					{
						if(maxlux<99)
    1fee:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <maxlux>
    1ff2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <maxlux+0x1>
    1ff6:	83 36       	cpi	r24, 0x63	; 99
    1ff8:	91 05       	cpc	r25, r1
						{maxlux++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
    1ffa:	04 f5       	brge	.+64     	; 0x203c <setting+0x2dc>
    1ffc:	01 96       	adiw	r24, 0x01	; 1
    1ffe:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <maxlux+0x1>
    2002:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <maxlux>
    2006:	21 de       	rcall	.-958    	; 0x1c4a <setprint>
    2008:	28 2d       	mov	r18, r8
    200a:	49 2d       	mov	r20, r9
    200c:	6e 2d       	mov	r22, r14
    200e:	8f 2d       	mov	r24, r15
    2010:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    2014:	13 c0       	rjmp	.+38     	; 0x203c <setting+0x2dc>
					}
					if(x1==96&&maxy1==46)
					{
						if(minlux<50)
    2016:	80 91 51 06 	lds	r24, 0x0651	; 0x800651 <minlux>
    201a:	90 91 52 06 	lds	r25, 0x0652	; 0x800652 <minlux+0x1>
    201e:	82 33       	cpi	r24, 0x32	; 50
    2020:	91 05       	cpc	r25, r1
						{minlux++; setprint(); g_i_rec(x1,maxy1,x2,maxy2);}
    2022:	64 f4       	brge	.+24     	; 0x203c <setting+0x2dc>
    2024:	01 96       	adiw	r24, 0x01	; 1
    2026:	90 93 52 06 	sts	0x0652, r25	; 0x800652 <minlux+0x1>
    202a:	80 93 51 06 	sts	0x0651, r24	; 0x800651 <minlux>
    202e:	0d de       	rcall	.-998    	; 0x1c4a <setprint>
    2030:	28 2d       	mov	r18, r8
    2032:	49 2d       	mov	r20, r9
    2034:	6e 2d       	mov	r22, r14
    2036:	8f 2d       	mov	r24, r15
    2038:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
					}
					g_render();
    203c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
				}
				
				
				if(!(PINC&=(1<<sw4)))
    2040:	83 b3       	in	r24, 0x13	; 19
    2042:	88 70       	andi	r24, 0x08	; 8
    2044:	83 bb       	out	0x13, r24	; 19
    2046:	81 11       	cpse	r24, r1
    2048:	9a c0       	rjmp	.+308    	; 0x217e <setting+0x41e>
				{
					while(!(PINC&=(1<<sw4))){}
    204a:	83 b3       	in	r24, 0x13	; 19
    204c:	88 70       	andi	r24, 0x08	; 8
    204e:	83 bb       	out	0x13, r24	; 19
    2050:	88 23       	and	r24, r24
    2052:	d9 f3       	breq	.-10     	; 0x204a <setting+0x2ea>
					
					if(x1==60&&maxy1==14)
    2054:	cc 33       	cpi	r28, 0x3C	; 60
    2056:	d1 05       	cpc	r29, r1
    2058:	09 f0       	breq	.+2      	; 0x205c <setting+0x2fc>
    205a:	b8 c0       	rjmp	.+368    	; 0x21cc <setting+0x46c>
    205c:	0e 30       	cpi	r16, 0x0E	; 14
    205e:	11 05       	cpc	r17, r1
    2060:	09 f0       	breq	.+2      	; 0x2064 <setting+0x304>
    2062:	c5 c0       	rjmp	.+394    	; 0x21ee <setting+0x48e>
					{
						if(maxtem>25)
    2064:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <maxtem>
    2068:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <maxtem+0x1>
    206c:	8a 31       	cpi	r24, 0x1A	; 26
    206e:	91 05       	cpc	r25, r1
    2070:	0c f4       	brge	.+2      	; 0x2074 <setting+0x314>
						{maxtem--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
    2072:	57 c0       	rjmp	.+174    	; 0x2122 <setting+0x3c2>
    2074:	01 97       	sbiw	r24, 0x01	; 1
    2076:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <maxtem+0x1>
    207a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <maxtem>
    207e:	e5 dd       	rcall	.-1078   	; 0x1c4a <setprint>
    2080:	28 2d       	mov	r18, r8
    2082:	49 2d       	mov	r20, r9
    2084:	6e 2d       	mov	r22, r14
    2086:	8f 2d       	mov	r24, r15
    2088:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    208c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
    2090:	48 c0       	rjmp	.+144    	; 0x2122 <setting+0x3c2>
					}
					if(x1==96&&maxy1==14)
    2092:	0e 30       	cpi	r16, 0x0E	; 14
    2094:	11 05       	cpc	r17, r1
    2096:	09 f0       	breq	.+2      	; 0x209a <setting+0x33a>
					{
						if(mintem>0)
    2098:	9d c0       	rjmp	.+314    	; 0x21d4 <setting+0x474>
    209a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <mintem>
    209e:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <mintem+0x1>
    20a2:	18 16       	cp	r1, r24
    20a4:	19 06       	cpc	r1, r25
    20a6:	0c f0       	brlt	.+2      	; 0x20aa <setting+0x34a>
						{mintem--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
    20a8:	95 c0       	rjmp	.+298    	; 0x21d4 <setting+0x474>
    20aa:	01 97       	sbiw	r24, 0x01	; 1
    20ac:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <mintem+0x1>
    20b0:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <mintem>
    20b4:	ca dd       	rcall	.-1132   	; 0x1c4a <setprint>
    20b6:	28 2d       	mov	r18, r8
    20b8:	49 2d       	mov	r20, r9
    20ba:	6e 2d       	mov	r22, r14
    20bc:	8f 2d       	mov	r24, r15
    20be:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    20c2:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
					}
					
					
					if(x1==60&&maxy1==30)
					{
						if(maxhum>50)
    20c6:	86 c0       	rjmp	.+268    	; 0x21d4 <setting+0x474>
    20c8:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <maxhum>
    20cc:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <maxhum+0x1>
    20d0:	83 33       	cpi	r24, 0x33	; 51
    20d2:	91 05       	cpc	r25, r1
						{maxhum--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
    20d4:	34 f1       	brlt	.+76     	; 0x2122 <setting+0x3c2>
    20d6:	01 97       	sbiw	r24, 0x01	; 1
    20d8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <maxhum+0x1>
    20dc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <maxhum>
    20e0:	b4 dd       	rcall	.-1176   	; 0x1c4a <setprint>
    20e2:	28 2d       	mov	r18, r8
    20e4:	49 2d       	mov	r20, r9
    20e6:	6e 2d       	mov	r22, r14
    20e8:	8f 2d       	mov	r24, r15
    20ea:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    20ee:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
					}
					if(x1==96&&maxy1==30)
					{
						if(minhum>0)
    20f2:	17 c0       	rjmp	.+46     	; 0x2122 <setting+0x3c2>
    20f4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <minhum>
    20f8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <minhum+0x1>
    20fc:	18 16       	cp	r1, r24
    20fe:	19 06       	cpc	r1, r25
    2100:	0c f0       	brlt	.+2      	; 0x2104 <setting+0x3a4>
						{minhum--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
    2102:	6c c0       	rjmp	.+216    	; 0x21dc <setting+0x47c>
    2104:	01 97       	sbiw	r24, 0x01	; 1
    2106:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <minhum+0x1>
    210a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <minhum>
    210e:	9d dd       	rcall	.-1222   	; 0x1c4a <setprint>
    2110:	28 2d       	mov	r18, r8
    2112:	49 2d       	mov	r20, r9
    2114:	6e 2d       	mov	r22, r14
    2116:	8f 2d       	mov	r24, r15
    2118:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    211c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
					}
					
					if(x1==60&&maxy1==46)
    2120:	5d c0       	rjmp	.+186    	; 0x21dc <setting+0x47c>
    2122:	0e 32       	cpi	r16, 0x2E	; 46
    2124:	11 05       	cpc	r17, r1
					{
						if(maxlux>50)
    2126:	59 f5       	brne	.+86     	; 0x217e <setting+0x41e>
    2128:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <maxlux>
    212c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <maxlux+0x1>
    2130:	83 33       	cpi	r24, 0x33	; 51
    2132:	91 05       	cpc	r25, r1
						{maxlux--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
    2134:	24 f1       	brlt	.+72     	; 0x217e <setting+0x41e>
    2136:	01 97       	sbiw	r24, 0x01	; 1
    2138:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <maxlux+0x1>
    213c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <maxlux>
    2140:	84 dd       	rcall	.-1272   	; 0x1c4a <setprint>
    2142:	28 2d       	mov	r18, r8
    2144:	49 2d       	mov	r20, r9
    2146:	6e 2d       	mov	r22, r14
    2148:	8f 2d       	mov	r24, r15
    214a:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    214e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
					}
					if(x1==96&&maxy1==46)
					{
						if(minlux>0)
    2152:	15 c0       	rjmp	.+42     	; 0x217e <setting+0x41e>
    2154:	80 91 51 06 	lds	r24, 0x0651	; 0x800651 <minlux>
    2158:	90 91 52 06 	lds	r25, 0x0652	; 0x800652 <minlux+0x1>
    215c:	18 16       	cp	r1, r24
    215e:	19 06       	cpc	r1, r25
						{minlux--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
    2160:	74 f4       	brge	.+28     	; 0x217e <setting+0x41e>
    2162:	01 97       	sbiw	r24, 0x01	; 1
    2164:	90 93 52 06 	sts	0x0652, r25	; 0x800652 <minlux+0x1>
    2168:	80 93 51 06 	sts	0x0651, r24	; 0x800651 <minlux>
    216c:	6e dd       	rcall	.-1316   	; 0x1c4a <setprint>
    216e:	28 2d       	mov	r18, r8
    2170:	49 2d       	mov	r20, r9
    2172:	6e 2d       	mov	r22, r14
    2174:	8f 2d       	mov	r24, r15
    2176:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <g_i_rec>
    217a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
					}
				}
				
				
				if(!(PINC&=(1<<sw5)))
    217e:	83 b3       	in	r24, 0x13	; 19
    2180:	80 71       	andi	r24, 0x10	; 16
    2182:	83 bb       	out	0x13, r24	; 19
    2184:	81 11       	cpse	r24, r1
				{
					while(!(PINC&=(1<<sw5))){}
    2186:	c7 ce       	rjmp	.-626    	; 0x1f16 <setting+0x1b6>
    2188:	83 b3       	in	r24, 0x13	; 19
    218a:	80 71       	andi	r24, 0x10	; 16
    218c:	83 bb       	out	0x13, r24	; 19
    218e:	88 23       	and	r24, r24
					setprint();
    2190:	d9 f3       	breq	.-10     	; 0x2188 <setting+0x428>
    2192:	5b dd       	rcall	.-1354   	; 0x1c4a <setprint>
					g_rec(x1,maxy1,x2,maxy2);
    2194:	28 2d       	mov	r18, r8
    2196:	49 2d       	mov	r20, r9
    2198:	6e 2d       	mov	r22, r14
    219a:	8f 2d       	mov	r24, r15
    219c:	0e 94 7e 05 	call	0xafc	; 0xafc <g_rec>
					g_render();
    21a0:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		
		if(bk==1){break;}
		
		if(trig<3)
		{
			trig=5;
    21a4:	0f 2e       	mov	r0, r31
    21a6:	f5 e0       	ldi	r31, 0x05	; 5
    21a8:	ef 2e       	mov	r14, r31
    21aa:	f1 2c       	mov	r15, r1
    21ac:	f0 2d       	mov	r31, r0
				{
					while(!(PINC&=(1<<sw5))){}
					setprint();
					g_rec(x1,maxy1,x2,maxy2);
					g_render();
					break;
    21ae:	03 ce       	rjmp	.-1018   	; 0x1db6 <setting+0x56>
					if(x1==60&&maxy1==14)
					{
						if(maxtem<50)
						{maxtem++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
					}
					if(x1==96&&maxy1==14)
    21b0:	c0 36       	cpi	r28, 0x60	; 96
    21b2:	d1 05       	cpc	r29, r1
    21b4:	09 f0       	breq	.+2      	; 0x21b8 <setting+0x458>
    21b6:	42 cf       	rjmp	.-380    	; 0x203c <setting+0x2dc>
    21b8:	d5 ce       	rjmp	.-598    	; 0x1f64 <setting+0x204>
					if(x1==60&&maxy1==30)
					{
						if(maxhum<95)
						{maxhum++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
					}
					if(x1==96&&maxy1==30)
    21ba:	0e 31       	cpi	r16, 0x1E	; 30
    21bc:	11 05       	cpc	r17, r1
    21be:	09 f4       	brne	.+2      	; 0x21c2 <setting+0x462>
    21c0:	fe ce       	rjmp	.-516    	; 0x1fbe <setting+0x25e>
					if(x1==60&&maxy1==46)
					{
						if(maxlux<99)
						{maxlux++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
					}
					if(x1==96&&maxy1==46)
    21c2:	0e 32       	cpi	r16, 0x2E	; 46
    21c4:	11 05       	cpc	r17, r1
    21c6:	09 f0       	breq	.+2      	; 0x21ca <setting+0x46a>
    21c8:	39 cf       	rjmp	.-398    	; 0x203c <setting+0x2dc>
    21ca:	25 cf       	rjmp	.-438    	; 0x2016 <setting+0x2b6>
					if(x1==60&&maxy1==14)
					{
						if(maxtem>25)
						{maxtem--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
					}
					if(x1==96&&maxy1==14)
    21cc:	c0 36       	cpi	r28, 0x60	; 96
    21ce:	d1 05       	cpc	r29, r1
    21d0:	b1 f6       	brne	.-84     	; 0x217e <setting+0x41e>
    21d2:	5f cf       	rjmp	.-322    	; 0x2092 <setting+0x332>
					if(x1==60&&maxy1==30)
					{
						if(maxhum>50)
						{maxhum--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
					}
					if(x1==96&&maxy1==30)
    21d4:	0e 31       	cpi	r16, 0x1E	; 30
    21d6:	11 05       	cpc	r17, r1
    21d8:	09 f4       	brne	.+2      	; 0x21dc <setting+0x47c>
    21da:	8c cf       	rjmp	.-232    	; 0x20f4 <setting+0x394>
					if(x1==60&&maxy1==46)
					{
						if(maxlux>50)
						{maxlux--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
					}
					if(x1==96&&maxy1==46)
    21dc:	0e 32       	cpi	r16, 0x2E	; 46
    21de:	11 05       	cpc	r17, r1
    21e0:	71 f6       	brne	.-100    	; 0x217e <setting+0x41e>
    21e2:	b8 cf       	rjmp	.-144    	; 0x2154 <setting+0x3f4>
						if(mintem<25)
						{mintem++; setprint(); g_i_rec(x1,maxy1,x2,maxy2); }
					}
					
					
					if(x1==60&&maxy1==30)
    21e4:	0e 31       	cpi	r16, 0x1E	; 30
    21e6:	11 05       	cpc	r17, r1
    21e8:	09 f0       	breq	.+2      	; 0x21ec <setting+0x48c>
    21ea:	fe ce       	rjmp	.-516    	; 0x1fe8 <setting+0x288>
    21ec:	d4 ce       	rjmp	.-600    	; 0x1f96 <setting+0x236>
						if(mintem>0)
						{mintem--; setprint(); g_i_rec(x1,maxy1,x2,maxy2); g_render();}
					}
					
					
					if(x1==60&&maxy1==30)
    21ee:	0e 31       	cpi	r16, 0x1E	; 30
    21f0:	11 05       	cpc	r17, r1
    21f2:	09 f0       	breq	.+2      	; 0x21f6 <setting+0x496>
    21f4:	96 cf       	rjmp	.-212    	; 0x2122 <setting+0x3c2>
    21f6:	68 cf       	rjmp	.-304    	; 0x20c8 <setting+0x368>
		
	}
	
	
	
}
    21f8:	df 91       	pop	r29
    21fa:	cf 91       	pop	r28
    21fc:	1f 91       	pop	r17
    21fe:	0f 91       	pop	r16
    2200:	ff 90       	pop	r15
    2202:	ef 90       	pop	r14
    2204:	df 90       	pop	r13
    2206:	cf 90       	pop	r12
    2208:	bf 90       	pop	r11
    220a:	af 90       	pop	r10
    220c:	9f 90       	pop	r9
    220e:	8f 90       	pop	r8
    2210:	08 95       	ret

00002212 <onset>:
void onset()
{
    2212:	cf 92       	push	r12
    2214:	df 92       	push	r13
    2216:	ef 92       	push	r14
    2218:	ff 92       	push	r15
    221a:	0f 93       	push	r16
    221c:	1f 93       	push	r17
    221e:	cf 93       	push	r28
    2220:	df 93       	push	r29
	int cur=0;

	g_clear();
    2222:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
	
	
}
void onset()
{
	int cur=0;
    2226:	c0 e0       	ldi	r28, 0x00	; 0
    2228:	d0 e0       	ldi	r29, 0x00	; 0
			g_clear();
			while(1)
			{
				if(cur==0&&scon==0){scon=1;}
				if(cur==1&&fcon==0){fcon=1;}
				if(cur==2&&gcon==0){gcon=1;}
    222a:	01 e0       	ldi	r16, 0x01	; 1
    222c:	10 e0       	ldi	r17, 0x00	; 0
			g_clear();
			while(1)
			{
				if(cur==0&&scon==1){scon=0;}
				if(cur==1&&fcon==1){fcon=0;}
				if(cur==2&&gcon==1){gcon=0;}
    222e:	c1 2c       	mov	r12, r1
    2230:	d1 2c       	mov	r13, r1
    2232:	ec 2c       	mov	r14, r12
    2234:	fd 2c       	mov	r15, r13
	int cur=0;

	g_clear();
	while(1)
	{
		if(!(PINC&=(1<<sw1))&&cur>0)
    2236:	83 b3       	in	r24, 0x13	; 19
    2238:	81 70       	andi	r24, 0x01	; 1
    223a:	83 bb       	out	0x13, r24	; 19
    223c:	81 11       	cpse	r24, r1
    223e:	09 c0       	rjmp	.+18     	; 0x2252 <onset+0x40>
    2240:	1c 16       	cp	r1, r28
    2242:	1d 06       	cpc	r1, r29
    2244:	34 f4       	brge	.+12     	; 0x2252 <onset+0x40>
		{
			while(!(PINC&=(1<<sw1))){}
    2246:	83 b3       	in	r24, 0x13	; 19
    2248:	81 70       	andi	r24, 0x01	; 1
    224a:	83 bb       	out	0x13, r24	; 19
    224c:	88 23       	and	r24, r24
    224e:	d9 f3       	breq	.-10     	; 0x2246 <onset+0x34>
			cur--;
    2250:	21 97       	sbiw	r28, 0x01	; 1
		}
		
		if(!(PINC&=(1<<sw3))&&cur<2)
    2252:	83 b3       	in	r24, 0x13	; 19
    2254:	84 70       	andi	r24, 0x04	; 4
    2256:	83 bb       	out	0x13, r24	; 19
    2258:	81 11       	cpse	r24, r1
    225a:	09 c0       	rjmp	.+18     	; 0x226e <onset+0x5c>
    225c:	c2 30       	cpi	r28, 0x02	; 2
    225e:	d1 05       	cpc	r29, r1
    2260:	34 f4       	brge	.+12     	; 0x226e <onset+0x5c>
		{
			while(!(PINC&=(1<<sw3))){}
    2262:	83 b3       	in	r24, 0x13	; 19
    2264:	84 70       	andi	r24, 0x04	; 4
    2266:	83 bb       	out	0x13, r24	; 19
    2268:	88 23       	and	r24, r24
    226a:	d9 f3       	breq	.-10     	; 0x2262 <onset+0x50>
			cur++;
    226c:	21 96       	adiw	r28, 0x01	; 1
		}
		
		if(!(PINC&=(1<<sw2)))
    226e:	83 b3       	in	r24, 0x13	; 19
    2270:	82 70       	andi	r24, 0x02	; 2
    2272:	83 bb       	out	0x13, r24	; 19
    2274:	81 11       	cpse	r24, r1
    2276:	5a c0       	rjmp	.+180    	; 0x232c <onset+0x11a>
		{
			while(!(PINC&=(1<<sw2))){}
    2278:	83 b3       	in	r24, 0x13	; 19
    227a:	82 70       	andi	r24, 0x02	; 2
    227c:	83 bb       	out	0x13, r24	; 19
    227e:	88 23       	and	r24, r24
    2280:	d9 f3       	breq	.-10     	; 0x2278 <onset+0x66>
			g_clear();
    2282:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
    2286:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <fcon>
    228a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <fcon+0x1>
    228e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <scon>
    2292:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <scon+0x1>
    2296:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    229a:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
			while(1)
			{
				if(cur==0&&scon==0){scon=1;}
    229e:	20 97       	sbiw	r28, 0x00	; 0
    22a0:	29 f4       	brne	.+10     	; 0x22ac <onset+0x9a>
    22a2:	00 97       	sbiw	r24, 0x00	; 0
    22a4:	a1 f4       	brne	.+40     	; 0x22ce <onset+0xbc>
    22a6:	80 2f       	mov	r24, r16
    22a8:	91 2f       	mov	r25, r17
    22aa:	11 c0       	rjmp	.+34     	; 0x22ce <onset+0xbc>
				if(cur==1&&fcon==0){fcon=1;}
    22ac:	c1 30       	cpi	r28, 0x01	; 1
    22ae:	d1 05       	cpc	r29, r1
    22b0:	31 f4       	brne	.+12     	; 0x22be <onset+0xac>
    22b2:	21 15       	cp	r18, r1
    22b4:	31 05       	cpc	r19, r1
    22b6:	59 f4       	brne	.+22     	; 0x22ce <onset+0xbc>
    22b8:	20 2f       	mov	r18, r16
    22ba:	31 2f       	mov	r19, r17
    22bc:	08 c0       	rjmp	.+16     	; 0x22ce <onset+0xbc>
				if(cur==2&&gcon==0){gcon=1;}
    22be:	c2 30       	cpi	r28, 0x02	; 2
    22c0:	d1 05       	cpc	r29, r1
    22c2:	29 f4       	brne	.+10     	; 0x22ce <onset+0xbc>
    22c4:	41 15       	cp	r20, r1
    22c6:	51 05       	cpc	r21, r1
    22c8:	11 f4       	brne	.+4      	; 0x22ce <onset+0xbc>
    22ca:	40 2f       	mov	r20, r16
    22cc:	51 2f       	mov	r21, r17
				
				if(scon==1||fcon==1||gcon==1){break;}
    22ce:	81 30       	cpi	r24, 0x01	; 1
    22d0:	91 05       	cpc	r25, r1
    22d2:	69 f4       	brne	.+26     	; 0x22ee <onset+0xdc>
    22d4:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <scon>
    22d8:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <scon+0x1>
    22dc:	50 93 01 01 	sts	0x0101, r21	; 0x800101 <__data_start+0x1>
    22e0:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__data_start>
    22e4:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <fcon+0x1>
    22e8:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <fcon>
    22ec:	1f c0       	rjmp	.+62     	; 0x232c <onset+0x11a>
    22ee:	21 30       	cpi	r18, 0x01	; 1
    22f0:	31 05       	cpc	r19, r1
    22f2:	69 f4       	brne	.+26     	; 0x230e <onset+0xfc>
    22f4:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <scon+0x1>
    22f8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <scon>
    22fc:	50 93 01 01 	sts	0x0101, r21	; 0x800101 <__data_start+0x1>
    2300:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__data_start>
    2304:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <fcon>
    2308:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <fcon+0x1>
    230c:	0f c0       	rjmp	.+30     	; 0x232c <onset+0x11a>
    230e:	41 30       	cpi	r20, 0x01	; 1
    2310:	51 05       	cpc	r21, r1
    2312:	29 f6       	brne	.-118    	; 0x229e <onset+0x8c>
    2314:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <scon+0x1>
    2318:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <scon>
    231c:	00 93 00 01 	sts	0x0100, r16	; 0x800100 <__data_start>
    2320:	10 93 01 01 	sts	0x0101, r17	; 0x800101 <__data_start+0x1>
    2324:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <fcon+0x1>
    2328:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <fcon>
			}
		}
		
		if(!(PINC&=(1<<sw4)))
    232c:	83 b3       	in	r24, 0x13	; 19
    232e:	88 70       	andi	r24, 0x08	; 8
    2330:	83 bb       	out	0x13, r24	; 19
    2332:	81 11       	cpse	r24, r1
    2334:	5a c0       	rjmp	.+180    	; 0x23ea <onset+0x1d8>
		{
			while(!(PINC&=(1<<sw4))){}
    2336:	83 b3       	in	r24, 0x13	; 19
    2338:	88 70       	andi	r24, 0x08	; 8
    233a:	83 bb       	out	0x13, r24	; 19
    233c:	88 23       	and	r24, r24
    233e:	d9 f3       	breq	.-10     	; 0x2336 <onset+0x124>
			g_clear();
    2340:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
    2344:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <fcon>
    2348:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <fcon+0x1>
    234c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <scon>
    2350:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <scon+0x1>
    2354:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    2358:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
			while(1)
			{
				if(cur==0&&scon==1){scon=0;}
    235c:	20 97       	sbiw	r28, 0x00	; 0
    235e:	31 f4       	brne	.+12     	; 0x236c <onset+0x15a>
    2360:	81 30       	cpi	r24, 0x01	; 1
    2362:	91 05       	cpc	r25, r1
    2364:	a1 f4       	brne	.+40     	; 0x238e <onset+0x17c>
    2366:	8e 2d       	mov	r24, r14
    2368:	9f 2d       	mov	r25, r15
    236a:	11 c0       	rjmp	.+34     	; 0x238e <onset+0x17c>
				if(cur==1&&fcon==1){fcon=0;}
    236c:	c1 30       	cpi	r28, 0x01	; 1
    236e:	d1 05       	cpc	r29, r1
    2370:	31 f4       	brne	.+12     	; 0x237e <onset+0x16c>
    2372:	21 30       	cpi	r18, 0x01	; 1
    2374:	31 05       	cpc	r19, r1
    2376:	59 f4       	brne	.+22     	; 0x238e <onset+0x17c>
    2378:	2e 2d       	mov	r18, r14
    237a:	3f 2d       	mov	r19, r15
    237c:	08 c0       	rjmp	.+16     	; 0x238e <onset+0x17c>
				if(cur==2&&gcon==1){gcon=0;}
    237e:	c2 30       	cpi	r28, 0x02	; 2
    2380:	d1 05       	cpc	r29, r1
    2382:	29 f4       	brne	.+10     	; 0x238e <onset+0x17c>
    2384:	41 30       	cpi	r20, 0x01	; 1
    2386:	51 05       	cpc	r21, r1
    2388:	11 f4       	brne	.+4      	; 0x238e <onset+0x17c>
    238a:	4e 2d       	mov	r20, r14
    238c:	5f 2d       	mov	r21, r15
				
				if(scon==0||fcon==0||gcon==0){break;}
    238e:	00 97       	sbiw	r24, 0x00	; 0
    2390:	69 f4       	brne	.+26     	; 0x23ac <onset+0x19a>
    2392:	c0 92 04 01 	sts	0x0104, r12	; 0x800104 <scon>
    2396:	d0 92 05 01 	sts	0x0105, r13	; 0x800105 <scon+0x1>
    239a:	50 93 01 01 	sts	0x0101, r21	; 0x800101 <__data_start+0x1>
    239e:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__data_start>
    23a2:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <fcon+0x1>
    23a6:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <fcon>
    23aa:	1f c0       	rjmp	.+62     	; 0x23ea <onset+0x1d8>
    23ac:	21 15       	cp	r18, r1
    23ae:	31 05       	cpc	r19, r1
    23b0:	69 f4       	brne	.+26     	; 0x23cc <onset+0x1ba>
    23b2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <scon+0x1>
    23b6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <scon>
    23ba:	50 93 01 01 	sts	0x0101, r21	; 0x800101 <__data_start+0x1>
    23be:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__data_start>
    23c2:	c0 92 02 01 	sts	0x0102, r12	; 0x800102 <fcon>
    23c6:	d0 92 03 01 	sts	0x0103, r13	; 0x800103 <fcon+0x1>
    23ca:	0f c0       	rjmp	.+30     	; 0x23ea <onset+0x1d8>
    23cc:	41 15       	cp	r20, r1
    23ce:	51 05       	cpc	r21, r1
    23d0:	29 f6       	brne	.-118    	; 0x235c <onset+0x14a>
    23d2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <scon+0x1>
    23d6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <scon>
    23da:	c0 92 00 01 	sts	0x0100, r12	; 0x800100 <__data_start>
    23de:	d0 92 01 01 	sts	0x0101, r13	; 0x800101 <__data_start+0x1>
    23e2:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <fcon+0x1>
    23e6:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <fcon>
			}
		}
		
		
		if(!(PINC&=(1<<sw5)))
    23ea:	83 b3       	in	r24, 0x13	; 19
    23ec:	80 71       	andi	r24, 0x10	; 16
    23ee:	83 bb       	out	0x13, r24	; 19
    23f0:	81 11       	cpse	r24, r1
    23f2:	06 c0       	rjmp	.+12     	; 0x2400 <onset+0x1ee>
		{
			while(!(PINC&=(1<<sw5))){}
    23f4:	83 b3       	in	r24, 0x13	; 19
    23f6:	80 71       	andi	r24, 0x10	; 16
    23f8:	83 bb       	out	0x13, r24	; 19
    23fa:	88 23       	and	r24, r24
    23fc:	d9 f3       	breq	.-10     	; 0x23f4 <onset+0x1e2>
    23fe:	c9 c0       	rjmp	.+402    	; 0x2592 <onset+0x380>
			break;
		}
		
		switch(cur)
    2400:	c1 30       	cpi	r28, 0x01	; 1
    2402:	d1 05       	cpc	r29, r1
    2404:	89 f0       	breq	.+34     	; 0x2428 <onset+0x216>
    2406:	c2 30       	cpi	r28, 0x02	; 2
    2408:	d1 05       	cpc	r29, r1
    240a:	d1 f0       	breq	.+52     	; 0x2440 <onset+0x22e>
    240c:	20 97       	sbiw	r28, 0x00	; 0
    240e:	19 f5       	brne	.+70     	; 0x2456 <onset+0x244>
		{
			case 0:
			g_clear();
    2410:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
			g_xy(16,16);
    2414:	60 e1       	ldi	r22, 0x10	; 16
    2416:	70 e0       	ldi	r23, 0x00	; 0
    2418:	80 e1       	ldi	r24, 0x10	; 16
    241a:	90 e0       	ldi	r25, 0x00	; 0
    241c:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			printc('$');
    2420:	84 e2       	ldi	r24, 0x24	; 36
    2422:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
			break;
    2426:	17 c0       	rjmp	.+46     	; 0x2456 <onset+0x244>
			
			case 1:
			g_clear();
    2428:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
			g_xy(58,16);
    242c:	60 e1       	ldi	r22, 0x10	; 16
    242e:	70 e0       	ldi	r23, 0x00	; 0
    2430:	8a e3       	ldi	r24, 0x3A	; 58
    2432:	90 e0       	ldi	r25, 0x00	; 0
    2434:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			printc('$');
    2438:	84 e2       	ldi	r24, 0x24	; 36
    243a:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
			break;
    243e:	0b c0       	rjmp	.+22     	; 0x2456 <onset+0x244>
			
			case 2:
			g_clear();
    2440:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
			g_xy(88,16);
    2444:	60 e1       	ldi	r22, 0x10	; 16
    2446:	70 e0       	ldi	r23, 0x00	; 0
    2448:	88 e5       	ldi	r24, 0x58	; 88
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			printc('$');
    2450:	84 e2       	ldi	r24, 0x24	; 36
    2452:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
			break;
		}
		g_xy(10,0);
    2456:	6c 2d       	mov	r22, r12
    2458:	7d 2d       	mov	r23, r13
    245a:	8a e0       	ldi	r24, 0x0A	; 10
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Power Setting Mode");
    2462:	83 e9       	ldi	r24, 0x93	; 147
    2464:	91 e0       	ldi	r25, 0x01	; 1
    2466:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_xy(16,16);
    246a:	60 e1       	ldi	r22, 0x10	; 16
    246c:	70 e0       	ldi	r23, 0x00	; 0
    246e:	80 e1       	ldi	r24, 0x10	; 16
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Servo");
    2476:	86 ea       	ldi	r24, 0xA6	; 166
    2478:	91 e0       	ldi	r25, 0x01	; 1
    247a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(58,16);
    247e:	60 e1       	ldi	r22, 0x10	; 16
    2480:	70 e0       	ldi	r23, 0x00	; 0
    2482:	8a e3       	ldi	r24, 0x3A	; 58
    2484:	90 e0       	ldi	r25, 0x00	; 0
    2486:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Fan");
    248a:	8c ea       	ldi	r24, 0xAC	; 172
    248c:	91 e0       	ldi	r25, 0x01	; 1
    248e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(88,16);
    2492:	60 e1       	ldi	r22, 0x10	; 16
    2494:	70 e0       	ldi	r23, 0x00	; 0
    2496:	88 e5       	ldi	r24, 0x58	; 88
    2498:	90 e0       	ldi	r25, 0x00	; 0
    249a:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Gyro");
    249e:	80 eb       	ldi	r24, 0xB0	; 176
    24a0:	91 e0       	ldi	r25, 0x01	; 1
    24a2:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_xy(5,32);
    24a6:	60 e2       	ldi	r22, 0x20	; 32
    24a8:	70 e0       	ldi	r23, 0x00	; 0
    24aa:	85 e0       	ldi	r24, 0x05	; 5
    24ac:	90 e0       	ldi	r25, 0x00	; 0
    24ae:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("On");
    24b2:	85 eb       	ldi	r24, 0xB5	; 181
    24b4:	91 e0       	ldi	r25, 0x01	; 1
    24b6:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_xy(2,48);
    24ba:	60 e3       	ldi	r22, 0x30	; 48
    24bc:	70 e0       	ldi	r23, 0x00	; 0
    24be:	82 e0       	ldi	r24, 0x02	; 2
    24c0:	90 e0       	ldi	r25, 0x00	; 0
    24c2:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Off");
    24c6:	88 eb       	ldi	r24, 0xB8	; 184
    24c8:	91 e0       	ldi	r25, 0x01	; 1
    24ca:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_rec(22,32,40,56);
    24ce:	28 e3       	ldi	r18, 0x38	; 56
    24d0:	48 e2       	ldi	r20, 0x28	; 40
    24d2:	60 e2       	ldi	r22, 0x20	; 32
    24d4:	86 e1       	ldi	r24, 0x16	; 22
    24d6:	0e 94 7e 05 	call	0xafc	; 0xafc <g_rec>
		if(scon==1) g_f_rec(25,35,37,41);
    24da:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <scon>
    24de:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <scon+0x1>
    24e2:	01 97       	sbiw	r24, 0x01	; 1
    24e4:	39 f4       	brne	.+14     	; 0x24f4 <onset+0x2e2>
    24e6:	29 e2       	ldi	r18, 0x29	; 41
    24e8:	45 e2       	ldi	r20, 0x25	; 37
    24ea:	63 e2       	ldi	r22, 0x23	; 35
    24ec:	89 e1       	ldi	r24, 0x19	; 25
    24ee:	0e 94 76 06 	call	0xcec	; 0xcec <g_f_rec>
    24f2:	06 c0       	rjmp	.+12     	; 0x2500 <onset+0x2ee>
		else g_f_rec(25,47,37,53);
    24f4:	25 e3       	ldi	r18, 0x35	; 53
    24f6:	45 e2       	ldi	r20, 0x25	; 37
    24f8:	6f e2       	ldi	r22, 0x2F	; 47
    24fa:	89 e1       	ldi	r24, 0x19	; 25
    24fc:	0e 94 76 06 	call	0xcec	; 0xcec <g_f_rec>
		
		g_rec(57,32,75,56);
    2500:	28 e3       	ldi	r18, 0x38	; 56
    2502:	4b e4       	ldi	r20, 0x4B	; 75
    2504:	60 e2       	ldi	r22, 0x20	; 32
    2506:	89 e3       	ldi	r24, 0x39	; 57
    2508:	0e 94 7e 05 	call	0xafc	; 0xafc <g_rec>
		if(fcon==1) g_f_rec(60,35,72,41);
    250c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <fcon>
    2510:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <fcon+0x1>
    2514:	01 97       	sbiw	r24, 0x01	; 1
    2516:	39 f4       	brne	.+14     	; 0x2526 <onset+0x314>
    2518:	29 e2       	ldi	r18, 0x29	; 41
    251a:	48 e4       	ldi	r20, 0x48	; 72
    251c:	63 e2       	ldi	r22, 0x23	; 35
    251e:	8c e3       	ldi	r24, 0x3C	; 60
    2520:	0e 94 76 06 	call	0xcec	; 0xcec <g_f_rec>
    2524:	06 c0       	rjmp	.+12     	; 0x2532 <onset+0x320>
		else g_f_rec(60,47,72,53);
    2526:	25 e3       	ldi	r18, 0x35	; 53
    2528:	48 e4       	ldi	r20, 0x48	; 72
    252a:	6f e2       	ldi	r22, 0x2F	; 47
    252c:	8c e3       	ldi	r24, 0x3C	; 60
    252e:	0e 94 76 06 	call	0xcec	; 0xcec <g_f_rec>
		
		g_rec(91,32,109,56);
    2532:	28 e3       	ldi	r18, 0x38	; 56
    2534:	4d e6       	ldi	r20, 0x6D	; 109
    2536:	60 e2       	ldi	r22, 0x20	; 32
    2538:	8b e5       	ldi	r24, 0x5B	; 91
    253a:	0e 94 7e 05 	call	0xafc	; 0xafc <g_rec>
		if(gcon==1) g_f_rec(94,35,106,41);
    253e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    2542:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    2546:	01 97       	sbiw	r24, 0x01	; 1
    2548:	39 f4       	brne	.+14     	; 0x2558 <onset+0x346>
    254a:	29 e2       	ldi	r18, 0x29	; 41
    254c:	4a e6       	ldi	r20, 0x6A	; 106
    254e:	63 e2       	ldi	r22, 0x23	; 35
    2550:	8e e5       	ldi	r24, 0x5E	; 94
    2552:	0e 94 76 06 	call	0xcec	; 0xcec <g_f_rec>
    2556:	06 c0       	rjmp	.+12     	; 0x2564 <onset+0x352>
		else g_f_rec(94,47,106,53);
    2558:	25 e3       	ldi	r18, 0x35	; 53
    255a:	4a e6       	ldi	r20, 0x6A	; 106
    255c:	6f e2       	ldi	r22, 0x2F	; 47
    255e:	8e e5       	ldi	r24, 0x5E	; 94
    2560:	0e 94 76 06 	call	0xcec	; 0xcec <g_f_rec>
		
		g_render();
    2564:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		
		if(fcon==0) {DDRB&=~(1<<fan); PORTB&=~(1<<fan);}
    2568:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <fcon>
    256c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <fcon+0x1>
    2570:	89 2b       	or	r24, r25
    2572:	19 f4       	brne	.+6      	; 0x257a <onset+0x368>
    2574:	bf 98       	cbi	0x17, 7	; 23
    2576:	c7 98       	cbi	0x18, 7	; 24
    2578:	01 c0       	rjmp	.+2      	; 0x257c <onset+0x36a>
		else {DDRB|=(1<<fan);}
    257a:	bf 9a       	sbi	0x17, 7	; 23
		
		if(scon==0) {DDRB&=~(1<<servo); PORTB&=~(1<<servo);}
    257c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <scon>
    2580:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <scon+0x1>
    2584:	89 2b       	or	r24, r25
    2586:	19 f4       	brne	.+6      	; 0x258e <onset+0x37c>
    2588:	be 98       	cbi	0x17, 6	; 23
    258a:	c6 98       	cbi	0x18, 6	; 24
    258c:	54 ce       	rjmp	.-856    	; 0x2236 <onset+0x24>
		else {DDRB|=(1<<servo);}
    258e:	be 9a       	sbi	0x17, 6	; 23
    2590:	52 ce       	rjmp	.-860    	; 0x2236 <onset+0x24>
	}
}
    2592:	df 91       	pop	r29
    2594:	cf 91       	pop	r28
    2596:	1f 91       	pop	r17
    2598:	0f 91       	pop	r16
    259a:	ff 90       	pop	r15
    259c:	ef 90       	pop	r14
    259e:	df 90       	pop	r13
    25a0:	cf 90       	pop	r12
    25a2:	08 95       	ret

000025a4 <arrow>:
void arrow()
{
	key=rx();
    25a4:	bc da       	rcall	.-2696   	; 0x1b1e <rx>
    25a6:	80 93 3a 06 	sts	0x063A, r24	; 0x80063a <key>
	if(key==27)
    25aa:	8b 31       	cpi	r24, 0x1B	; 27
	{
		while(key==27){key=rx();}
    25ac:	79 f5       	brne	.+94     	; 0x260c <arrow+0x68>
    25ae:	b7 da       	rcall	.-2706   	; 0x1b1e <rx>
    25b0:	80 93 3a 06 	sts	0x063A, r24	; 0x80063a <key>
    25b4:	8b 31       	cpi	r24, 0x1B	; 27
    25b6:	d9 f3       	breq	.-10     	; 0x25ae <arrow+0xa>
		if(key==91)
    25b8:	8b 35       	cpi	r24, 0x5B	; 91
		{
			while(key==91){key=rx();}
    25ba:	41 f5       	brne	.+80     	; 0x260c <arrow+0x68>
    25bc:	b0 da       	rcall	.-2720   	; 0x1b1e <rx>
    25be:	80 93 3a 06 	sts	0x063A, r24	; 0x80063a <key>
    25c2:	8b 35       	cpi	r24, 0x5B	; 91
    25c4:	d9 f3       	breq	.-10     	; 0x25bc <arrow+0x18>
			if(key==65)
    25c6:	81 34       	cpi	r24, 0x41	; 65
    25c8:	39 f4       	brne	.+14     	; 0x25d8 <arrow+0x34>
			{rec=1;}
    25ca:	21 e0       	ldi	r18, 0x01	; 1
    25cc:	30 e0       	ldi	r19, 0x00	; 0
    25ce:	30 93 3c 06 	sts	0x063C, r19	; 0x80063c <rec+0x1>
    25d2:	20 93 3b 06 	sts	0x063B, r18	; 0x80063b <rec>
    25d6:	12 c0       	rjmp	.+36     	; 0x25fc <arrow+0x58>
			if(key==66)
    25d8:	82 34       	cpi	r24, 0x42	; 66
    25da:	39 f4       	brne	.+14     	; 0x25ea <arrow+0x46>
			{rec=2;}
    25dc:	82 e0       	ldi	r24, 0x02	; 2
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	90 93 3c 06 	sts	0x063C, r25	; 0x80063c <rec+0x1>
    25e4:	80 93 3b 06 	sts	0x063B, r24	; 0x80063b <rec>
    25e8:	08 95       	ret
			if(key==68)
    25ea:	84 34       	cpi	r24, 0x44	; 68
    25ec:	39 f4       	brne	.+14     	; 0x25fc <arrow+0x58>
			{rec=3;}
    25ee:	83 e0       	ldi	r24, 0x03	; 3
    25f0:	90 e0       	ldi	r25, 0x00	; 0
    25f2:	90 93 3c 06 	sts	0x063C, r25	; 0x80063c <rec+0x1>
    25f6:	80 93 3b 06 	sts	0x063B, r24	; 0x80063b <rec>
    25fa:	08 95       	ret
			if(key==67)
    25fc:	83 34       	cpi	r24, 0x43	; 67
    25fe:	31 f4       	brne	.+12     	; 0x260c <arrow+0x68>
			{rec=4;}
    2600:	84 e0       	ldi	r24, 0x04	; 4
    2602:	90 e0       	ldi	r25, 0x00	; 0
    2604:	90 93 3c 06 	sts	0x063C, r25	; 0x80063c <rec+0x1>
    2608:	80 93 3b 06 	sts	0x063B, r24	; 0x80063b <rec>
    260c:	08 95       	ret

0000260e <timeset>:
		}
	}
}
void timeset()
{
    260e:	2f 92       	push	r2
    2610:	3f 92       	push	r3
    2612:	4f 92       	push	r4
    2614:	5f 92       	push	r5
    2616:	7f 92       	push	r7
    2618:	8f 92       	push	r8
    261a:	9f 92       	push	r9
    261c:	af 92       	push	r10
    261e:	bf 92       	push	r11
    2620:	cf 92       	push	r12
    2622:	df 92       	push	r13
    2624:	ef 92       	push	r14
    2626:	ff 92       	push	r15
    2628:	0f 93       	push	r16
    262a:	1f 93       	push	r17
    262c:	cf 93       	push	r28
    262e:	df 93       	push	r29
	int i=0;
	int sel=0;
	
	test=eeprom_read_byte((uint16_t*)46);
    2630:	8e e2       	ldi	r24, 0x2E	; 46
    2632:	90 e0       	ldi	r25, 0x00	; 0
    2634:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    2638:	90 e0       	ldi	r25, 0x00	; 0
    263a:	90 93 fd 05 	sts	0x05FD, r25	; 0x8005fd <test+0x1>
    263e:	80 93 fc 05 	sts	0x05FC, r24	; 0x8005fc <test>
	}
}
void timeset()
{
	int i=0;
	int sel=0;
    2642:	00 e0       	ldi	r16, 0x00	; 0
    2644:	10 e0       	ldi	r17, 0x00	; 0
		}
		g_clear();
		g_xy(28,8);
		prints("Time Setting");
		
		sprintf(&ot[0],"%02d",hc);
    2646:	0f 2e       	mov	r0, r31
    2648:	f9 ec       	ldi	r31, 0xC9	; 201
    264a:	ef 2e       	mov	r14, r31
    264c:	f1 e0       	ldi	r31, 0x01	; 1
    264e:	ff 2e       	mov	r15, r31
    2650:	f0 2d       	mov	r31, r0
    2652:	0f 2e       	mov	r0, r31
    2654:	f5 eb       	ldi	r31, 0xB5	; 181
    2656:	cf 2e       	mov	r12, r31
    2658:	fb e0       	ldi	r31, 0x0B	; 11
    265a:	df 2e       	mov	r13, r31
    265c:	f0 2d       	mov	r31, r0
		ot[2]=':';	sprintf(&ot[3],"%02d",mc);
    265e:	0f 2e       	mov	r0, r31
    2660:	fa e3       	ldi	r31, 0x3A	; 58
    2662:	7f 2e       	mov	r7, r31
    2664:	f0 2d       	mov	r31, r0
    2666:	0f 2e       	mov	r0, r31
    2668:	f8 eb       	ldi	r31, 0xB8	; 184
    266a:	af 2e       	mov	r10, r31
    266c:	fb e0       	ldi	r31, 0x0B	; 11
    266e:	bf 2e       	mov	r11, r31
    2670:	f0 2d       	mov	r31, r0
		ot[5]=':';
		sprintf(&ot[6],"%02d",sc);
    2672:	0f 2e       	mov	r0, r31
    2674:	fb eb       	ldi	r31, 0xBB	; 187
    2676:	8f 2e       	mov	r8, r31
    2678:	fb e0       	ldi	r31, 0x0B	; 11
    267a:	9f 2e       	mov	r9, r31
    267c:	f0 2d       	mov	r31, r0
		
		g_render();
		arrow();
		
		if(!(PINC&=(1<<sw1))){while(!(PINC&=(1<<sw1))){} rec=3;}
		if(!(PINC&=(1<<sw2))){while(!(PINC&=(1<<sw2))){} rec=1;}
    267e:	44 24       	eor	r4, r4
    2680:	43 94       	inc	r4
    2682:	51 2c       	mov	r5, r1
		if(!(PINC&=(1<<sw3))){while(!(PINC&=(1<<sw3))){} rec=4;}
    2684:	68 94       	set
    2686:	22 24       	eor	r2, r2
    2688:	22 f8       	bld	r2, 2
    268a:	31 2c       	mov	r3, r1
	int sel=0;
	
	test=eeprom_read_byte((uint16_t*)46);
	while(1)
	{
		if(test==1)
    268c:	80 91 fc 05 	lds	r24, 0x05FC	; 0x8005fc <test>
    2690:	90 91 fd 05 	lds	r25, 0x05FD	; 0x8005fd <test+0x1>
    2694:	01 97       	sbiw	r24, 0x01	; 1
    2696:	41 f5       	brne	.+80     	; 0x26e8 <timeset+0xda>
		{
			ttrig=1;
    2698:	81 e0       	ldi	r24, 0x01	; 1
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	90 93 5c 06 	sts	0x065C, r25	; 0x80065c <ttrig+0x1>
    26a0:	80 93 5b 06 	sts	0x065B, r24	; 0x80065b <ttrig>
			sc=eeprom_read_byte((uint16_t*)54);
    26a4:	86 e3       	ldi	r24, 0x36	; 54
    26a6:	90 e0       	ldi	r25, 0x00	; 0
    26a8:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	90 93 3e 06 	sts	0x063E, r25	; 0x80063e <sc+0x1>
    26b2:	80 93 3d 06 	sts	0x063D, r24	; 0x80063d <sc>
			mc=eeprom_read_byte((uint16_t*)62);
    26b6:	8e e3       	ldi	r24, 0x3E	; 62
    26b8:	90 e0       	ldi	r25, 0x00	; 0
    26ba:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    26be:	90 e0       	ldi	r25, 0x00	; 0
    26c0:	90 93 40 06 	sts	0x0640, r25	; 0x800640 <mc+0x1>
    26c4:	80 93 3f 06 	sts	0x063F, r24	; 0x80063f <mc>
			hc=eeprom_read_byte((uint16_t*)70);
    26c8:	86 e4       	ldi	r24, 0x46	; 70
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    26d0:	90 e0       	ldi	r25, 0x00	; 0
    26d2:	90 93 42 06 	sts	0x0642, r25	; 0x800642 <hc+0x1>
    26d6:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <hc>
			tint=100;
    26da:	84 e6       	ldi	r24, 0x64	; 100
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	90 93 39 06 	sts	0x0639, r25	; 0x800639 <tint+0x1>
    26e2:	80 93 38 06 	sts	0x0638, r24	; 0x800638 <tint>
			break;
    26e6:	0c c2       	rjmp	.+1048   	; 0x2b00 <timeset+0x4f2>
		}
		g_clear();
    26e8:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
		g_xy(28,8);
    26ec:	68 e0       	ldi	r22, 0x08	; 8
    26ee:	70 e0       	ldi	r23, 0x00	; 0
    26f0:	8c e1       	ldi	r24, 0x1C	; 28
    26f2:	90 e0       	ldi	r25, 0x00	; 0
    26f4:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Time Setting");
    26f8:	8c eb       	ldi	r24, 0xBC	; 188
    26fa:	91 e0       	ldi	r25, 0x01	; 1
    26fc:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		sprintf(&ot[0],"%02d",hc);
    2700:	80 91 42 06 	lds	r24, 0x0642	; 0x800642 <hc+0x1>
    2704:	8f 93       	push	r24
    2706:	80 91 41 06 	lds	r24, 0x0641	; 0x800641 <hc>
    270a:	8f 93       	push	r24
    270c:	ff 92       	push	r15
    270e:	ef 92       	push	r14
    2710:	df 92       	push	r13
    2712:	cf 92       	push	r12
    2714:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
		ot[2]=':';	sprintf(&ot[3],"%02d",mc);
    2718:	f6 01       	movw	r30, r12
    271a:	72 82       	std	Z+2, r7	; 0x02
    271c:	80 91 40 06 	lds	r24, 0x0640	; 0x800640 <mc+0x1>
    2720:	8f 93       	push	r24
    2722:	80 91 3f 06 	lds	r24, 0x063F	; 0x80063f <mc>
    2726:	8f 93       	push	r24
    2728:	ff 92       	push	r15
    272a:	ef 92       	push	r14
    272c:	bf 92       	push	r11
    272e:	af 92       	push	r10
    2730:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
		ot[5]=':';
    2734:	f6 01       	movw	r30, r12
    2736:	75 82       	std	Z+5, r7	; 0x05
		sprintf(&ot[6],"%02d",sc);
    2738:	80 91 3e 06 	lds	r24, 0x063E	; 0x80063e <sc+0x1>
    273c:	8f 93       	push	r24
    273e:	80 91 3d 06 	lds	r24, 0x063D	; 0x80063d <sc>
    2742:	8f 93       	push	r24
    2744:	ff 92       	push	r15
    2746:	ef 92       	push	r14
    2748:	9f 92       	push	r9
    274a:	8f 92       	push	r8
    274c:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
		g_xy(40,32);
    2750:	60 e2       	ldi	r22, 0x20	; 32
    2752:	70 e0       	ldi	r23, 0x00	; 0
    2754:	88 e2       	ldi	r24, 0x28	; 40
    2756:	90 e0       	ldi	r25, 0x00	; 0
    2758:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints(ot);
    275c:	c6 01       	movw	r24, r12
    275e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		if(sel>=2)
    2762:	8d b7       	in	r24, 0x3d	; 61
    2764:	9e b7       	in	r25, 0x3e	; 62
    2766:	42 96       	adiw	r24, 0x12	; 18
    2768:	0f b6       	in	r0, 0x3f	; 63
    276a:	f8 94       	cli
    276c:	9e bf       	out	0x3e, r25	; 62
    276e:	0f be       	out	0x3f, r0	; 63
    2770:	8d bf       	out	0x3d, r24	; 61
    2772:	02 30       	cpi	r16, 0x02	; 2
    2774:	11 05       	cpc	r17, r1
    2776:	0c f4       	brge	.+2      	; 0x277a <timeset+0x16c>
    2778:	7f c1       	rjmp	.+766    	; 0x2a78 <timeset+0x46a>
		{g_xy(40+(6*sel)+6,32);}
    277a:	c8 01       	movw	r24, r16
    277c:	88 0f       	add	r24, r24
    277e:	99 1f       	adc	r25, r25
    2780:	80 0f       	add	r24, r16
    2782:	91 1f       	adc	r25, r17
    2784:	88 0f       	add	r24, r24
    2786:	99 1f       	adc	r25, r25
    2788:	60 e2       	ldi	r22, 0x20	; 32
    278a:	70 e0       	ldi	r23, 0x00	; 0
    278c:	8e 96       	adiw	r24, 0x2e	; 46
    278e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		
		if(sel>=4)
    2792:	04 30       	cpi	r16, 0x04	; 4
    2794:	11 05       	cpc	r17, r1
    2796:	6c f0       	brlt	.+26     	; 0x27b2 <timeset+0x1a4>
    2798:	a6 c1       	rjmp	.+844    	; 0x2ae6 <timeset+0x4d8>
		{g_xy(40+(6*sel)+12,32);}
		
		if(sel<2)
		{g_xy(40+(6*sel),32);}
    279a:	c8 01       	movw	r24, r16
    279c:	88 0f       	add	r24, r24
    279e:	99 1f       	adc	r25, r25
    27a0:	80 0f       	add	r24, r16
    27a2:	91 1f       	adc	r25, r17
    27a4:	88 0f       	add	r24, r24
    27a6:	99 1f       	adc	r25, r25
    27a8:	60 e2       	ldi	r22, 0x20	; 32
    27aa:	70 e0       	ldi	r23, 0x00	; 0
    27ac:	88 96       	adiw	r24, 0x28	; 40
    27ae:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		printc('$');
    27b2:	84 e2       	ldi	r24, 0x24	; 36
    27b4:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
    27b8:	cb e2       	ldi	r28, 0x2B	; 43
    27ba:	d0 e0       	ldi	r29, 0x00	; 0
		
		for(i=0; i<3; i++)
		{
			g_xy(43+(18*i),24);
    27bc:	68 e1       	ldi	r22, 0x18	; 24
    27be:	70 e0       	ldi	r23, 0x00	; 0
    27c0:	ce 01       	movw	r24, r28
    27c2:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			printc('@');
    27c6:	80 e4       	ldi	r24, 0x40	; 64
    27c8:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
			g_xy(43+(18*i),40);
    27cc:	68 e2       	ldi	r22, 0x28	; 40
    27ce:	70 e0       	ldi	r23, 0x00	; 0
    27d0:	ce 01       	movw	r24, r28
    27d2:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			printc('#');
    27d6:	83 e2       	ldi	r24, 0x23	; 35
    27d8:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
    27dc:	62 96       	adiw	r28, 0x12	; 18
		
		if(sel<2)
		{g_xy(40+(6*sel),32);}
		printc('$');
		
		for(i=0; i<3; i++)
    27de:	c1 36       	cpi	r28, 0x61	; 97
    27e0:	d1 05       	cpc	r29, r1
    27e2:	61 f7       	brne	.-40     	; 0x27bc <timeset+0x1ae>
			printc('@');
			g_xy(43+(18*i),40);
			printc('#');
		}
		
		g_render();
    27e4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		arrow();
    27e8:	dd de       	rcall	.-582    	; 0x25a4 <arrow>
		
		if(!(PINC&=(1<<sw1))){while(!(PINC&=(1<<sw1))){} rec=3;}
    27ea:	83 b3       	in	r24, 0x13	; 19
    27ec:	81 70       	andi	r24, 0x01	; 1
    27ee:	83 bb       	out	0x13, r24	; 19
    27f0:	81 11       	cpse	r24, r1
    27f2:	0b c0       	rjmp	.+22     	; 0x280a <timeset+0x1fc>
    27f4:	83 b3       	in	r24, 0x13	; 19
    27f6:	81 70       	andi	r24, 0x01	; 1
    27f8:	83 bb       	out	0x13, r24	; 19
    27fa:	88 23       	and	r24, r24
    27fc:	d9 f3       	breq	.-10     	; 0x27f4 <timeset+0x1e6>
    27fe:	e3 e0       	ldi	r30, 0x03	; 3
    2800:	f0 e0       	ldi	r31, 0x00	; 0
    2802:	f0 93 3c 06 	sts	0x063C, r31	; 0x80063c <rec+0x1>
    2806:	e0 93 3b 06 	sts	0x063B, r30	; 0x80063b <rec>
		if(!(PINC&=(1<<sw2))){while(!(PINC&=(1<<sw2))){} rec=1;}
    280a:	83 b3       	in	r24, 0x13	; 19
    280c:	82 70       	andi	r24, 0x02	; 2
    280e:	83 bb       	out	0x13, r24	; 19
    2810:	81 11       	cpse	r24, r1
    2812:	09 c0       	rjmp	.+18     	; 0x2826 <timeset+0x218>
    2814:	83 b3       	in	r24, 0x13	; 19
    2816:	82 70       	andi	r24, 0x02	; 2
    2818:	83 bb       	out	0x13, r24	; 19
    281a:	88 23       	and	r24, r24
    281c:	d9 f3       	breq	.-10     	; 0x2814 <timeset+0x206>
    281e:	50 92 3c 06 	sts	0x063C, r5	; 0x80063c <rec+0x1>
    2822:	40 92 3b 06 	sts	0x063B, r4	; 0x80063b <rec>
		if(!(PINC&=(1<<sw3))){while(!(PINC&=(1<<sw3))){} rec=4;}
    2826:	83 b3       	in	r24, 0x13	; 19
    2828:	84 70       	andi	r24, 0x04	; 4
    282a:	83 bb       	out	0x13, r24	; 19
    282c:	81 11       	cpse	r24, r1
    282e:	09 c0       	rjmp	.+18     	; 0x2842 <timeset+0x234>
    2830:	83 b3       	in	r24, 0x13	; 19
    2832:	84 70       	andi	r24, 0x04	; 4
    2834:	83 bb       	out	0x13, r24	; 19
    2836:	88 23       	and	r24, r24
    2838:	d9 f3       	breq	.-10     	; 0x2830 <timeset+0x222>
    283a:	30 92 3c 06 	sts	0x063C, r3	; 0x80063c <rec+0x1>
    283e:	20 92 3b 06 	sts	0x063B, r2	; 0x80063b <rec>
		if(!(PINC&=(1<<sw4))){while(!(PINC&=(1<<sw4))){} rec=2;}
    2842:	83 b3       	in	r24, 0x13	; 19
    2844:	88 70       	andi	r24, 0x08	; 8
    2846:	83 bb       	out	0x13, r24	; 19
    2848:	81 11       	cpse	r24, r1
    284a:	08 c0       	rjmp	.+16     	; 0x285c <timeset+0x24e>
    284c:	83 b3       	in	r24, 0x13	; 19
    284e:	88 70       	andi	r24, 0x08	; 8
    2850:	83 bb       	out	0x13, r24	; 19
    2852:	88 23       	and	r24, r24
    2854:	d9 f3       	breq	.-10     	; 0x284c <timeset+0x23e>
		
		if(rec==3&&sel>0){sel--;}
    2856:	82 e0       	ldi	r24, 0x02	; 2
    2858:	90 e0       	ldi	r25, 0x00	; 0
    285a:	17 c0       	rjmp	.+46     	; 0x288a <timeset+0x27c>
    285c:	80 91 3b 06 	lds	r24, 0x063B	; 0x80063b <rec>
    2860:	90 91 3c 06 	lds	r25, 0x063C	; 0x80063c <rec+0x1>
    2864:	83 30       	cpi	r24, 0x03	; 3
    2866:	91 05       	cpc	r25, r1
    2868:	39 f4       	brne	.+14     	; 0x2878 <timeset+0x26a>
    286a:	10 16       	cp	r1, r16
    286c:	11 06       	cpc	r1, r17
    286e:	0c f0       	brlt	.+2      	; 0x2872 <timeset+0x264>
    2870:	40 c0       	rjmp	.+128    	; 0x28f2 <timeset+0x2e4>
    2872:	01 50       	subi	r16, 0x01	; 1
    2874:	11 09       	sbc	r17, r1
    2876:	3d c0       	rjmp	.+122    	; 0x28f2 <timeset+0x2e4>
		
		if(rec==4&&sel<5){sel++;}
    2878:	84 30       	cpi	r24, 0x04	; 4
    287a:	91 05       	cpc	r25, r1
    287c:	31 f4       	brne	.+12     	; 0x288a <timeset+0x27c>
    287e:	05 30       	cpi	r16, 0x05	; 5
    2880:	11 05       	cpc	r17, r1
    2882:	bc f5       	brge	.+110    	; 0x28f2 <timeset+0x2e4>
    2884:	0f 5f       	subi	r16, 0xFF	; 255
    2886:	1f 4f       	sbci	r17, 0xFF	; 255
    2888:	34 c0       	rjmp	.+104    	; 0x28f2 <timeset+0x2e4>
		
		if(rec==1&&sel==0)
    288a:	81 30       	cpi	r24, 0x01	; 1
    288c:	91 05       	cpc	r25, r1
    288e:	09 f0       	breq	.+2      	; 0x2892 <timeset+0x284>
    2890:	fc c0       	rjmp	.+504    	; 0x2a8a <timeset+0x47c>
    2892:	01 15       	cp	r16, r1
    2894:	11 05       	cpc	r17, r1
    2896:	09 f0       	breq	.+2      	; 0x289a <timeset+0x28c>
    2898:	f3 c0       	rjmp	.+486    	; 0x2a80 <timeset+0x472>
		{if(hc<14){hc+=10;}}
    289a:	80 91 41 06 	lds	r24, 0x0641	; 0x800641 <hc>
    289e:	90 91 42 06 	lds	r25, 0x0642	; 0x800642 <hc+0x1>
    28a2:	8e 30       	cpi	r24, 0x0E	; 14
    28a4:	91 05       	cpc	r25, r1
    28a6:	0c f0       	brlt	.+2      	; 0x28aa <timeset+0x29c>
    28a8:	eb c0       	rjmp	.+470    	; 0x2a80 <timeset+0x472>
    28aa:	0a 96       	adiw	r24, 0x0a	; 10
    28ac:	90 93 42 06 	sts	0x0642, r25	; 0x800642 <hc+0x1>
    28b0:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <hc>
    28b4:	e5 c0       	rjmp	.+458    	; 0x2a80 <timeset+0x472>
		if(rec==2&&sel==0)
    28b6:	01 15       	cp	r16, r1
    28b8:	11 05       	cpc	r17, r1
    28ba:	d9 f4       	brne	.+54     	; 0x28f2 <timeset+0x2e4>
		{if(hc>=10){hc-=10;}}
    28bc:	20 91 41 06 	lds	r18, 0x0641	; 0x800641 <hc>
    28c0:	30 91 42 06 	lds	r19, 0x0642	; 0x800642 <hc+0x1>
    28c4:	2a 30       	cpi	r18, 0x0A	; 10
    28c6:	31 05       	cpc	r19, r1
    28c8:	a4 f0       	brlt	.+40     	; 0x28f2 <timeset+0x2e4>
    28ca:	2a 50       	subi	r18, 0x0A	; 10
    28cc:	31 09       	sbc	r19, r1
    28ce:	30 93 42 06 	sts	0x0642, r19	; 0x800642 <hc+0x1>
    28d2:	20 93 41 06 	sts	0x0641, r18	; 0x800641 <hc>
    28d6:	0d c0       	rjmp	.+26     	; 0x28f2 <timeset+0x2e4>
		
		if(rec==1&&sel==1)
		{if(hc<23){hc++;}}
    28d8:	80 91 41 06 	lds	r24, 0x0641	; 0x800641 <hc>
    28dc:	90 91 42 06 	lds	r25, 0x0642	; 0x800642 <hc+0x1>
    28e0:	87 31       	cpi	r24, 0x17	; 23
    28e2:	91 05       	cpc	r25, r1
    28e4:	e4 f4       	brge	.+56     	; 0x291e <timeset+0x310>
    28e6:	01 96       	adiw	r24, 0x01	; 1
    28e8:	90 93 42 06 	sts	0x0642, r25	; 0x800642 <hc+0x1>
    28ec:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <hc>
    28f0:	16 c0       	rjmp	.+44     	; 0x291e <timeset+0x310>
		if(rec==2&&sel==1)
    28f2:	82 30       	cpi	r24, 0x02	; 2
    28f4:	91 05       	cpc	r25, r1
    28f6:	09 f0       	breq	.+2      	; 0x28fa <timeset+0x2ec>
    28f8:	d2 c0       	rjmp	.+420    	; 0x2a9e <timeset+0x490>
    28fa:	01 30       	cpi	r16, 0x01	; 1
    28fc:	11 05       	cpc	r17, r1
    28fe:	09 f0       	breq	.+2      	; 0x2902 <timeset+0x2f4>
    2900:	c9 c0       	rjmp	.+402    	; 0x2a94 <timeset+0x486>
		{if(hc>0){hc--;}}
    2902:	80 91 41 06 	lds	r24, 0x0641	; 0x800641 <hc>
    2906:	90 91 42 06 	lds	r25, 0x0642	; 0x800642 <hc+0x1>
    290a:	18 16       	cp	r1, r24
    290c:	19 06       	cpc	r1, r25
    290e:	0c f0       	brlt	.+2      	; 0x2912 <timeset+0x304>
    2910:	c1 c0       	rjmp	.+386    	; 0x2a94 <timeset+0x486>
    2912:	01 97       	sbiw	r24, 0x01	; 1
    2914:	90 93 42 06 	sts	0x0642, r25	; 0x800642 <hc+0x1>
    2918:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <hc>
    291c:	bb c0       	rjmp	.+374    	; 0x2a94 <timeset+0x486>
		
		if(rec==1&&sel==2)
    291e:	02 30       	cpi	r16, 0x02	; 2
    2920:	11 05       	cpc	r17, r1
    2922:	f1 f4       	brne	.+60     	; 0x2960 <timeset+0x352>
		{if(mc<50){mc+=10;}}
    2924:	80 91 3f 06 	lds	r24, 0x063F	; 0x80063f <mc>
    2928:	90 91 40 06 	lds	r25, 0x0640	; 0x800640 <mc+0x1>
    292c:	82 33       	cpi	r24, 0x32	; 50
    292e:	91 05       	cpc	r25, r1
    2930:	bc f4       	brge	.+46     	; 0x2960 <timeset+0x352>
    2932:	0a 96       	adiw	r24, 0x0a	; 10
    2934:	90 93 40 06 	sts	0x0640, r25	; 0x800640 <mc+0x1>
    2938:	80 93 3f 06 	sts	0x063F, r24	; 0x80063f <mc>
    293c:	11 c0       	rjmp	.+34     	; 0x2960 <timeset+0x352>
		if(rec==2&&sel==2)
		{if(mc>0){mc-=10;}}
    293e:	80 91 3f 06 	lds	r24, 0x063F	; 0x80063f <mc>
    2942:	90 91 40 06 	lds	r25, 0x0640	; 0x800640 <mc+0x1>
    2946:	18 16       	cp	r1, r24
    2948:	19 06       	cpc	r1, r25
    294a:	e4 f4       	brge	.+56     	; 0x2984 <timeset+0x376>
    294c:	0a 97       	sbiw	r24, 0x0a	; 10
    294e:	90 93 40 06 	sts	0x0640, r25	; 0x800640 <mc+0x1>
    2952:	80 93 3f 06 	sts	0x063F, r24	; 0x80063f <mc>
    2956:	16 c0       	rjmp	.+44     	; 0x2984 <timeset+0x376>
		
		if(rec==1&&sel==3)
    2958:	81 30       	cpi	r24, 0x01	; 1
    295a:	91 05       	cpc	r25, r1
    295c:	09 f0       	breq	.+2      	; 0x2960 <timeset+0x352>
    295e:	a9 c0       	rjmp	.+338    	; 0x2ab2 <timeset+0x4a4>
    2960:	03 30       	cpi	r16, 0x03	; 3
    2962:	11 05       	cpc	r17, r1
    2964:	09 f0       	breq	.+2      	; 0x2968 <timeset+0x35a>
    2966:	a0 c0       	rjmp	.+320    	; 0x2aa8 <timeset+0x49a>
		{if(mc<59){mc++;}}
    2968:	80 91 3f 06 	lds	r24, 0x063F	; 0x80063f <mc>
    296c:	90 91 40 06 	lds	r25, 0x0640	; 0x800640 <mc+0x1>
    2970:	8b 33       	cpi	r24, 0x3B	; 59
    2972:	91 05       	cpc	r25, r1
    2974:	0c f0       	brlt	.+2      	; 0x2978 <timeset+0x36a>
    2976:	98 c0       	rjmp	.+304    	; 0x2aa8 <timeset+0x49a>
    2978:	01 96       	adiw	r24, 0x01	; 1
    297a:	90 93 40 06 	sts	0x0640, r25	; 0x800640 <mc+0x1>
    297e:	80 93 3f 06 	sts	0x063F, r24	; 0x80063f <mc>
    2982:	92 c0       	rjmp	.+292    	; 0x2aa8 <timeset+0x49a>
		if(rec==2&&sel==3)
    2984:	03 30       	cpi	r16, 0x03	; 3
    2986:	11 05       	cpc	r17, r1
    2988:	f1 f4       	brne	.+60     	; 0x29c6 <timeset+0x3b8>
		{if(mc>0){mc--;}}
    298a:	80 91 3f 06 	lds	r24, 0x063F	; 0x80063f <mc>
    298e:	90 91 40 06 	lds	r25, 0x0640	; 0x800640 <mc+0x1>
    2992:	18 16       	cp	r1, r24
    2994:	19 06       	cpc	r1, r25
    2996:	bc f4       	brge	.+46     	; 0x29c6 <timeset+0x3b8>
    2998:	01 97       	sbiw	r24, 0x01	; 1
    299a:	90 93 40 06 	sts	0x0640, r25	; 0x800640 <mc+0x1>
    299e:	80 93 3f 06 	sts	0x063F, r24	; 0x80063f <mc>
    29a2:	11 c0       	rjmp	.+34     	; 0x29c6 <timeset+0x3b8>
		
		if(rec==1&&sel==4)
		{if(sc<50){sc+=10;}}
    29a4:	80 91 3d 06 	lds	r24, 0x063D	; 0x80063d <sc>
    29a8:	90 91 3e 06 	lds	r25, 0x063E	; 0x80063e <sc+0x1>
    29ac:	82 33       	cpi	r24, 0x32	; 50
    29ae:	91 05       	cpc	r25, r1
    29b0:	e4 f4       	brge	.+56     	; 0x29ea <timeset+0x3dc>
    29b2:	0a 96       	adiw	r24, 0x0a	; 10
    29b4:	90 93 3e 06 	sts	0x063E, r25	; 0x80063e <sc+0x1>
    29b8:	80 93 3d 06 	sts	0x063D, r24	; 0x80063d <sc>
    29bc:	16 c0       	rjmp	.+44     	; 0x29ea <timeset+0x3dc>
		if(rec==2&&sel==4)
    29be:	82 30       	cpi	r24, 0x02	; 2
    29c0:	91 05       	cpc	r25, r1
    29c2:	09 f0       	breq	.+2      	; 0x29c6 <timeset+0x3b8>
    29c4:	7f c0       	rjmp	.+254    	; 0x2ac4 <timeset+0x4b6>
    29c6:	04 30       	cpi	r16, 0x04	; 4
    29c8:	11 05       	cpc	r17, r1
    29ca:	09 f0       	breq	.+2      	; 0x29ce <timeset+0x3c0>
    29cc:	76 c0       	rjmp	.+236    	; 0x2aba <timeset+0x4ac>
		{if(sc>0){sc-=10;}}
    29ce:	80 91 3d 06 	lds	r24, 0x063D	; 0x80063d <sc>
    29d2:	90 91 3e 06 	lds	r25, 0x063E	; 0x80063e <sc+0x1>
    29d6:	18 16       	cp	r1, r24
    29d8:	19 06       	cpc	r1, r25
    29da:	0c f0       	brlt	.+2      	; 0x29de <timeset+0x3d0>
    29dc:	6e c0       	rjmp	.+220    	; 0x2aba <timeset+0x4ac>
    29de:	0a 97       	sbiw	r24, 0x0a	; 10
    29e0:	90 93 3e 06 	sts	0x063E, r25	; 0x80063e <sc+0x1>
    29e4:	80 93 3d 06 	sts	0x063D, r24	; 0x80063d <sc>
    29e8:	68 c0       	rjmp	.+208    	; 0x2aba <timeset+0x4ac>
		
		if(rec==1&&sel==5)
    29ea:	05 30       	cpi	r16, 0x05	; 5
    29ec:	11 05       	cpc	r17, r1
    29ee:	c9 f4       	brne	.+50     	; 0x2a22 <timeset+0x414>
		{if(sc<59){sc++;}}
    29f0:	80 91 3d 06 	lds	r24, 0x063D	; 0x80063d <sc>
    29f4:	90 91 3e 06 	lds	r25, 0x063E	; 0x80063e <sc+0x1>
    29f8:	8b 33       	cpi	r24, 0x3B	; 59
    29fa:	91 05       	cpc	r25, r1
    29fc:	94 f4       	brge	.+36     	; 0x2a22 <timeset+0x414>
    29fe:	01 96       	adiw	r24, 0x01	; 1
    2a00:	90 93 3e 06 	sts	0x063E, r25	; 0x80063e <sc+0x1>
    2a04:	80 93 3d 06 	sts	0x063D, r24	; 0x80063d <sc>
    2a08:	0c c0       	rjmp	.+24     	; 0x2a22 <timeset+0x414>
		if(rec==2&&sel==5)
		{if(sc>0){sc--;}}
    2a0a:	80 91 3d 06 	lds	r24, 0x063D	; 0x80063d <sc>
    2a0e:	90 91 3e 06 	lds	r25, 0x063E	; 0x80063e <sc+0x1>
    2a12:	18 16       	cp	r1, r24
    2a14:	19 06       	cpc	r1, r25
    2a16:	2c f4       	brge	.+10     	; 0x2a22 <timeset+0x414>
    2a18:	01 97       	sbiw	r24, 0x01	; 1
    2a1a:	90 93 3e 06 	sts	0x063E, r25	; 0x80063e <sc+0x1>
    2a1e:	80 93 3d 06 	sts	0x063D, r24	; 0x80063d <sc>
		
		rec=0;
    2a22:	10 92 3c 06 	sts	0x063C, r1	; 0x80063c <rec+0x1>
    2a26:	10 92 3b 06 	sts	0x063B, r1	; 0x80063b <rec>
		
		if(!(PINC&=(1<<sw5)))
    2a2a:	83 b3       	in	r24, 0x13	; 19
    2a2c:	80 71       	andi	r24, 0x10	; 16
    2a2e:	83 bb       	out	0x13, r24	; 19
    2a30:	81 11       	cpse	r24, r1
    2a32:	11 c0       	rjmp	.+34     	; 0x2a56 <timeset+0x448>
		{
			while(!(PINC&=(1<<sw5))){}
    2a34:	83 b3       	in	r24, 0x13	; 19
    2a36:	80 71       	andi	r24, 0x10	; 16
    2a38:	83 bb       	out	0x13, r24	; 19
    2a3a:	88 23       	and	r24, r24
    2a3c:	d9 f3       	breq	.-10     	; 0x2a34 <timeset+0x426>
			ttrig=1;
    2a3e:	81 e0       	ldi	r24, 0x01	; 1
    2a40:	90 e0       	ldi	r25, 0x00	; 0
    2a42:	90 93 5c 06 	sts	0x065C, r25	; 0x80065c <ttrig+0x1>
    2a46:	80 93 5b 06 	sts	0x065B, r24	; 0x80065b <ttrig>
			eeprom_write_byte((uint16_t*)46,1);
    2a4a:	61 e0       	ldi	r22, 0x01	; 1
    2a4c:	8e e2       	ldi	r24, 0x2E	; 46
    2a4e:	90 e0       	ldi	r25, 0x00	; 0
    2a50:	0e 94 39 31 	call	0x6272	; 0x6272 <eeprom_write_byte>
			break;
    2a54:	55 c0       	rjmp	.+170    	; 0x2b00 <timeset+0x4f2>
		}
		
		if(key==13)
    2a56:	80 91 3a 06 	lds	r24, 0x063A	; 0x80063a <key>
    2a5a:	8d 30       	cpi	r24, 0x0D	; 13
    2a5c:	09 f0       	breq	.+2      	; 0x2a60 <timeset+0x452>
    2a5e:	16 ce       	rjmp	.-980    	; 0x268c <timeset+0x7e>
		{
			ttrig=1;
    2a60:	81 e0       	ldi	r24, 0x01	; 1
    2a62:	90 e0       	ldi	r25, 0x00	; 0
    2a64:	90 93 5c 06 	sts	0x065C, r25	; 0x80065c <ttrig+0x1>
    2a68:	80 93 5b 06 	sts	0x065B, r24	; 0x80065b <ttrig>
			eeprom_write_byte((uint16_t*)46,1);
    2a6c:	61 e0       	ldi	r22, 0x01	; 1
    2a6e:	8e e2       	ldi	r24, 0x2E	; 46
    2a70:	90 e0       	ldi	r25, 0x00	; 0
    2a72:	0e 94 39 31 	call	0x6272	; 0x6272 <eeprom_write_byte>
			break;
		}
	}
}
    2a76:	44 c0       	rjmp	.+136    	; 0x2b00 <timeset+0x4f2>
		prints(ot);
		
		if(sel>=2)
		{g_xy(40+(6*sel)+6,32);}
		
		if(sel>=4)
    2a78:	04 30       	cpi	r16, 0x04	; 4
    2a7a:	11 05       	cpc	r17, r1
    2a7c:	3c f5       	brge	.+78     	; 0x2acc <timeset+0x4be>
    2a7e:	8d ce       	rjmp	.-742    	; 0x279a <timeset+0x18c>
		if(rec==1&&sel==0)
		{if(hc<14){hc+=10;}}
		if(rec==2&&sel==0)
		{if(hc>=10){hc-=10;}}
		
		if(rec==1&&sel==1)
    2a80:	01 30       	cpi	r16, 0x01	; 1
    2a82:	11 05       	cpc	r17, r1
    2a84:	09 f0       	breq	.+2      	; 0x2a88 <timeset+0x47a>
    2a86:	4b cf       	rjmp	.-362    	; 0x291e <timeset+0x310>
    2a88:	27 cf       	rjmp	.-434    	; 0x28d8 <timeset+0x2ca>
		
		if(rec==4&&sel<5){sel++;}
		
		if(rec==1&&sel==0)
		{if(hc<14){hc+=10;}}
		if(rec==2&&sel==0)
    2a8a:	82 30       	cpi	r24, 0x02	; 2
    2a8c:	91 05       	cpc	r25, r1
    2a8e:	09 f4       	brne	.+2      	; 0x2a92 <timeset+0x484>
    2a90:	12 cf       	rjmp	.-476    	; 0x28b6 <timeset+0x2a8>
    2a92:	62 cf       	rjmp	.-316    	; 0x2958 <timeset+0x34a>
		if(rec==2&&sel==1)
		{if(hc>0){hc--;}}
		
		if(rec==1&&sel==2)
		{if(mc<50){mc+=10;}}
		if(rec==2&&sel==2)
    2a94:	02 30       	cpi	r16, 0x02	; 2
    2a96:	11 05       	cpc	r17, r1
    2a98:	09 f0       	breq	.+2      	; 0x2a9c <timeset+0x48e>
    2a9a:	74 cf       	rjmp	.-280    	; 0x2984 <timeset+0x376>
    2a9c:	50 cf       	rjmp	.-352    	; 0x293e <timeset+0x330>
		if(rec==1&&sel==1)
		{if(hc<23){hc++;}}
		if(rec==2&&sel==1)
		{if(hc>0){hc--;}}
		
		if(rec==1&&sel==2)
    2a9e:	81 30       	cpi	r24, 0x01	; 1
    2aa0:	91 05       	cpc	r25, r1
    2aa2:	09 f0       	breq	.+2      	; 0x2aa6 <timeset+0x498>
    2aa4:	8c cf       	rjmp	.-232    	; 0x29be <timeset+0x3b0>
    2aa6:	3b cf       	rjmp	.-394    	; 0x291e <timeset+0x310>
		if(rec==1&&sel==3)
		{if(mc<59){mc++;}}
		if(rec==2&&sel==3)
		{if(mc>0){mc--;}}
		
		if(rec==1&&sel==4)
    2aa8:	04 30       	cpi	r16, 0x04	; 4
    2aaa:	11 05       	cpc	r17, r1
    2aac:	09 f0       	breq	.+2      	; 0x2ab0 <timeset+0x4a2>
    2aae:	9d cf       	rjmp	.-198    	; 0x29ea <timeset+0x3dc>
    2ab0:	79 cf       	rjmp	.-270    	; 0x29a4 <timeset+0x396>
		if(rec==2&&sel==2)
		{if(mc>0){mc-=10;}}
		
		if(rec==1&&sel==3)
		{if(mc<59){mc++;}}
		if(rec==2&&sel==3)
    2ab2:	02 97       	sbiw	r24, 0x02	; 2
    2ab4:	09 f4       	brne	.+2      	; 0x2ab8 <timeset+0x4aa>
    2ab6:	66 cf       	rjmp	.-308    	; 0x2984 <timeset+0x376>
    2ab8:	b4 cf       	rjmp	.-152    	; 0x2a22 <timeset+0x414>
		if(rec==2&&sel==4)
		{if(sc>0){sc-=10;}}
		
		if(rec==1&&sel==5)
		{if(sc<59){sc++;}}
		if(rec==2&&sel==5)
    2aba:	05 30       	cpi	r16, 0x05	; 5
    2abc:	11 05       	cpc	r17, r1
    2abe:	09 f0       	breq	.+2      	; 0x2ac2 <timeset+0x4b4>
    2ac0:	b0 cf       	rjmp	.-160    	; 0x2a22 <timeset+0x414>
    2ac2:	a3 cf       	rjmp	.-186    	; 0x2a0a <timeset+0x3fc>
		if(rec==1&&sel==4)
		{if(sc<50){sc+=10;}}
		if(rec==2&&sel==4)
		{if(sc>0){sc-=10;}}
		
		if(rec==1&&sel==5)
    2ac4:	01 97       	sbiw	r24, 0x01	; 1
    2ac6:	09 f0       	breq	.+2      	; 0x2aca <timeset+0x4bc>
    2ac8:	ac cf       	rjmp	.-168    	; 0x2a22 <timeset+0x414>
    2aca:	8f cf       	rjmp	.-226    	; 0x29ea <timeset+0x3dc>
		
		if(sel>=2)
		{g_xy(40+(6*sel)+6,32);}
		
		if(sel>=4)
		{g_xy(40+(6*sel)+12,32);}
    2acc:	c8 01       	movw	r24, r16
    2ace:	88 0f       	add	r24, r24
    2ad0:	99 1f       	adc	r25, r25
    2ad2:	80 0f       	add	r24, r16
    2ad4:	91 1f       	adc	r25, r17
    2ad6:	88 0f       	add	r24, r24
    2ad8:	99 1f       	adc	r25, r25
    2ada:	60 e2       	ldi	r22, 0x20	; 32
    2adc:	70 e0       	ldi	r23, 0x00	; 0
    2ade:	c4 96       	adiw	r24, 0x34	; 52
    2ae0:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
    2ae4:	5a ce       	rjmp	.-844    	; 0x279a <timeset+0x18c>
    2ae6:	c8 01       	movw	r24, r16
    2ae8:	88 0f       	add	r24, r24
    2aea:	99 1f       	adc	r25, r25
    2aec:	80 0f       	add	r24, r16
    2aee:	91 1f       	adc	r25, r17
    2af0:	88 0f       	add	r24, r24
    2af2:	99 1f       	adc	r25, r25
    2af4:	60 e2       	ldi	r22, 0x20	; 32
    2af6:	70 e0       	ldi	r23, 0x00	; 0
    2af8:	c4 96       	adiw	r24, 0x34	; 52
    2afa:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
    2afe:	59 ce       	rjmp	.-846    	; 0x27b2 <timeset+0x1a4>
			ttrig=1;
			eeprom_write_byte((uint16_t*)46,1);
			break;
		}
	}
}
    2b00:	df 91       	pop	r29
    2b02:	cf 91       	pop	r28
    2b04:	1f 91       	pop	r17
    2b06:	0f 91       	pop	r16
    2b08:	ff 90       	pop	r15
    2b0a:	ef 90       	pop	r14
    2b0c:	df 90       	pop	r13
    2b0e:	cf 90       	pop	r12
    2b10:	bf 90       	pop	r11
    2b12:	af 90       	pop	r10
    2b14:	9f 90       	pop	r9
    2b16:	8f 90       	pop	r8
    2b18:	7f 90       	pop	r7
    2b1a:	5f 90       	pop	r5
    2b1c:	4f 90       	pop	r4
    2b1e:	3f 90       	pop	r3
    2b20:	2f 90       	pop	r2
    2b22:	08 95       	ret

00002b24 <nowtime>:
void nowtime()
{
    2b24:	ff 92       	push	r15
    2b26:	0f 93       	push	r16
    2b28:	1f 93       	push	r17
    2b2a:	cf 93       	push	r28
    2b2c:	df 93       	push	r29
	eeprom_write_byte((uint16_t*)54,sc);
    2b2e:	60 91 3d 06 	lds	r22, 0x063D	; 0x80063d <sc>
    2b32:	86 e3       	ldi	r24, 0x36	; 54
    2b34:	90 e0       	ldi	r25, 0x00	; 0
    2b36:	0e 94 39 31 	call	0x6272	; 0x6272 <eeprom_write_byte>
	eeprom_write_byte((uint16_t*)62,mc);
    2b3a:	60 91 3f 06 	lds	r22, 0x063F	; 0x80063f <mc>
    2b3e:	8e e3       	ldi	r24, 0x3E	; 62
    2b40:	90 e0       	ldi	r25, 0x00	; 0
    2b42:	0e 94 39 31 	call	0x6272	; 0x6272 <eeprom_write_byte>
	eeprom_write_byte((uint16_t*)70,hc);
    2b46:	60 91 41 06 	lds	r22, 0x0641	; 0x800641 <hc>
    2b4a:	86 e4       	ldi	r24, 0x46	; 70
    2b4c:	90 e0       	ldi	r25, 0x00	; 0
    2b4e:	0e 94 39 31 	call	0x6272	; 0x6272 <eeprom_write_byte>
	
	s=eeprom_read_byte((uint16_t*)54);
    2b52:	86 e3       	ldi	r24, 0x36	; 54
    2b54:	90 e0       	ldi	r25, 0x00	; 0
    2b56:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    2b5a:	90 e0       	ldi	r25, 0x00	; 0
    2b5c:	90 93 44 06 	sts	0x0644, r25	; 0x800644 <s+0x1>
    2b60:	80 93 43 06 	sts	0x0643, r24	; 0x800643 <s>
	m=eeprom_read_byte((uint16_t*)62);
    2b64:	8e e3       	ldi	r24, 0x3E	; 62
    2b66:	90 e0       	ldi	r25, 0x00	; 0
    2b68:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    2b6c:	90 e0       	ldi	r25, 0x00	; 0
    2b6e:	90 93 46 06 	sts	0x0646, r25	; 0x800646 <m+0x1>
    2b72:	80 93 45 06 	sts	0x0645, r24	; 0x800645 <m>
	h=eeprom_read_byte((uint16_t*)70);
    2b76:	86 e4       	ldi	r24, 0x46	; 70
    2b78:	90 e0       	ldi	r25, 0x00	; 0
    2b7a:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    2b7e:	28 2f       	mov	r18, r24
    2b80:	30 e0       	ldi	r19, 0x00	; 0
    2b82:	30 93 48 06 	sts	0x0648, r19	; 0x800648 <h+0x1>
    2b86:	20 93 47 06 	sts	0x0647, r18	; 0x800647 <h>
	
	sprintf(&ot[0],"%02d",h);
    2b8a:	1f 92       	push	r1
    2b8c:	8f 93       	push	r24
    2b8e:	c9 ec       	ldi	r28, 0xC9	; 201
    2b90:	d1 e0       	ldi	r29, 0x01	; 1
    2b92:	df 93       	push	r29
    2b94:	cf 93       	push	r28
    2b96:	05 eb       	ldi	r16, 0xB5	; 181
    2b98:	1b e0       	ldi	r17, 0x0B	; 11
    2b9a:	1f 93       	push	r17
    2b9c:	0f 93       	push	r16
    2b9e:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	ot[2]=':';	sprintf(&ot[3],"%02d",m);
    2ba2:	0f 2e       	mov	r0, r31
    2ba4:	fa e3       	ldi	r31, 0x3A	; 58
    2ba6:	ff 2e       	mov	r15, r31
    2ba8:	f0 2d       	mov	r31, r0
    2baa:	f8 01       	movw	r30, r16
    2bac:	f2 82       	std	Z+2, r15	; 0x02
    2bae:	80 91 46 06 	lds	r24, 0x0646	; 0x800646 <m+0x1>
    2bb2:	8f 93       	push	r24
    2bb4:	80 91 45 06 	lds	r24, 0x0645	; 0x800645 <m>
    2bb8:	8f 93       	push	r24
    2bba:	df 93       	push	r29
    2bbc:	cf 93       	push	r28
    2bbe:	88 eb       	ldi	r24, 0xB8	; 184
    2bc0:	9b e0       	ldi	r25, 0x0B	; 11
    2bc2:	9f 93       	push	r25
    2bc4:	8f 93       	push	r24
    2bc6:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	ot[5]=':';
    2bca:	f8 01       	movw	r30, r16
    2bcc:	f5 82       	std	Z+5, r15	; 0x05
	sprintf(&ot[6],"%02d",s);
    2bce:	80 91 44 06 	lds	r24, 0x0644	; 0x800644 <s+0x1>
    2bd2:	8f 93       	push	r24
    2bd4:	80 91 43 06 	lds	r24, 0x0643	; 0x800643 <s>
    2bd8:	8f 93       	push	r24
    2bda:	df 93       	push	r29
    2bdc:	cf 93       	push	r28
    2bde:	8b eb       	ldi	r24, 0xBB	; 187
    2be0:	9b e0       	ldi	r25, 0x0B	; 11
    2be2:	9f 93       	push	r25
    2be4:	8f 93       	push	r24
    2be6:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
}
    2bea:	ed b7       	in	r30, 0x3d	; 61
    2bec:	fe b7       	in	r31, 0x3e	; 62
    2bee:	72 96       	adiw	r30, 0x12	; 18
    2bf0:	0f b6       	in	r0, 0x3f	; 63
    2bf2:	f8 94       	cli
    2bf4:	fe bf       	out	0x3e, r31	; 62
    2bf6:	0f be       	out	0x3f, r0	; 63
    2bf8:	ed bf       	out	0x3d, r30	; 61
    2bfa:	df 91       	pop	r29
    2bfc:	cf 91       	pop	r28
    2bfe:	1f 91       	pop	r17
    2c00:	0f 91       	pop	r16
    2c02:	ff 90       	pop	r15
    2c04:	08 95       	ret

00002c06 <error>:
void error()
{
    2c06:	ef 92       	push	r14
    2c08:	ff 92       	push	r15
    2c0a:	0f 93       	push	r16
    2c0c:	1f 93       	push	r17
    2c0e:	cf 93       	push	r28
    2c10:	df 93       	push	r29
	int bnum=0;
	int br=0;
	
	print("\r\f\n                sw2:Err_Log\n\n\rsw1:T/H Graph   sw5:Time/div   sw3:L Graph\n\n\r                sw4:Vigil Mod");
    2c12:	8e ec       	ldi	r24, 0xCE	; 206
    2c14:	91 e0       	ldi	r25, 0x01	; 1
    2c16:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\n\r               -View Error Log-");
    2c1a:	8a e3       	ldi	r24, 0x3A	; 58
    2c1c:	92 e0       	ldi	r25, 0x02	; 2
    2c1e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	ot[5]=':';
	sprintf(&ot[6],"%02d",s);
}
void error()
{
	int bnum=0;
    2c22:	00 e0       	ldi	r16, 0x00	; 0
    2c24:	10 e0       	ldi	r17, 0x00	; 0
		for(t=0; t<300;)
		{
			if(!(PINC&=(1<<sw2))&&bnum<num-1)
			{
				while(!(PINC&=(1<<sw2))){}
				t=300;
    2c26:	cc e2       	ldi	r28, 0x2C	; 44
    2c28:	d1 e0       	ldi	r29, 0x01	; 1
	print("\r\f\n                sw2:Err_Log\n\n\rsw1:T/H Graph   sw5:Time/div   sw3:L Graph\n\n\r                sw4:Vigil Mod");
	print("\n\n\r               -View Error Log-");
	
	while(1)
	{
		for(t=0; t<300;)
    2c2a:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    2c2e:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
		{
			if(!(PINC&=(1<<sw2))&&bnum<num-1)
    2c32:	83 b3       	in	r24, 0x13	; 19
    2c34:	82 70       	andi	r24, 0x02	; 2
    2c36:	83 bb       	out	0x13, r24	; 19
    2c38:	81 11       	cpse	r24, r1
    2c3a:	13 c0       	rjmp	.+38     	; 0x2c62 <error+0x5c>
    2c3c:	80 91 2a 06 	lds	r24, 0x062A	; 0x80062a <num>
    2c40:	90 91 2b 06 	lds	r25, 0x062B	; 0x80062b <num+0x1>
    2c44:	01 97       	sbiw	r24, 0x01	; 1
    2c46:	08 17       	cp	r16, r24
    2c48:	19 07       	cpc	r17, r25
    2c4a:	5c f4       	brge	.+22     	; 0x2c62 <error+0x5c>
			{
				while(!(PINC&=(1<<sw2))){}
    2c4c:	83 b3       	in	r24, 0x13	; 19
    2c4e:	82 70       	andi	r24, 0x02	; 2
    2c50:	83 bb       	out	0x13, r24	; 19
    2c52:	88 23       	and	r24, r24
    2c54:	d9 f3       	breq	.-10     	; 0x2c4c <error+0x46>
				t=300;
    2c56:	d0 93 4a 06 	sts	0x064A, r29	; 0x80064a <t+0x1>
    2c5a:	c0 93 49 06 	sts	0x0649, r28	; 0x800649 <t>
				bnum++;
    2c5e:	0f 5f       	subi	r16, 0xFF	; 255
    2c60:	1f 4f       	sbci	r17, 0xFF	; 255
			}
			
			if(!(PINC&=(1<<sw4))&&bnum>0)
    2c62:	83 b3       	in	r24, 0x13	; 19
    2c64:	88 70       	andi	r24, 0x08	; 8
    2c66:	83 bb       	out	0x13, r24	; 19
    2c68:	81 11       	cpse	r24, r1
    2c6a:	0e c0       	rjmp	.+28     	; 0x2c88 <error+0x82>
    2c6c:	10 16       	cp	r1, r16
    2c6e:	11 06       	cpc	r1, r17
    2c70:	5c f4       	brge	.+22     	; 0x2c88 <error+0x82>
			{
				while(!(PINC&=(1<<sw4))){}
    2c72:	83 b3       	in	r24, 0x13	; 19
    2c74:	88 70       	andi	r24, 0x08	; 8
    2c76:	83 bb       	out	0x13, r24	; 19
    2c78:	88 23       	and	r24, r24
    2c7a:	d9 f3       	breq	.-10     	; 0x2c72 <error+0x6c>
				t=300;
    2c7c:	d0 93 4a 06 	sts	0x064A, r29	; 0x80064a <t+0x1>
    2c80:	c0 93 49 06 	sts	0x0649, r28	; 0x800649 <t>
				bnum--;
    2c84:	01 50       	subi	r16, 0x01	; 1
    2c86:	11 09       	sbc	r17, r1
			}
			if(!(PINC&=(1<<sw5)))
    2c88:	83 b3       	in	r24, 0x13	; 19
    2c8a:	80 71       	andi	r24, 0x10	; 16
    2c8c:	83 bb       	out	0x13, r24	; 19
    2c8e:	81 11       	cpse	r24, r1
    2c90:	06 c0       	rjmp	.+12     	; 0x2c9e <error+0x98>
			{
				while(!(PINC&=(1<<sw5))){}
    2c92:	83 b3       	in	r24, 0x13	; 19
    2c94:	80 71       	andi	r24, 0x10	; 16
    2c96:	83 bb       	out	0x13, r24	; 19
    2c98:	88 23       	and	r24, r24
    2c9a:	d9 f3       	breq	.-10     	; 0x2c92 <error+0x8c>
    2c9c:	08 c0       	rjmp	.+16     	; 0x2cae <error+0xa8>
	print("\r\f\n                sw2:Err_Log\n\n\rsw1:T/H Graph   sw5:Time/div   sw3:L Graph\n\n\r                sw4:Vigil Mod");
	print("\n\n\r               -View Error Log-");
	
	while(1)
	{
		for(t=0; t<300;)
    2c9e:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    2ca2:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    2ca6:	8c 32       	cpi	r24, 0x2C	; 44
    2ca8:	91 40       	sbci	r25, 0x01	; 1
    2caa:	1c f2       	brlt	.-122    	; 0x2c32 <error+0x2c>
    2cac:	11 c0       	rjmp	.+34     	; 0x2cd0 <error+0xca>
			{
				while(!(PINC&=(1<<sw5))){}
				br=1; break;
			}
		}
		if(br==1){g_clear();
    2cae:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
			g_line(10,0,10,63);
    2cb2:	2f e3       	ldi	r18, 0x3F	; 63
    2cb4:	4a e0       	ldi	r20, 0x0A	; 10
    2cb6:	60 e0       	ldi	r22, 0x00	; 0
    2cb8:	8a e0       	ldi	r24, 0x0A	; 10
    2cba:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
			g_line(0,53,127,53);
    2cbe:	25 e3       	ldi	r18, 0x35	; 53
    2cc0:	4f e7       	ldi	r20, 0x7F	; 127
    2cc2:	65 e3       	ldi	r22, 0x35	; 53
    2cc4:	80 e0       	ldi	r24, 0x00	; 0
    2cc6:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
		g_render();  break;}
    2cca:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		
		g_xy(61,56);
		printc('#');
		g_render();
	}
}
    2cce:	86 c0       	rjmp	.+268    	; 0x2ddc <error+0x1d6>
		}
		if(br==1){g_clear();
			g_line(10,0,10,63);
			g_line(0,53,127,53);
		g_render();  break;}
		g_clear();
    2cd0:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
		g_xy(61,0);
    2cd4:	60 e0       	ldi	r22, 0x00	; 0
    2cd6:	70 e0       	ldi	r23, 0x00	; 0
    2cd8:	8d e3       	ldi	r24, 0x3D	; 61
    2cda:	90 e0       	ldi	r25, 0x00	; 0
    2cdc:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		printc('@');
    2ce0:	80 e4       	ldi	r24, 0x40	; 64
    2ce2:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		g_xy(11,8);
    2ce6:	68 e0       	ldi	r22, 0x08	; 8
    2ce8:	70 e0       	ldi	r23, 0x00	; 0
    2cea:	8b e0       	ldi	r24, 0x0B	; 11
    2cec:	90 e0       	ldi	r25, 0x00	; 0
    2cee:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("-View Error Log ");
    2cf2:	8d e5       	ldi	r24, 0x5D	; 93
    2cf4:	92 e0       	ldi	r25, 0x02	; 2
    2cf6:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		printi(bnum); printc('-');
    2cfa:	b8 01       	movw	r22, r16
    2cfc:	01 2e       	mov	r0, r17
    2cfe:	00 0c       	add	r0, r0
    2d00:	88 0b       	sbc	r24, r24
    2d02:	99 0b       	sbc	r25, r25
    2d04:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
    2d08:	8d e2       	ldi	r24, 0x2D	; 45
    2d0a:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		g_xy(25,24);
    2d0e:	68 e1       	ldi	r22, 0x18	; 24
    2d10:	70 e0       	ldi	r23, 0x00	; 0
    2d12:	89 e1       	ldi	r24, 0x19	; 25
    2d14:	90 e0       	ldi	r25, 0x00	; 0
    2d16:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		if(bover[bnum]==1)
    2d1a:	f8 01       	movw	r30, r16
    2d1c:	ee 0f       	add	r30, r30
    2d1e:	ff 1f       	adc	r31, r31
    2d20:	ee 5f       	subi	r30, 0xFE	; 254
    2d22:	f9 4f       	sbci	r31, 0xF9	; 249
    2d24:	80 81       	ld	r24, Z
    2d26:	91 81       	ldd	r25, Z+1	; 0x01
    2d28:	01 97       	sbiw	r24, 0x01	; 1
    2d2a:	29 f4       	brne	.+10     	; 0x2d36 <error+0x130>
		{prints("Err_Over_Max");}
    2d2c:	8e e6       	ldi	r24, 0x6E	; 110
    2d2e:	92 e0       	ldi	r25, 0x02	; 2
    2d30:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
    2d34:	04 c0       	rjmp	.+8      	; 0x2d3e <error+0x138>
		else{prints("Err_Over_Min");}
    2d36:	8b e7       	ldi	r24, 0x7B	; 123
    2d38:	92 e0       	ldi	r25, 0x02	; 2
    2d3a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_xy(28,32);
    2d3e:	60 e2       	ldi	r22, 0x20	; 32
    2d40:	70 e0       	ldi	r23, 0x00	; 0
    2d42:	8c e1       	ldi	r24, 0x1C	; 28
    2d44:	90 e0       	ldi	r25, 0x00	; 0
    2d46:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Sensor:");
    2d4a:	88 e8       	ldi	r24, 0x88	; 136
    2d4c:	92 e0       	ldi	r25, 0x02	; 2
    2d4e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		if(bsel[bnum]==0)
    2d52:	f8 01       	movw	r30, r16
    2d54:	ee 0f       	add	r30, r30
    2d56:	ff 1f       	adc	r31, r31
    2d58:	ea 5e       	subi	r30, 0xEA	; 234
    2d5a:	f9 4f       	sbci	r31, 0xF9	; 249
    2d5c:	80 81       	ld	r24, Z
    2d5e:	91 81       	ldd	r25, Z+1	; 0x01
    2d60:	89 2b       	or	r24, r25
    2d62:	29 f4       	brne	.+10     	; 0x2d6e <error+0x168>
		{prints("Temp");}
    2d64:	80 e9       	ldi	r24, 0x90	; 144
    2d66:	92 e0       	ldi	r25, 0x02	; 2
    2d68:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
    2d6c:	04 c0       	rjmp	.+8      	; 0x2d76 <error+0x170>
		else{prints("Humi");}
    2d6e:	85 e9       	ldi	r24, 0x95	; 149
    2d70:	92 e0       	ldi	r25, 0x02	; 2
    2d72:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_xy(7,40);
    2d76:	68 e2       	ldi	r22, 0x28	; 40
    2d78:	70 e0       	ldi	r23, 0x00	; 0
    2d7a:	87 e0       	ldi	r24, 0x07	; 7
    2d7c:	90 e0       	ldi	r25, 0x00	; 0
    2d7e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("start_time:");
    2d82:	8a e9       	ldi	r24, 0x9A	; 154
    2d84:	92 e0       	ldi	r25, 0x02	; 2
    2d86:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		prints(ots[bnum]);
    2d8a:	78 01       	movw	r14, r16
    2d8c:	ee 0c       	add	r14, r14
    2d8e:	ff 1c       	adc	r15, r15
    2d90:	ee 0c       	add	r14, r14
    2d92:	ff 1c       	adc	r15, r15
    2d94:	ee 0c       	add	r14, r14
    2d96:	ff 1c       	adc	r15, r15
    2d98:	e0 0e       	add	r14, r16
    2d9a:	f1 1e       	adc	r15, r17
    2d9c:	c7 01       	movw	r24, r14
    2d9e:	8b 51       	subi	r24, 0x1B	; 27
    2da0:	99 4f       	sbci	r25, 0xF9	; 249
    2da2:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(13,48);
    2da6:	60 e3       	ldi	r22, 0x30	; 48
    2da8:	70 e0       	ldi	r23, 0x00	; 0
    2daa:	8d e0       	ldi	r24, 0x0D	; 13
    2dac:	90 e0       	ldi	r25, 0x00	; 0
    2dae:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("end_time:");
    2db2:	86 ea       	ldi	r24, 0xA6	; 166
    2db4:	92 e0       	ldi	r25, 0x02	; 2
    2db6:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		prints(ote[bnum]);
    2dba:	c7 01       	movw	r24, r14
    2dbc:	8d 58       	subi	r24, 0x8D	; 141
    2dbe:	99 4f       	sbci	r25, 0xF9	; 249
    2dc0:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_xy(61,56);
    2dc4:	68 e3       	ldi	r22, 0x38	; 56
    2dc6:	70 e0       	ldi	r23, 0x00	; 0
    2dc8:	8d e3       	ldi	r24, 0x3D	; 61
    2dca:	90 e0       	ldi	r25, 0x00	; 0
    2dcc:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		printc('#');
    2dd0:	83 e2       	ldi	r24, 0x23	; 35
    2dd2:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		g_render();
    2dd6:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
	}
    2dda:	27 cf       	rjmp	.-434    	; 0x2c2a <error+0x24>
}
    2ddc:	df 91       	pop	r29
    2dde:	cf 91       	pop	r28
    2de0:	1f 91       	pop	r17
    2de2:	0f 91       	pop	r16
    2de4:	ff 90       	pop	r15
    2de6:	ef 90       	pop	r14
    2de8:	08 95       	ret

00002dea <divset>:
void divset()
{
	g_clear();
    2dea:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
	g_render();
    2dee:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
	while(1)
	{
		g_xy(16,8);
    2df2:	68 e0       	ldi	r22, 0x08	; 8
    2df4:	70 e0       	ldi	r23, 0x00	; 0
    2df6:	80 e1       	ldi	r24, 0x10	; 16
    2df8:	90 e0       	ldi	r25, 0x00	; 0
    2dfa:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Time/div Setting");
    2dfe:	80 eb       	ldi	r24, 0xB0	; 176
    2e00:	92 e0       	ldi	r25, 0x02	; 2
    2e02:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		if(divtrig==0)
    2e06:	80 91 59 06 	lds	r24, 0x0659	; 0x800659 <divtrig>
    2e0a:	90 91 5a 06 	lds	r25, 0x065A	; 0x80065a <divtrig+0x1>
    2e0e:	89 2b       	or	r24, r25
    2e10:	a1 f4       	brne	.+40     	; 0x2e3a <divset+0x50>
		{
			g_xy(22,24);
    2e12:	68 e1       	ldi	r22, 0x18	; 24
    2e14:	70 e0       	ldi	r23, 0x00	; 0
    2e16:	86 e1       	ldi	r24, 0x16	; 22
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("1.5s/ ");
    2e1e:	81 ec       	ldi	r24, 0xC1	; 193
    2e20:	92 e0       	ldi	r25, 0x02	; 2
    2e22:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			printi(tdiv);
    2e26:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <tdiv>
    2e2a:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <tdiv+0x1>
    2e2e:	07 2e       	mov	r0, r23
    2e30:	00 0c       	add	r0, r0
    2e32:	88 0b       	sbc	r24, r24
    2e34:	99 0b       	sbc	r25, r25
    2e36:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
		}
		
		if(divtrig==1)
    2e3a:	80 91 59 06 	lds	r24, 0x0659	; 0x800659 <divtrig>
    2e3e:	90 91 5a 06 	lds	r25, 0x065A	; 0x80065a <divtrig+0x1>
    2e42:	01 97       	sbiw	r24, 0x01	; 1
    2e44:	a1 f4       	brne	.+40     	; 0x2e6e <divset+0x84>
		{
			g_xy(22,24);
    2e46:	68 e1       	ldi	r22, 0x18	; 24
    2e48:	70 e0       	ldi	r23, 0x00	; 0
    2e4a:	86 e1       	ldi	r24, 0x16	; 22
    2e4c:	90 e0       	ldi	r25, 0x00	; 0
    2e4e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("0.1s/ ");
    2e52:	88 ec       	ldi	r24, 0xC8	; 200
    2e54:	92 e0       	ldi	r25, 0x02	; 2
    2e56:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			printi(ltdiv);
    2e5a:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <ltdiv>
    2e5e:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <ltdiv+0x1>
    2e62:	07 2e       	mov	r0, r23
    2e64:	00 0c       	add	r0, r0
    2e66:	88 0b       	sbc	r24, r24
    2e68:	99 0b       	sbc	r25, r25
    2e6a:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
		}
		
		prints(" Pixel");
    2e6e:	8f ec       	ldi	r24, 0xCF	; 207
    2e70:	92 e0       	ldi	r25, 0x02	; 2
    2e72:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_render();
    2e76:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		
		g_xy(7,48);
    2e7a:	60 e3       	ldi	r22, 0x30	; 48
    2e7c:	70 e0       	ldi	r23, 0x00	; 0
    2e7e:	87 e0       	ldi	r24, 0x07	; 7
    2e80:	90 e0       	ldi	r25, 0x00	; 0
    2e82:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("[sw5] Back to Graph");
    2e86:	86 ed       	ldi	r24, 0xD6	; 214
    2e88:	92 e0       	ldi	r25, 0x02	; 2
    2e8a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		if(!(PINC&=(1<<sw2)))
    2e8e:	83 b3       	in	r24, 0x13	; 19
    2e90:	82 70       	andi	r24, 0x02	; 2
    2e92:	83 bb       	out	0x13, r24	; 19
    2e94:	81 11       	cpse	r24, r1
    2e96:	63 c0       	rjmp	.+198    	; 0x2f5e <divset+0x174>
		{
			while(!(PINC&=(1<<sw2))){}
    2e98:	83 b3       	in	r24, 0x13	; 19
    2e9a:	82 70       	andi	r24, 0x02	; 2
    2e9c:	83 bb       	out	0x13, r24	; 19
    2e9e:	88 23       	and	r24, r24
    2ea0:	d9 f3       	breq	.-10     	; 0x2e98 <divset+0xae>
			if(divtrig==0)
    2ea2:	80 91 59 06 	lds	r24, 0x0659	; 0x800659 <divtrig>
    2ea6:	90 91 5a 06 	lds	r25, 0x065A	; 0x80065a <divtrig+0x1>
    2eaa:	89 2b       	or	r24, r25
    2eac:	49 f5       	brne	.+82     	; 0x2f00 <divset+0x116>
			{
				if(tdiv<10){tdiv++;}
    2eae:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <tdiv>
    2eb2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <tdiv+0x1>
    2eb6:	8a 30       	cpi	r24, 0x0A	; 10
    2eb8:	91 05       	cpc	r25, r1
    2eba:	2c f4       	brge	.+10     	; 0x2ec6 <divset+0xdc>
    2ebc:	01 96       	adiw	r24, 0x01	; 1
    2ebe:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <tdiv+0x1>
    2ec2:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <tdiv>
				g_clearline(3);
    2ec6:	83 e0       	ldi	r24, 0x03	; 3
    2ec8:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
				g_xy(22,24);
    2ecc:	68 e1       	ldi	r22, 0x18	; 24
    2ece:	70 e0       	ldi	r23, 0x00	; 0
    2ed0:	86 e1       	ldi	r24, 0x16	; 22
    2ed2:	90 e0       	ldi	r25, 0x00	; 0
    2ed4:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
				prints("1.5s/ ");
    2ed8:	81 ec       	ldi	r24, 0xC1	; 193
    2eda:	92 e0       	ldi	r25, 0x02	; 2
    2edc:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				printi(tdiv);
    2ee0:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <tdiv>
    2ee4:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <tdiv+0x1>
    2ee8:	07 2e       	mov	r0, r23
    2eea:	00 0c       	add	r0, r0
    2eec:	88 0b       	sbc	r24, r24
    2eee:	99 0b       	sbc	r25, r25
    2ef0:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
				prints(" Pixel");
    2ef4:	8f ec       	ldi	r24, 0xCF	; 207
    2ef6:	92 e0       	ldi	r25, 0x02	; 2
    2ef8:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				g_render();
    2efc:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			}
			if(divtrig==1)
    2f00:	80 91 59 06 	lds	r24, 0x0659	; 0x800659 <divtrig>
    2f04:	90 91 5a 06 	lds	r25, 0x065A	; 0x80065a <divtrig+0x1>
    2f08:	01 97       	sbiw	r24, 0x01	; 1
    2f0a:	49 f5       	brne	.+82     	; 0x2f5e <divset+0x174>
			{
				if(ltdiv<10){ltdiv++;}
    2f0c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <ltdiv>
    2f10:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <ltdiv+0x1>
    2f14:	8a 30       	cpi	r24, 0x0A	; 10
    2f16:	91 05       	cpc	r25, r1
    2f18:	2c f4       	brge	.+10     	; 0x2f24 <divset+0x13a>
    2f1a:	01 96       	adiw	r24, 0x01	; 1
    2f1c:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <ltdiv+0x1>
    2f20:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <ltdiv>
				g_clearline(3);
    2f24:	83 e0       	ldi	r24, 0x03	; 3
    2f26:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
				g_xy(22,24);
    2f2a:	68 e1       	ldi	r22, 0x18	; 24
    2f2c:	70 e0       	ldi	r23, 0x00	; 0
    2f2e:	86 e1       	ldi	r24, 0x16	; 22
    2f30:	90 e0       	ldi	r25, 0x00	; 0
    2f32:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
				prints("0.1s/ ");
    2f36:	88 ec       	ldi	r24, 0xC8	; 200
    2f38:	92 e0       	ldi	r25, 0x02	; 2
    2f3a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				printi(ltdiv);
    2f3e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <ltdiv>
    2f42:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <ltdiv+0x1>
    2f46:	07 2e       	mov	r0, r23
    2f48:	00 0c       	add	r0, r0
    2f4a:	88 0b       	sbc	r24, r24
    2f4c:	99 0b       	sbc	r25, r25
    2f4e:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
				prints(" Pixel");
    2f52:	8f ec       	ldi	r24, 0xCF	; 207
    2f54:	92 e0       	ldi	r25, 0x02	; 2
    2f56:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				g_render();
    2f5a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			}
		}
		
		if(!(PINC&=(1<<sw4)))
    2f5e:	83 b3       	in	r24, 0x13	; 19
    2f60:	88 70       	andi	r24, 0x08	; 8
    2f62:	83 bb       	out	0x13, r24	; 19
    2f64:	81 11       	cpse	r24, r1
    2f66:	63 c0       	rjmp	.+198    	; 0x302e <divset+0x244>
		{
			while(!(PINC&=(1<<sw4))){}
    2f68:	83 b3       	in	r24, 0x13	; 19
    2f6a:	88 70       	andi	r24, 0x08	; 8
    2f6c:	83 bb       	out	0x13, r24	; 19
    2f6e:	88 23       	and	r24, r24
    2f70:	d9 f3       	breq	.-10     	; 0x2f68 <divset+0x17e>
			if(divtrig==0)
    2f72:	80 91 59 06 	lds	r24, 0x0659	; 0x800659 <divtrig>
    2f76:	90 91 5a 06 	lds	r25, 0x065A	; 0x80065a <divtrig+0x1>
    2f7a:	89 2b       	or	r24, r25
    2f7c:	49 f5       	brne	.+82     	; 0x2fd0 <divset+0x1e6>
			{
				if(tdiv>5){tdiv--;}
    2f7e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <tdiv>
    2f82:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <tdiv+0x1>
    2f86:	86 30       	cpi	r24, 0x06	; 6
    2f88:	91 05       	cpc	r25, r1
    2f8a:	2c f0       	brlt	.+10     	; 0x2f96 <divset+0x1ac>
    2f8c:	01 97       	sbiw	r24, 0x01	; 1
    2f8e:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <tdiv+0x1>
    2f92:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <tdiv>
				g_clearline(3);
    2f96:	83 e0       	ldi	r24, 0x03	; 3
    2f98:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
				g_xy(22,24);
    2f9c:	68 e1       	ldi	r22, 0x18	; 24
    2f9e:	70 e0       	ldi	r23, 0x00	; 0
    2fa0:	86 e1       	ldi	r24, 0x16	; 22
    2fa2:	90 e0       	ldi	r25, 0x00	; 0
    2fa4:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
				prints("1.5s/ ");
    2fa8:	81 ec       	ldi	r24, 0xC1	; 193
    2faa:	92 e0       	ldi	r25, 0x02	; 2
    2fac:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				printi(tdiv);
    2fb0:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <tdiv>
    2fb4:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <tdiv+0x1>
    2fb8:	07 2e       	mov	r0, r23
    2fba:	00 0c       	add	r0, r0
    2fbc:	88 0b       	sbc	r24, r24
    2fbe:	99 0b       	sbc	r25, r25
    2fc0:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
				prints(" Pixel");
    2fc4:	8f ec       	ldi	r24, 0xCF	; 207
    2fc6:	92 e0       	ldi	r25, 0x02	; 2
    2fc8:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				g_render();
    2fcc:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			}
			if(divtrig==1)
    2fd0:	80 91 59 06 	lds	r24, 0x0659	; 0x800659 <divtrig>
    2fd4:	90 91 5a 06 	lds	r25, 0x065A	; 0x80065a <divtrig+0x1>
    2fd8:	01 97       	sbiw	r24, 0x01	; 1
    2fda:	49 f5       	brne	.+82     	; 0x302e <divset+0x244>
			{
				if(ltdiv>5){ltdiv--;}
    2fdc:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <ltdiv>
    2fe0:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <ltdiv+0x1>
    2fe4:	86 30       	cpi	r24, 0x06	; 6
    2fe6:	91 05       	cpc	r25, r1
    2fe8:	2c f0       	brlt	.+10     	; 0x2ff4 <divset+0x20a>
    2fea:	01 97       	sbiw	r24, 0x01	; 1
    2fec:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <ltdiv+0x1>
    2ff0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <ltdiv>
				g_clearline(3);
    2ff4:	83 e0       	ldi	r24, 0x03	; 3
    2ff6:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
				g_xy(22,24);
    2ffa:	68 e1       	ldi	r22, 0x18	; 24
    2ffc:	70 e0       	ldi	r23, 0x00	; 0
    2ffe:	86 e1       	ldi	r24, 0x16	; 22
    3000:	90 e0       	ldi	r25, 0x00	; 0
    3002:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
				prints("0.1s/ ");
    3006:	88 ec       	ldi	r24, 0xC8	; 200
    3008:	92 e0       	ldi	r25, 0x02	; 2
    300a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				printi(ltdiv);
    300e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <ltdiv>
    3012:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <ltdiv+0x1>
    3016:	07 2e       	mov	r0, r23
    3018:	00 0c       	add	r0, r0
    301a:	88 0b       	sbc	r24, r24
    301c:	99 0b       	sbc	r25, r25
    301e:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
				prints(" Pixel");
    3022:	8f ec       	ldi	r24, 0xCF	; 207
    3024:	92 e0       	ldi	r25, 0x02	; 2
    3026:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				g_render();
    302a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			}
		}
		
		if(!(PINC&=(1<<sw5)))
    302e:	83 b3       	in	r24, 0x13	; 19
    3030:	80 71       	andi	r24, 0x10	; 16
    3032:	83 bb       	out	0x13, r24	; 19
    3034:	81 11       	cpse	r24, r1
    3036:	dd ce       	rjmp	.-582    	; 0x2df2 <divset+0x8>
		{
			while(!(PINC&=(1<<sw5)))
    3038:	83 b3       	in	r24, 0x13	; 19
    303a:	80 71       	andi	r24, 0x10	; 16
    303c:	83 bb       	out	0x13, r24	; 19
    303e:	81 11       	cpse	r24, r1
    3040:	09 c0       	rjmp	.+18     	; 0x3054 <divset+0x26a>
			t=0;
    3042:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    3046:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
			}
		}
		
		if(!(PINC&=(1<<sw5)))
		{
			while(!(PINC&=(1<<sw5)))
    304a:	83 b3       	in	r24, 0x13	; 19
    304c:	80 71       	andi	r24, 0x10	; 16
    304e:	83 bb       	out	0x13, r24	; 19
    3050:	88 23       	and	r24, r24
    3052:	b9 f3       	breq	.-18     	; 0x3042 <divset+0x258>
			t=0;
			g_clear();
    3054:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
			g_render();
    3058:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			g_xy(34,24);
    305c:	68 e1       	ldi	r22, 0x18	; 24
    305e:	70 e0       	ldi	r23, 0x00	; 0
    3060:	82 e2       	ldi	r24, 0x22	; 34
    3062:	90 e0       	ldi	r25, 0x00	; 0
    3064:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Now Saving");
    3068:	8a ee       	ldi	r24, 0xEA	; 234
    306a:	92 e0       	ldi	r25, 0x02	; 2
    306c:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			g_xy(24,32);
    3070:	60 e2       	ldi	r22, 0x20	; 32
    3072:	70 e0       	ldi	r23, 0x00	; 0
    3074:	88 e1       	ldi	r24, 0x18	; 24
    3076:	90 e0       	ldi	r25, 0x00	; 0
    3078:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Please wait...");
    307c:	85 ef       	ldi	r24, 0xF5	; 245
    307e:	92 e0       	ldi	r25, 0x02	; 2
    3080:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			g_render();
    3084:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			trig=1;
    3088:	81 e0       	ldi	r24, 0x01	; 1
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	90 93 56 06 	sts	0x0656, r25	; 0x800656 <trig+0x1>
    3090:	80 93 55 06 	sts	0x0655, r24	; 0x800655 <trig>
    3094:	08 95       	ret

00003096 <war>:
		}
		
	}
}
void war()
{
    3096:	cf 93       	push	r28
    3098:	df 93       	push	r29
	g_clear();
    309a:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
	g_xy(37,16);
    309e:	60 e1       	ldi	r22, 0x10	; 16
    30a0:	70 e0       	ldi	r23, 0x00	; 0
    30a2:	85 e2       	ldi	r24, 0x25	; 37
    30a4:	90 e0       	ldi	r25, 0x00	; 0
    30a6:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("Intrusion");
    30aa:	84 e0       	ldi	r24, 0x04	; 4
    30ac:	93 e0       	ldi	r25, 0x03	; 3
    30ae:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	g_xy(34,24);
    30b2:	68 e1       	ldi	r22, 0x18	; 24
    30b4:	70 e0       	ldi	r23, 0x00	; 0
    30b6:	82 e2       	ldi	r24, 0x22	; 34
    30b8:	90 e0       	ldi	r25, 0x00	; 0
    30ba:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("Detected!!!");
    30be:	8e e0       	ldi	r24, 0x0E	; 14
    30c0:	93 e0       	ldi	r25, 0x03	; 3
    30c2:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		for(t=0; t<500;)
		{
			if(!(PINC&=(1<<sw5)))
			{
				btg=1;
    30c6:	c1 e0       	ldi	r28, 0x01	; 1
    30c8:	d0 e0       	ldi	r29, 0x00	; 0
	prints("Detected!!!");
	
	while(1)
	{
		
		for(t=0; t<500;)
    30ca:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    30ce:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
		{
			if(!(PINC&=(1<<sw5)))
    30d2:	83 b3       	in	r24, 0x13	; 19
    30d4:	80 71       	andi	r24, 0x10	; 16
    30d6:	83 bb       	out	0x13, r24	; 19
    30d8:	81 11       	cpse	r24, r1
    30da:	0b c0       	rjmp	.+22     	; 0x30f2 <war+0x5c>
    30dc:	05 c0       	rjmp	.+10     	; 0x30e8 <war+0x52>
    30de:	83 b3       	in	r24, 0x13	; 19
    30e0:	80 71       	andi	r24, 0x10	; 16
    30e2:	83 bb       	out	0x13, r24	; 19
    30e4:	81 11       	cpse	r24, r1
    30e6:	05 c0       	rjmp	.+10     	; 0x30f2 <war+0x5c>
			{
				btg=1;
    30e8:	d0 93 ff 05 	sts	0x05FF, r29	; 0x8005ff <btg+0x1>
    30ec:	c0 93 fe 05 	sts	0x05FE, r28	; 0x8005fe <btg>
				break;
    30f0:	14 c0       	rjmp	.+40     	; 0x311a <war+0x84>
			}
			g_xy(7,32);
    30f2:	60 e2       	ldi	r22, 0x20	; 32
    30f4:	70 e0       	ldi	r23, 0x00	; 0
    30f6:	87 e0       	ldi	r24, 0x07	; 7
    30f8:	90 e0       	ldi	r25, 0x00	; 0
    30fa:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("-sw5- Back to graph");
    30fe:	8a e1       	ldi	r24, 0x1A	; 26
    3100:	93 e0       	ldi	r25, 0x03	; 3
    3102:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			g_render();
    3106:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			PORTE|=(1<<buz);
    310a:	1e 9a       	sbi	0x03, 6	; 3
	prints("Detected!!!");
	
	while(1)
	{
		
		for(t=0; t<500;)
    310c:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    3110:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    3114:	84 3f       	cpi	r24, 0xF4	; 244
    3116:	91 40       	sbci	r25, 0x01	; 1
    3118:	14 f3       	brlt	.-60     	; 0x30de <war+0x48>
			prints("-sw5- Back to graph");
			g_render();
			PORTE|=(1<<buz);
		}
		
		for(t=0; t<500;)
    311a:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    311e:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
		{
			if(!(PINC&=(1<<sw5)))
    3122:	83 b3       	in	r24, 0x13	; 19
    3124:	80 71       	andi	r24, 0x10	; 16
    3126:	83 bb       	out	0x13, r24	; 19
    3128:	81 11       	cpse	r24, r1
    312a:	0d c0       	rjmp	.+26     	; 0x3146 <war+0xb0>
    312c:	05 c0       	rjmp	.+10     	; 0x3138 <war+0xa2>
    312e:	83 b3       	in	r24, 0x13	; 19
    3130:	80 71       	andi	r24, 0x10	; 16
    3132:	83 bb       	out	0x13, r24	; 19
    3134:	81 11       	cpse	r24, r1
    3136:	07 c0       	rjmp	.+14     	; 0x3146 <war+0xb0>
			{
				btg=1;
    3138:	81 e0       	ldi	r24, 0x01	; 1
    313a:	90 e0       	ldi	r25, 0x00	; 0
    313c:	90 93 ff 05 	sts	0x05FF, r25	; 0x8005ff <btg+0x1>
    3140:	80 93 fe 05 	sts	0x05FE, r24	; 0x8005fe <btg>
    3144:	1b c0       	rjmp	.+54     	; 0x317c <war+0xe6>
				break;
			}
			g_xy(7,32);
    3146:	60 e2       	ldi	r22, 0x20	; 32
    3148:	70 e0       	ldi	r23, 0x00	; 0
    314a:	87 e0       	ldi	r24, 0x07	; 7
    314c:	90 e0       	ldi	r25, 0x00	; 0
    314e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("-sw5- Back to graph");
    3152:	8a e1       	ldi	r24, 0x1A	; 26
    3154:	93 e0       	ldi	r25, 0x03	; 3
    3156:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			g_render();
    315a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			PORTE&=~(1<<buz);
    315e:	1e 98       	cbi	0x03, 6	; 3
			prints("-sw5- Back to graph");
			g_render();
			PORTE|=(1<<buz);
		}
		
		for(t=0; t<500;)
    3160:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    3164:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    3168:	84 3f       	cpi	r24, 0xF4	; 244
    316a:	91 40       	sbci	r25, 0x01	; 1
    316c:	04 f3       	brlt	.-64     	; 0x312e <war+0x98>
			g_xy(7,32);
			prints("-sw5- Back to graph");
			g_render();
			PORTE&=~(1<<buz);
		}
		if(btg==1)break;
    316e:	80 91 fe 05 	lds	r24, 0x05FE	; 0x8005fe <btg>
    3172:	90 91 ff 05 	lds	r25, 0x05FF	; 0x8005ff <btg+0x1>
    3176:	01 97       	sbiw	r24, 0x01	; 1
    3178:	09 f0       	breq	.+2      	; 0x317c <war+0xe6>
    317a:	a7 cf       	rjmp	.-178    	; 0x30ca <war+0x34>
	}
	PORTE&=~(1<<buz);
    317c:	1e 98       	cbi	0x03, 6	; 3
}
    317e:	df 91       	pop	r29
    3180:	cf 91       	pop	r28
    3182:	08 95       	ret

00003184 <vigil>:
void vigil()
{
    3184:	3f 92       	push	r3
    3186:	4f 92       	push	r4
    3188:	5f 92       	push	r5
    318a:	6f 92       	push	r6
    318c:	7f 92       	push	r7
    318e:	8f 92       	push	r8
    3190:	9f 92       	push	r9
    3192:	af 92       	push	r10
    3194:	bf 92       	push	r11
    3196:	cf 92       	push	r12
    3198:	df 92       	push	r13
    319a:	ef 92       	push	r14
    319c:	ff 92       	push	r15
    319e:	0f 93       	push	r16
    31a0:	1f 93       	push	r17
    31a2:	cf 93       	push	r28
    31a4:	df 93       	push	r29
    31a6:	cd b7       	in	r28, 0x3d	; 61
    31a8:	de b7       	in	r29, 0x3e	; 62
    31aa:	60 97       	sbiw	r28, 0x10	; 16
    31ac:	0f b6       	in	r0, 0x3f	; 63
    31ae:	f8 94       	cli
    31b0:	de bf       	out	0x3e, r29	; 62
    31b2:	0f be       	out	0x3f, r0	; 63
    31b4:	cd bf       	out	0x3d, r28	; 61
	char adca[16]={0};
    31b6:	fe 01       	movw	r30, r28
    31b8:	31 96       	adiw	r30, 0x01	; 1
    31ba:	80 e1       	ldi	r24, 0x10	; 16
    31bc:	df 01       	movw	r26, r30
    31be:	1d 92       	st	X+, r1
    31c0:	8a 95       	dec	r24
    31c2:	e9 f7       	brne	.-6      	; 0x31be <vigil+0x3a>
	int adc=0;
	int adcmax=50;
	rec=0;
    31c4:	10 92 3c 06 	sts	0x063C, r1	; 0x80063c <rec+0x1>
    31c8:	10 92 3b 06 	sts	0x063B, r1	; 0x80063b <rec>
}
void vigil()
{
	char adca[16]={0};
	int adc=0;
	int adcmax=50;
    31cc:	02 e3       	ldi	r16, 0x32	; 50
    31ce:	10 e0       	ldi	r17, 0x00	; 0
	{
		fr=0;
		for(t=0; t<100;)
		{
			if(!(PINF&=(1<<PF0))&&fcnt==0){fcnt=1;}
			if(PINF&=(1<<PF0)&&fcnt==1){fcnt=0; fr++;}
    31d0:	33 24       	eor	r3, r3
    31d2:	33 94       	inc	r3
	while(1)
	{
		fr=0;
		for(t=0; t<100;)
		{
			if(!(PINF&=(1<<PF0))&&fcnt==0){fcnt=1;}
    31d4:	aa 24       	eor	r10, r10
    31d6:	a3 94       	inc	r10
    31d8:	b1 2c       	mov	r11, r1
			if(PINF&=(1<<PF0)&&fcnt==1){fcnt=0; fr++;}
    31da:	53 2c       	mov	r5, r3
    31dc:	41 2c       	mov	r4, r1
		if(btg==1)break;
		adc_init();
		adc=read_adc(1);
		adc=(adc-10)/2;
		if(adc<=0)adc=0;
		if(adc>=100)adc=100;
    31de:	0f 2e       	mov	r0, r31
    31e0:	f4 e6       	ldi	r31, 0x64	; 100
    31e2:	cf 2e       	mov	r12, r31
    31e4:	d1 2c       	mov	r13, r1
    31e6:	f0 2d       	mov	r31, r0
		sprintf(&adca[0],"%d",adc);
    31e8:	0f 2e       	mov	r0, r31
    31ea:	fe e2       	ldi	r31, 0x2E	; 46
    31ec:	6f 2e       	mov	r6, r31
    31ee:	f3 e0       	ldi	r31, 0x03	; 3
    31f0:	7f 2e       	mov	r7, r31
    31f2:	f0 2d       	mov	r31, r0
    31f4:	4f 01       	movw	r8, r30
	int adc=0;
	int adcmax=50;
	rec=0;
	while(1)
	{
		fr=0;
    31f6:	10 92 4c 06 	sts	0x064C, r1	; 0x80064c <fr+0x1>
    31fa:	10 92 4b 06 	sts	0x064B, r1	; 0x80064b <fr>
		for(t=0; t<100;)
    31fe:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    3202:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
		{
			if(!(PINF&=(1<<PF0))&&fcnt==0){fcnt=1;}
    3206:	80 b1       	in	r24, 0x00	; 0
    3208:	81 70       	andi	r24, 0x01	; 1
    320a:	80 b9       	out	0x00, r24	; 0
    320c:	81 11       	cpse	r24, r1
    320e:	0a c0       	rjmp	.+20     	; 0x3224 <vigil+0xa0>
    3210:	80 91 4d 06 	lds	r24, 0x064D	; 0x80064d <fcnt>
    3214:	90 91 4e 06 	lds	r25, 0x064E	; 0x80064e <fcnt+0x1>
    3218:	89 2b       	or	r24, r25
    321a:	21 f4       	brne	.+8      	; 0x3224 <vigil+0xa0>
    321c:	b0 92 4e 06 	sts	0x064E, r11	; 0x80064e <fcnt+0x1>
    3220:	a0 92 4d 06 	sts	0x064D, r10	; 0x80064d <fcnt>
			if(PINF&=(1<<PF0)&&fcnt==1){fcnt=0; fr++;}
    3224:	80 b1       	in	r24, 0x00	; 0
    3226:	95 2d       	mov	r25, r5
    3228:	20 91 4d 06 	lds	r18, 0x064D	; 0x80064d <fcnt>
    322c:	30 91 4e 06 	lds	r19, 0x064E	; 0x80064e <fcnt+0x1>
    3230:	21 30       	cpi	r18, 0x01	; 1
    3232:	31 05       	cpc	r19, r1
    3234:	09 f0       	breq	.+2      	; 0x3238 <vigil+0xb4>
    3236:	94 2d       	mov	r25, r4
    3238:	89 23       	and	r24, r25
    323a:	80 b9       	out	0x00, r24	; 0
    323c:	88 23       	and	r24, r24
    323e:	69 f0       	breq	.+26     	; 0x325a <vigil+0xd6>
    3240:	10 92 4e 06 	sts	0x064E, r1	; 0x80064e <fcnt+0x1>
    3244:	10 92 4d 06 	sts	0x064D, r1	; 0x80064d <fcnt>
    3248:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    324c:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    3250:	01 96       	adiw	r24, 0x01	; 1
    3252:	90 93 4c 06 	sts	0x064C, r25	; 0x80064c <fr+0x1>
    3256:	80 93 4b 06 	sts	0x064B, r24	; 0x80064b <fr>
			
			arrow();
    325a:	a4 d9       	rcall	.-3256   	; 0x25a4 <arrow>
			if(rec==1&&adcmax<100)
    325c:	80 91 3b 06 	lds	r24, 0x063B	; 0x80063b <rec>
    3260:	90 91 3c 06 	lds	r25, 0x063C	; 0x80063c <rec+0x1>
    3264:	81 30       	cpi	r24, 0x01	; 1
    3266:	91 05       	cpc	r25, r1
    3268:	51 f4       	brne	.+20     	; 0x327e <vigil+0xfa>
    326a:	04 36       	cpi	r16, 0x64	; 100
    326c:	11 05       	cpc	r17, r1
    326e:	94 f4       	brge	.+36     	; 0x3294 <vigil+0x110>
			{
				adcmax+=5;
    3270:	0b 5f       	subi	r16, 0xFB	; 251
    3272:	1f 4f       	sbci	r17, 0xFF	; 255
				rec=0;
    3274:	10 92 3c 06 	sts	0x063C, r1	; 0x80063c <rec+0x1>
    3278:	10 92 3b 06 	sts	0x063B, r1	; 0x80063b <rec>
    327c:	0b c0       	rjmp	.+22     	; 0x3294 <vigil+0x110>
			}
			if(rec==2&&adcmax>0)
    327e:	02 97       	sbiw	r24, 0x02	; 2
    3280:	49 f4       	brne	.+18     	; 0x3294 <vigil+0x110>
    3282:	10 16       	cp	r1, r16
    3284:	11 06       	cpc	r1, r17
    3286:	34 f4       	brge	.+12     	; 0x3294 <vigil+0x110>
			{
				adcmax-=5;
    3288:	05 50       	subi	r16, 0x05	; 5
    328a:	11 09       	sbc	r17, r1
				rec=0;
    328c:	10 92 3c 06 	sts	0x063C, r1	; 0x80063c <rec+0x1>
    3290:	10 92 3b 06 	sts	0x063B, r1	; 0x80063b <rec>
			}
			
			
			if(!(PINC&=(1<<sw5)))
    3294:	83 b3       	in	r24, 0x13	; 19
    3296:	80 71       	andi	r24, 0x10	; 16
    3298:	83 bb       	out	0x13, r24	; 19
    329a:	81 11       	cpse	r24, r1
    329c:	0c c0       	rjmp	.+24     	; 0x32b6 <vigil+0x132>
			{
				while(!(PINC&=(1<<sw5))){}
    329e:	83 b3       	in	r24, 0x13	; 19
    32a0:	80 71       	andi	r24, 0x10	; 16
    32a2:	83 bb       	out	0x13, r24	; 19
    32a4:	88 23       	and	r24, r24
    32a6:	d9 f3       	breq	.-10     	; 0x329e <vigil+0x11a>
				btg=1;
    32a8:	81 e0       	ldi	r24, 0x01	; 1
    32aa:	90 e0       	ldi	r25, 0x00	; 0
    32ac:	90 93 ff 05 	sts	0x05FF, r25	; 0x8005ff <btg+0x1>
    32b0:	80 93 fe 05 	sts	0x05FE, r24	; 0x8005fe <btg>
    32b4:	ae c0       	rjmp	.+348    	; 0x3412 <vigil+0x28e>
			}
			
			if(btg==1)break;
    32b6:	80 91 fe 05 	lds	r24, 0x05FE	; 0x8005fe <btg>
    32ba:	90 91 ff 05 	lds	r25, 0x05FF	; 0x8005ff <btg+0x1>
    32be:	01 97       	sbiw	r24, 0x01	; 1
    32c0:	09 f4       	brne	.+2      	; 0x32c4 <vigil+0x140>
    32c2:	a7 c0       	rjmp	.+334    	; 0x3412 <vigil+0x28e>
	int adcmax=50;
	rec=0;
	while(1)
	{
		fr=0;
		for(t=0; t<100;)
    32c4:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    32c8:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    32cc:	84 36       	cpi	r24, 0x64	; 100
    32ce:	91 05       	cpc	r25, r1
    32d0:	0c f4       	brge	.+2      	; 0x32d4 <vigil+0x150>
    32d2:	99 cf       	rjmp	.-206    	; 0x3206 <vigil+0x82>
    32d4:	86 c0       	rjmp	.+268    	; 0x33e2 <vigil+0x25e>
		adc_init();
		adc=read_adc(1);
		adc=(adc-10)/2;
		if(adc<=0)adc=0;
		if(adc>=100)adc=100;
		sprintf(&adca[0],"%d",adc);
    32d6:	ff 92       	push	r15
    32d8:	ef 92       	push	r14
    32da:	7f 92       	push	r7
    32dc:	6f 92       	push	r6
    32de:	9f 92       	push	r9
    32e0:	8f 92       	push	r8
    32e2:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
		
		g_clear();
    32e6:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
		g_xy(22,0);
    32ea:	60 e0       	ldi	r22, 0x00	; 0
    32ec:	70 e0       	ldi	r23, 0x00	; 0
    32ee:	86 e1       	ldi	r24, 0x16	; 22
    32f0:	90 e0       	ldi	r25, 0x00	; 0
    32f2:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Vigilance Mode");
    32f6:	81 e3       	ldi	r24, 0x31	; 49
    32f8:	93 e0       	ldi	r25, 0x03	; 3
    32fa:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>

		g_xy(21,16);
    32fe:	60 e1       	ldi	r22, 0x10	; 16
    3300:	70 e0       	ldi	r23, 0x00	; 0
    3302:	85 e1       	ldi	r24, 0x15	; 21
    3304:	90 e0       	ldi	r25, 0x00	; 0
    3306:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Sound Value:");
    330a:	80 e4       	ldi	r24, 0x40	; 64
    330c:	93 e0       	ldi	r25, 0x03	; 3
    330e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		prints(adca);
    3312:	c4 01       	movw	r24, r8
    3314:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_xy(22,32);
    3318:	60 e2       	ldi	r22, 0x20	; 32
    331a:	70 e0       	ldi	r23, 0x00	; 0
    331c:	86 e1       	ldi	r24, 0x16	; 22
    331e:	90 e0       	ldi	r25, 0x00	; 0
    3320:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Light Value:");
    3324:	8d e4       	ldi	r24, 0x4D	; 77
    3326:	93 e0       	ldi	r25, 0x03	; 3
    3328:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		if(fr>=100)
    332c:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    3330:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    3334:	0f 90       	pop	r0
    3336:	0f 90       	pop	r0
    3338:	0f 90       	pop	r0
    333a:	0f 90       	pop	r0
    333c:	0f 90       	pop	r0
    333e:	0f 90       	pop	r0
    3340:	84 36       	cpi	r24, 0x64	; 100
    3342:	91 05       	cpc	r25, r1
    3344:	2c f0       	brlt	.+10     	; 0x3350 <vigil+0x1cc>
		fr=100;
    3346:	d0 92 4c 06 	sts	0x064C, r13	; 0x80064c <fr+0x1>
    334a:	c0 92 4b 06 	sts	0x064B, r12	; 0x80064b <fr>
    334e:	06 c0       	rjmp	.+12     	; 0x335c <vigil+0x1d8>
		
		if(fr==0)
    3350:	89 2b       	or	r24, r25
    3352:	21 f4       	brne	.+8      	; 0x335c <vigil+0x1d8>
		fr=1;
    3354:	b0 92 4c 06 	sts	0x064C, r11	; 0x80064c <fr+0x1>
    3358:	a0 92 4b 06 	sts	0x064B, r10	; 0x80064b <fr>
		printi(100-fr);
    335c:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    3360:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    3364:	b6 01       	movw	r22, r12
    3366:	68 1b       	sub	r22, r24
    3368:	79 0b       	sbc	r23, r25
    336a:	07 2e       	mov	r0, r23
    336c:	00 0c       	add	r0, r0
    336e:	88 0b       	sbc	r24, r24
    3370:	99 0b       	sbc	r25, r25
    3372:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
		if(maxlux<100-fr){war();}
    3376:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    337a:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    337e:	96 01       	movw	r18, r12
    3380:	28 1b       	sub	r18, r24
    3382:	39 0b       	sbc	r19, r25
    3384:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <maxlux>
    3388:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <maxlux+0x1>
    338c:	82 17       	cp	r24, r18
    338e:	93 07       	cpc	r25, r19
    3390:	0c f4       	brge	.+2      	; 0x3394 <vigil+0x210>
    3392:	81 de       	rcall	.-766    	; 0x3096 <war>
		if(minlux>100-fr){war();}
    3394:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    3398:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    339c:	96 01       	movw	r18, r12
    339e:	28 1b       	sub	r18, r24
    33a0:	39 0b       	sbc	r19, r25
    33a2:	80 91 51 06 	lds	r24, 0x0651	; 0x800651 <minlux>
    33a6:	90 91 52 06 	lds	r25, 0x0652	; 0x800652 <minlux+0x1>
    33aa:	28 17       	cp	r18, r24
    33ac:	39 07       	cpc	r19, r25
    33ae:	0c f4       	brge	.+2      	; 0x33b2 <vigil+0x22e>
    33b0:	72 de       	rcall	.-796    	; 0x3096 <war>
		if(adcmax<adc){war();}
    33b2:	0e 15       	cp	r16, r14
    33b4:	1f 05       	cpc	r17, r15
    33b6:	0c f4       	brge	.+2      	; 0x33ba <vigil+0x236>
    33b8:	6e de       	rcall	.-804    	; 0x3096 <war>
		g_xy(28,48);
    33ba:	60 e3       	ldi	r22, 0x30	; 48
    33bc:	70 e0       	ldi	r23, 0x00	; 0
    33be:	8c e1       	ldi	r24, 0x1C	; 28
    33c0:	90 e0       	ldi	r25, 0x00	; 0
    33c2:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Max_Sound:");
    33c6:	8a e5       	ldi	r24, 0x5A	; 90
    33c8:	93 e0       	ldi	r25, 0x03	; 3
    33ca:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		printi(adcmax);
    33ce:	b8 01       	movw	r22, r16
    33d0:	01 2e       	mov	r0, r17
    33d2:	00 0c       	add	r0, r0
    33d4:	88 0b       	sbc	r24, r24
    33d6:	99 0b       	sbc	r25, r25
    33d8:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
		g_render();
    33dc:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		
	}
    33e0:	0a cf       	rjmp	.-492    	; 0x31f6 <vigil+0x72>
			}
			
			if(btg==1)break;
		}
		if(btg==1)break;
		adc_init();
    33e2:	0e 94 e1 0d 	call	0x1bc2	; 0x1bc2 <adc_init>
		adc=read_adc(1);
    33e6:	83 2d       	mov	r24, r3
    33e8:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <read_adc>
		adc=(adc-10)/2;
    33ec:	0a 97       	sbiw	r24, 0x0a	; 10
    33ee:	7c 01       	movw	r14, r24
    33f0:	1a f4       	brpl	.+6      	; 0x33f8 <vigil+0x274>
    33f2:	af ef       	ldi	r26, 0xFF	; 255
    33f4:	ea 1a       	sub	r14, r26
    33f6:	fa 0a       	sbc	r15, r26
    33f8:	f5 94       	asr	r15
    33fa:	e7 94       	ror	r14
    33fc:	ff 20       	and	r15, r15
    33fe:	14 f4       	brge	.+4      	; 0x3404 <vigil+0x280>
    3400:	e1 2c       	mov	r14, r1
    3402:	f1 2c       	mov	r15, r1
		if(adc<=0)adc=0;
		if(adc>=100)adc=100;
    3404:	b4 e6       	ldi	r27, 0x64	; 100
    3406:	eb 16       	cp	r14, r27
    3408:	f1 04       	cpc	r15, r1
    340a:	0c f4       	brge	.+2      	; 0x340e <vigil+0x28a>
    340c:	64 cf       	rjmp	.-312    	; 0x32d6 <vigil+0x152>
    340e:	76 01       	movw	r14, r12
    3410:	62 cf       	rjmp	.-316    	; 0x32d6 <vigil+0x152>
		prints("Max_Sound:");
		printi(adcmax);
		g_render();
		
	}
}
    3412:	60 96       	adiw	r28, 0x10	; 16
    3414:	0f b6       	in	r0, 0x3f	; 63
    3416:	f8 94       	cli
    3418:	de bf       	out	0x3e, r29	; 62
    341a:	0f be       	out	0x3f, r0	; 63
    341c:	cd bf       	out	0x3d, r28	; 61
    341e:	df 91       	pop	r29
    3420:	cf 91       	pop	r28
    3422:	1f 91       	pop	r17
    3424:	0f 91       	pop	r16
    3426:	ff 90       	pop	r15
    3428:	ef 90       	pop	r14
    342a:	df 90       	pop	r13
    342c:	cf 90       	pop	r12
    342e:	bf 90       	pop	r11
    3430:	af 90       	pop	r10
    3432:	9f 90       	pop	r9
    3434:	8f 90       	pop	r8
    3436:	7f 90       	pop	r7
    3438:	6f 90       	pop	r6
    343a:	5f 90       	pop	r5
    343c:	4f 90       	pop	r4
    343e:	3f 90       	pop	r3
    3440:	08 95       	ret

00003442 <dht>:
void dht()
{
    3442:	0f 93       	push	r16
    3444:	1f 93       	push	r17
    3446:	cf 93       	push	r28
    3448:	df 93       	push	r29
	int keyt=0;

	if(autotrig==0)
    344a:	80 91 57 06 	lds	r24, 0x0657	; 0x800657 <autotrig>
    344e:	90 91 58 06 	lds	r25, 0x0658	; 0x800658 <autotrig+0x1>
    3452:	89 2b       	or	r24, r25
    3454:	09 f0       	breq	.+2      	; 0x3458 <dht+0x16>
    3456:	a7 c0       	rjmp	.+334    	; 0x35a6 <dht+0x164>
	{
		for(t=0; t<1500;)
    3458:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    345c:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
		
	}
}
void dht()
{
	int keyt=0;
    3460:	c0 e0       	ldi	r28, 0x00	; 0
    3462:	d0 e0       	ldi	r29, 0x00	; 0
    3464:	01 e0       	ldi	r16, 0x01	; 1
    3466:	10 e0       	ldi	r17, 0x00	; 0
	if(autotrig==0)
	{
		for(t=0; t<1500;)
		{
			
			if(!(PINC&=(1<<sw5)))
    3468:	83 b3       	in	r24, 0x13	; 19
    346a:	80 71       	andi	r24, 0x10	; 16
    346c:	83 bb       	out	0x13, r24	; 19
    346e:	81 11       	cpse	r24, r1
    3470:	0a c0       	rjmp	.+20     	; 0x3486 <dht+0x44>
			{
				while(!(PINC&=(1<<sw5))){}
    3472:	83 b3       	in	r24, 0x13	; 19
    3474:	80 71       	andi	r24, 0x10	; 16
    3476:	83 bb       	out	0x13, r24	; 19
    3478:	88 23       	and	r24, r24
    347a:	d9 f3       	breq	.-10     	; 0x3472 <dht+0x30>
				divtrig=0;
    347c:	10 92 5a 06 	sts	0x065A, r1	; 0x80065a <divtrig+0x1>
    3480:	10 92 59 06 	sts	0x0659, r1	; 0x800659 <divtrig>
				divset();
    3484:	b2 dc       	rcall	.-1692   	; 0x2dea <divset>
				
			}
			
			if(!(PINC&=(1<<sw3)))
    3486:	83 b3       	in	r24, 0x13	; 19
    3488:	84 70       	andi	r24, 0x04	; 4
    348a:	83 bb       	out	0x13, r24	; 19
    348c:	81 11       	cpse	r24, r1
    348e:	10 c0       	rjmp	.+32     	; 0x34b0 <dht+0x6e>
			{
				while(!(PINC&=(1<<sw3))){}
    3490:	83 b3       	in	r24, 0x13	; 19
    3492:	84 70       	andi	r24, 0x04	; 4
    3494:	83 bb       	out	0x13, r24	; 19
    3496:	88 23       	and	r24, r24
    3498:	d9 f3       	breq	.-10     	; 0x3490 <dht+0x4e>
				t=0;
    349a:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    349e:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
				bk=1;
    34a2:	81 e0       	ldi	r24, 0x01	; 1
    34a4:	90 e0       	ldi	r25, 0x00	; 0
    34a6:	90 93 54 06 	sts	0x0654, r25	; 0x800654 <bk+0x1>
    34aa:	80 93 53 06 	sts	0x0653, r24	; 0x800653 <bk>
    34ae:	d7 c0       	rjmp	.+430    	; 0x365e <dht+0x21c>
				break;
			}
			
			if(!(PINC&=(1<<sw2))&&etrig==1)
    34b0:	83 b3       	in	r24, 0x13	; 19
    34b2:	82 70       	andi	r24, 0x02	; 2
    34b4:	83 bb       	out	0x13, r24	; 19
    34b6:	81 11       	cpse	r24, r1
    34b8:	10 c0       	rjmp	.+32     	; 0x34da <dht+0x98>
    34ba:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <etrig>
    34be:	90 91 01 06 	lds	r25, 0x0601	; 0x800601 <etrig+0x1>
    34c2:	01 97       	sbiw	r24, 0x01	; 1
    34c4:	51 f4       	brne	.+20     	; 0x34da <dht+0x98>
			{
				while(!(PINC&=(1<<sw2))){}
    34c6:	83 b3       	in	r24, 0x13	; 19
    34c8:	82 70       	andi	r24, 0x02	; 2
    34ca:	83 bb       	out	0x13, r24	; 19
    34cc:	88 23       	and	r24, r24
				error();
    34ce:	d9 f3       	breq	.-10     	; 0x34c6 <dht+0x84>
    34d0:	9a db       	rcall	.-2252   	; 0x2c06 <error>
				t=0;
    34d2:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    34d6:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
			}
			
			if(!(PINC&=(1<<sw4)))
    34da:	83 b3       	in	r24, 0x13	; 19
    34dc:	88 70       	andi	r24, 0x08	; 8
    34de:	83 bb       	out	0x13, r24	; 19
    34e0:	81 11       	cpse	r24, r1
    34e2:	07 c0       	rjmp	.+14     	; 0x34f2 <dht+0xb0>
			{
				while(!(PINC&=(1<<sw4))){}
    34e4:	83 b3       	in	r24, 0x13	; 19
    34e6:	88 70       	andi	r24, 0x08	; 8
    34e8:	83 bb       	out	0x13, r24	; 19
    34ea:	88 23       	and	r24, r24
				vigil();
    34ec:	d9 f3       	breq	.-10     	; 0x34e4 <dht+0xa2>
    34ee:	4a de       	rcall	.-876    	; 0x3184 <vigil>
				break;
    34f0:	5a c0       	rjmp	.+180    	; 0x35a6 <dht+0x164>
			}
			
			key=rx();
    34f2:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <rx>
    34f6:	80 93 3a 06 	sts	0x063A, r24	; 0x80063a <key>
			if(key==49){setting(); t=0; key=0; det=1; break;}
    34fa:	81 33       	cpi	r24, 0x31	; 49
    34fc:	79 f4       	brne	.+30     	; 0x351c <dht+0xda>
    34fe:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <setting>
    3502:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    3506:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
    350a:	10 92 3a 06 	sts	0x063A, r1	; 0x80063a <key>
    350e:	81 e0       	ldi	r24, 0x01	; 1
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	90 93 50 06 	sts	0x0650, r25	; 0x800650 <det+0x1>
    3516:	80 93 4f 06 	sts	0x064F, r24	; 0x80064f <det>
    351a:	45 c0       	rjmp	.+138    	; 0x35a6 <dht+0x164>
			if(key==50){onset(); t=0; key=0; det=1; break;}
    351c:	82 33       	cpi	r24, 0x32	; 50
    351e:	79 f4       	brne	.+30     	; 0x353e <dht+0xfc>
    3520:	0e 94 09 11 	call	0x2212	; 0x2212 <onset>
    3524:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    3528:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
    352c:	10 92 3a 06 	sts	0x063A, r1	; 0x80063a <key>
    3530:	81 e0       	ldi	r24, 0x01	; 1
    3532:	90 e0       	ldi	r25, 0x00	; 0
    3534:	90 93 50 06 	sts	0x0650, r25	; 0x800650 <det+0x1>
    3538:	80 93 4f 06 	sts	0x064F, r24	; 0x80064f <det>
    353c:	34 c0       	rjmp	.+104    	; 0x35a6 <dht+0x164>
			if(key==114){ keyt=1;}
    353e:	82 37       	cpi	r24, 0x72	; 114
    3540:	41 f1       	breq	.+80     	; 0x3592 <dht+0x150>
			
			if(keyt==1&&key==51)
    3542:	c1 30       	cpi	r28, 0x01	; 1
    3544:	d1 05       	cpc	r29, r1
    3546:	39 f5       	brne	.+78     	; 0x3596 <dht+0x154>
    3548:	83 33       	cpi	r24, 0x33	; 51
    354a:	29 f5       	brne	.+74     	; 0x3596 <dht+0x154>
			{
				eeprom_write_byte((uint16_t*)46,0);
    354c:	60 e0       	ldi	r22, 0x00	; 0
    354e:	8e e2       	ldi	r24, 0x2E	; 46
    3550:	90 e0       	ldi	r25, 0x00	; 0
    3552:	0e 94 39 31 	call	0x6272	; 0x6272 <eeprom_write_byte>
				hc=0;
    3556:	10 92 42 06 	sts	0x0642, r1	; 0x800642 <hc+0x1>
    355a:	10 92 41 06 	sts	0x0641, r1	; 0x800641 <hc>
				mc=0; sc=0;
    355e:	10 92 40 06 	sts	0x0640, r1	; 0x800640 <mc+0x1>
    3562:	10 92 3f 06 	sts	0x063F, r1	; 0x80063f <mc>
    3566:	10 92 3e 06 	sts	0x063E, r1	; 0x80063e <sc+0x1>
    356a:	10 92 3d 06 	sts	0x063D, r1	; 0x80063d <sc>
				ttrig=0;
    356e:	10 92 5c 06 	sts	0x065C, r1	; 0x80065c <ttrig+0x1>
    3572:	10 92 5b 06 	sts	0x065B, r1	; 0x80065b <ttrig>
				timeset();
    3576:	4b d8       	rcall	.-3946   	; 0x260e <timeset>
				t=0;
    3578:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    357c:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
				key=0;
    3580:	10 92 3a 06 	sts	0x063A, r1	; 0x80063a <key>
				keyt=0;
				det=1;
    3584:	81 e0       	ldi	r24, 0x01	; 1
    3586:	90 e0       	ldi	r25, 0x00	; 0
    3588:	90 93 50 06 	sts	0x0650, r25	; 0x800650 <det+0x1>
    358c:	80 93 4f 06 	sts	0x064F, r24	; 0x80064f <det>
				break;
    3590:	0a c0       	rjmp	.+20     	; 0x35a6 <dht+0x164>
    3592:	c0 2f       	mov	r28, r16
    3594:	d1 2f       	mov	r29, r17
{
	int keyt=0;

	if(autotrig==0)
	{
		for(t=0; t<1500;)
    3596:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    359a:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    359e:	8c 3d       	cpi	r24, 0xDC	; 220
    35a0:	95 40       	sbci	r25, 0x05	; 5
    35a2:	0c f4       	brge	.+2      	; 0x35a6 <dht+0x164>
    35a4:	61 cf       	rjmp	.-318    	; 0x3468 <dht+0x26>
				break;
			}
		}
	}

	if(bk==0)
    35a6:	80 91 53 06 	lds	r24, 0x0653	; 0x800653 <bk>
    35aa:	90 91 54 06 	lds	r25, 0x0654	; 0x800654 <bk+0x1>
    35ae:	89 2b       	or	r24, r25
    35b0:	09 f0       	breq	.+2      	; 0x35b4 <dht+0x172>
    35b2:	55 c0       	rjmp	.+170    	; 0x365e <dht+0x21c>
	{
		Request();
    35b4:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <Request>
		Response();
    35b8:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <Response>
		
		I_RH=Receive_data();
    35bc:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <Receive_data>
    35c0:	80 93 af 0b 	sts	0x0BAF, r24	; 0x800baf <I_RH>
		D_RH=Receive_data();
    35c4:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <Receive_data>
    35c8:	80 93 ac 0b 	sts	0x0BAC, r24	; 0x800bac <D_RH>
		I_Temp=Receive_data();
    35cc:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <Receive_data>
    35d0:	80 93 ae 0b 	sts	0x0BAE, r24	; 0x800bae <I_Temp>
		D_Temp=Receive_data();
    35d4:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <Receive_data>
    35d8:	80 93 b4 0b 	sts	0x0BB4, r24	; 0x800bb4 <D_Temp>
		CheckSum=Receive_data();
    35dc:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <Receive_data>
    35e0:	80 93 ad 0b 	sts	0x0BAD, r24	; 0x800bad <CheckSum>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    35e4:	80 91 ae 0b 	lds	r24, 0x0BAE	; 0x800bae <I_Temp>
    35e8:	4a e0       	ldi	r20, 0x0A	; 10
    35ea:	66 ea       	ldi	r22, 0xA6	; 166
    35ec:	7b e0       	ldi	r23, 0x0B	; 11
    35ee:	90 e0       	ldi	r25, 0x00	; 0
    35f0:	0e 94 36 30 	call	0x606c	; 0x606c <__itoa_ncheck>

		itoa(I_Temp,data,10);
		sprintf(&tem[0],"%s",data);
    35f4:	66 ea       	ldi	r22, 0xA6	; 166
    35f6:	7b e0       	ldi	r23, 0x0B	; 11
    35f8:	8d e9       	ldi	r24, 0x9D	; 157
    35fa:	9b e0       	ldi	r25, 0x0B	; 11
    35fc:	0e 94 24 30 	call	0x6048	; 0x6048 <strcpy>
    3600:	80 91 b4 0b 	lds	r24, 0x0BB4	; 0x800bb4 <D_Temp>
    3604:	4a e0       	ldi	r20, 0x0A	; 10
    3606:	66 ea       	ldi	r22, 0xA6	; 166
    3608:	7b e0       	ldi	r23, 0x0B	; 11
    360a:	90 e0       	ldi	r25, 0x00	; 0
    360c:	0e 94 36 30 	call	0x606c	; 0x606c <__itoa_ncheck>
		
		itoa(D_Temp,data,10);
		sprintf(&tem[3],"%s",data);
    3610:	66 ea       	ldi	r22, 0xA6	; 166
    3612:	7b e0       	ldi	r23, 0x0B	; 11
    3614:	80 ea       	ldi	r24, 0xA0	; 160
    3616:	9b e0       	ldi	r25, 0x0B	; 11
    3618:	0e 94 24 30 	call	0x6048	; 0x6048 <strcpy>
		tem[2]='.';
    361c:	ce e2       	ldi	r28, 0x2E	; 46
    361e:	c0 93 9f 0b 	sts	0x0B9F, r28	; 0x800b9f <tem+0x2>
    3622:	80 91 af 0b 	lds	r24, 0x0BAF	; 0x800baf <I_RH>
    3626:	4a e0       	ldi	r20, 0x0A	; 10
    3628:	66 ea       	ldi	r22, 0xA6	; 166
    362a:	7b e0       	ldi	r23, 0x0B	; 11
    362c:	90 e0       	ldi	r25, 0x00	; 0
    362e:	0e 94 36 30 	call	0x606c	; 0x606c <__itoa_ncheck>
		
		itoa(I_RH,data,10);
		sprintf(&hum[0],"%s",data);
    3632:	66 ea       	ldi	r22, 0xA6	; 166
    3634:	7b e0       	ldi	r23, 0x0B	; 11
    3636:	84 e6       	ldi	r24, 0x64	; 100
    3638:	96 e0       	ldi	r25, 0x06	; 6
    363a:	0e 94 24 30 	call	0x6048	; 0x6048 <strcpy>
    363e:	80 91 ac 0b 	lds	r24, 0x0BAC	; 0x800bac <D_RH>
    3642:	4a e0       	ldi	r20, 0x0A	; 10
    3644:	66 ea       	ldi	r22, 0xA6	; 166
    3646:	7b e0       	ldi	r23, 0x0B	; 11
    3648:	90 e0       	ldi	r25, 0x00	; 0
    364a:	0e 94 36 30 	call	0x606c	; 0x606c <__itoa_ncheck>
		
		itoa(D_RH,data,10);
		sprintf(&hum[3],"%s",data);
    364e:	66 ea       	ldi	r22, 0xA6	; 166
    3650:	7b e0       	ldi	r23, 0x0B	; 11
    3652:	87 e6       	ldi	r24, 0x67	; 103
    3654:	96 e0       	ldi	r25, 0x06	; 6
    3656:	0e 94 24 30 	call	0x6048	; 0x6048 <strcpy>
		
		hum[2]='.';
    365a:	c0 93 66 06 	sts	0x0666, r28	; 0x800666 <hum+0x2>
	}
}
    365e:	df 91       	pop	r29
    3660:	cf 91       	pop	r28
    3662:	1f 91       	pop	r17
    3664:	0f 91       	pop	r16
    3666:	08 95       	ret

00003668 <pes>:
void pes()
{
    3668:	2f 92       	push	r2
    366a:	3f 92       	push	r3
    366c:	4f 92       	push	r4
    366e:	5f 92       	push	r5
    3670:	6f 92       	push	r6
    3672:	7f 92       	push	r7
    3674:	8f 92       	push	r8
    3676:	9f 92       	push	r9
    3678:	af 92       	push	r10
    367a:	bf 92       	push	r11
    367c:	cf 92       	push	r12
    367e:	df 92       	push	r13
    3680:	ef 92       	push	r14
    3682:	ff 92       	push	r15
    3684:	0f 93       	push	r16
    3686:	1f 93       	push	r17
    3688:	cf 93       	push	r28
    368a:	df 93       	push	r29
    368c:	cd b7       	in	r28, 0x3d	; 61
    368e:	de b7       	in	r29, 0x3e	; 62
    3690:	6c 97       	sbiw	r28, 0x1c	; 28
    3692:	0f b6       	in	r0, 0x3f	; 63
    3694:	f8 94       	cli
    3696:	de bf       	out	0x3e, r29	; 62
    3698:	0f be       	out	0x3f, r0	; 63
    369a:	cd bf       	out	0x3d, r28	; 61
	int p=0;
	double angle=0;
	int going=0;
	int br=0;

	spwmtrig=1;
    369c:	01 e0       	ldi	r16, 0x01	; 1
    369e:	10 e0       	ldi	r17, 0x00	; 0
    36a0:	10 93 31 06 	sts	0x0631, r17	; 0x800631 <spwmtrig+0x1>
    36a4:	00 93 30 06 	sts	0x0630, r16	; 0x800630 <spwmtrig>
	PORTB|=(1<<servo);
    36a8:	c6 9a       	sbi	0x18, 6	; 24
	I2C_Init();
    36aa:	0e 94 c9 0a 	call	0x1592	; 0x1592 <I2C_Init>
	MPU6050_Init();
    36ae:	0e 94 66 0b 	call	0x16cc	; 0x16cc <MPU6050_Init>
	autotrig=1;
    36b2:	10 93 58 06 	sts	0x0658, r17	; 0x800658 <autotrig+0x1>
    36b6:	00 93 57 06 	sts	0x0657, r16	; 0x800657 <autotrig>
	double x=0;
	double y=0;
	char asd[20];
	int p=0;
	double angle=0;
	int going=0;
    36ba:	1e 8a       	std	Y+22, r1	; 0x16
    36bc:	1d 8a       	std	Y+21, r1	; 0x15
				print("\r\fPesticide Cooler Control...");
				print("\n\n\r          ");
				nowtime();
				print(ot);
				print("\n\n\rangle:");
				print(asd);
    36be:	9e 01       	movw	r18, r28
    36c0:	2f 5f       	subi	r18, 0xFF	; 255
    36c2:	3f 4f       	sbci	r19, 0xFF	; 255
    36c4:	19 01       	movw	r2, r18
					if(spwmon>=39) spwmon=39;
					angle=y*57.324;
					if(angle<=0) {angle=0;}
					if(angle>=180) {angle=180;}
					
					sprintf(asd,"%3.1f",angle);
    36c6:	0f 2e       	mov	r0, r31
    36c8:	fd e9       	ldi	r31, 0x9D	; 157
    36ca:	4f 2e       	mov	r4, r31
    36cc:	f3 e0       	ldi	r31, 0x03	; 3
    36ce:	5f 2e       	mov	r5, r31
    36d0:	f0 2d       	mov	r31, r0
				print("\r\fPesticide Cooler Control...");
				print("\n\n\r          ");
				nowtime();
				print(ot);
				print("\n\n\rangle:");
				print(asd);
    36d2:	2f 8b       	std	Y+23, r18	; 0x17
    36d4:	38 8e       	std	Y+24, r3	; 0x18
	autotrig=1;
	
	while(1)
	{
		
		if(gcon==1)
    36d6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    36da:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    36de:	01 97       	sbiw	r24, 0x01	; 1
    36e0:	d1 f7       	brne	.-12     	; 0x36d6 <pes+0x6e>
    36e2:	8d 89       	ldd	r24, Y+21	; 0x15
    36e4:	9e 89       	ldd	r25, Y+22	; 0x16
    36e6:	0c 96       	adiw	r24, 0x0c	; 12
    36e8:	9c 8f       	std	Y+28, r25	; 0x1c
    36ea:	8b 8f       	std	Y+27, r24	; 0x1b
    36ec:	9a 8f       	std	Y+26, r25	; 0x1a
    36ee:	89 8f       	std	Y+25, r24	; 0x19
		{
			for(p=0; p<6; p++)
			{
				nowtime();
    36f0:	19 da       	rcall	.-3022   	; 0x2b24 <nowtime>
				
				print("\r\fPesticide Cooler Control...");
    36f2:	85 e6       	ldi	r24, 0x65	; 101
    36f4:	93 e0       	ldi	r25, 0x03	; 3
    36f6:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
				print("\n\n\r          ");
    36fa:	83 e8       	ldi	r24, 0x83	; 131
    36fc:	93 e0       	ldi	r25, 0x03	; 3
    36fe:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
				nowtime();
    3702:	10 da       	rcall	.-3040   	; 0x2b24 <nowtime>
				print(ot);
    3704:	85 eb       	ldi	r24, 0xB5	; 181
    3706:	9b e0       	ldi	r25, 0x0B	; 11
    3708:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
				print("\n\n\rangle:");
    370c:	81 e9       	ldi	r24, 0x91	; 145
    370e:	93 e0       	ldi	r25, 0x03	; 3
    3710:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
				print(asd);
    3714:	8f 89       	ldd	r24, Y+23	; 0x17
    3716:	98 8d       	ldd	r25, Y+24	; 0x18
    3718:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
				going+=2;
    371c:	2d 89       	ldd	r18, Y+21	; 0x15
    371e:	3e 89       	ldd	r19, Y+22	; 0x16
    3720:	2e 5f       	subi	r18, 0xFE	; 254
    3722:	3f 4f       	sbci	r19, 0xFF	; 255
    3724:	3e 8b       	std	Y+22, r19	; 0x16
    3726:	2d 8b       	std	Y+21, r18	; 0x15
				if(going>100){br=1; break;}
    3728:	25 36       	cpi	r18, 0x65	; 101
    372a:	31 05       	cpc	r19, r1
    372c:	0c f0       	brlt	.+2      	; 0x3730 <pes+0xc8>
    372e:	f2 c0       	rjmp	.+484    	; 0x3914 <pes+0x2ac>
				sprintf(asd,"%d",going);
    3730:	3f 93       	push	r19
    3732:	2f 93       	push	r18
    3734:	8e e2       	ldi	r24, 0x2E	; 46
    3736:	93 e0       	ldi	r25, 0x03	; 3
    3738:	9f 93       	push	r25
    373a:	8f 93       	push	r24
    373c:	3f 92       	push	r3
    373e:	2f 92       	push	r2
    3740:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
				print("        ");
    3744:	88 e8       	ldi	r24, 0x88	; 136
    3746:	93 e0       	ldi	r25, 0x03	; 3
    3748:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
				print(asd);
    374c:	8f 89       	ldd	r24, Y+23	; 0x17
    374e:	98 8d       	ldd	r25, Y+24	; 0x18
    3750:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
				print("%");
    3754:	8b e9       	ldi	r24, 0x9B	; 155
    3756:	93 e0       	ldi	r25, 0x03	; 3
    3758:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
				
				for(t=0; t<250;)
    375c:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    3760:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
    3764:	0f 90       	pop	r0
    3766:	0f 90       	pop	r0
    3768:	0f 90       	pop	r0
    376a:	0f 90       	pop	r0
    376c:	0f 90       	pop	r0
    376e:	0f 90       	pop	r0
				{
					read_gyro();
    3770:	0e 94 39 0c 	call	0x1872	; 0x1872 <read_gyro>
					
					x=(((Xa*100)+100)*0.0157);
					y=3.14-(((Ya*100)+100)*0.0157);
    3774:	20 e0       	ldi	r18, 0x00	; 0
    3776:	30 e0       	ldi	r19, 0x00	; 0
    3778:	48 ec       	ldi	r20, 0xC8	; 200
    377a:	52 e4       	ldi	r21, 0x42	; 66
    377c:	60 91 a2 0b 	lds	r22, 0x0BA2	; 0x800ba2 <Ya>
    3780:	70 91 a3 0b 	lds	r23, 0x0BA3	; 0x800ba3 <Ya+0x1>
    3784:	80 91 a4 0b 	lds	r24, 0x0BA4	; 0x800ba4 <Ya+0x2>
    3788:	90 91 a5 0b 	lds	r25, 0x0BA5	; 0x800ba5 <Ya+0x3>
    378c:	0e 94 e4 2a 	call	0x55c8	; 0x55c8 <__mulsf3>
    3790:	20 e0       	ldi	r18, 0x00	; 0
    3792:	30 e0       	ldi	r19, 0x00	; 0
    3794:	48 ec       	ldi	r20, 0xC8	; 200
    3796:	52 e4       	ldi	r21, 0x42	; 66
    3798:	0e 94 f1 28 	call	0x51e2	; 0x51e2 <__addsf3>
    379c:	29 e4       	ldi	r18, 0x49	; 73
    379e:	3d e9       	ldi	r19, 0x9D	; 157
    37a0:	40 e8       	ldi	r20, 0x80	; 128
    37a2:	5c e3       	ldi	r21, 0x3C	; 60
    37a4:	0e 94 e4 2a 	call	0x55c8	; 0x55c8 <__mulsf3>
    37a8:	9b 01       	movw	r18, r22
    37aa:	ac 01       	movw	r20, r24
    37ac:	63 ec       	ldi	r22, 0xC3	; 195
    37ae:	75 ef       	ldi	r23, 0xF5	; 245
    37b0:	88 e4       	ldi	r24, 0x48	; 72
    37b2:	90 e4       	ldi	r25, 0x40	; 64
    37b4:	0e 94 f0 28 	call	0x51e0	; 0x51e0 <__subsf3>
    37b8:	6b 01       	movw	r12, r22
    37ba:	7c 01       	movw	r14, r24

					spwmon=(y/0.1046)+10;
    37bc:	26 e8       	ldi	r18, 0x86	; 134
    37be:	38 e3       	ldi	r19, 0x38	; 56
    37c0:	46 ed       	ldi	r20, 0xD6	; 214
    37c2:	5d e3       	ldi	r21, 0x3D	; 61
    37c4:	0e 94 5c 29 	call	0x52b8	; 0x52b8 <__divsf3>
    37c8:	20 e0       	ldi	r18, 0x00	; 0
    37ca:	30 e0       	ldi	r19, 0x00	; 0
    37cc:	40 e2       	ldi	r20, 0x20	; 32
    37ce:	51 e4       	ldi	r21, 0x41	; 65
    37d0:	0e 94 f1 28 	call	0x51e2	; 0x51e2 <__addsf3>
    37d4:	0e 94 c4 29 	call	0x5388	; 0x5388 <__fixsfsi>
					if(spwmon>=39) spwmon=39;
    37d8:	67 32       	cpi	r22, 0x27	; 39
    37da:	71 05       	cpc	r23, r1
    37dc:	2c f4       	brge	.+10     	; 0x37e8 <pes+0x180>
					read_gyro();
					
					x=(((Xa*100)+100)*0.0157);
					y=3.14-(((Ya*100)+100)*0.0157);

					spwmon=(y/0.1046)+10;
    37de:	70 93 33 06 	sts	0x0633, r23	; 0x800633 <spwmon+0x1>
    37e2:	60 93 32 06 	sts	0x0632, r22	; 0x800632 <spwmon>
    37e6:	06 c0       	rjmp	.+12     	; 0x37f4 <pes+0x18c>
					if(spwmon>=39) spwmon=39;
    37e8:	87 e2       	ldi	r24, 0x27	; 39
    37ea:	90 e0       	ldi	r25, 0x00	; 0
    37ec:	90 93 33 06 	sts	0x0633, r25	; 0x800633 <spwmon+0x1>
    37f0:	80 93 32 06 	sts	0x0632, r24	; 0x800632 <spwmon>
					angle=y*57.324;
    37f4:	27 ec       	ldi	r18, 0xC7	; 199
    37f6:	3b e4       	ldi	r19, 0x4B	; 75
    37f8:	45 e6       	ldi	r20, 0x65	; 101
    37fa:	52 e4       	ldi	r21, 0x42	; 66
    37fc:	c7 01       	movw	r24, r14
    37fe:	b6 01       	movw	r22, r12
    3800:	0e 94 e4 2a 	call	0x55c8	; 0x55c8 <__mulsf3>
    3804:	86 2e       	mov	r8, r22
    3806:	97 2e       	mov	r9, r23
    3808:	a8 2e       	mov	r10, r24
    380a:	b9 2e       	mov	r11, r25
    380c:	66 2e       	mov	r6, r22
    380e:	77 2e       	mov	r7, r23
    3810:	18 2f       	mov	r17, r24
    3812:	09 2f       	mov	r16, r25
					if(angle<=0) {angle=0;}
    3814:	20 e0       	ldi	r18, 0x00	; 0
    3816:	30 e0       	ldi	r19, 0x00	; 0
    3818:	a9 01       	movw	r20, r18
    381a:	0e 94 55 29 	call	0x52aa	; 0x52aa <__cmpsf2>
    381e:	18 16       	cp	r1, r24
    3820:	8c f4       	brge	.+34     	; 0x3844 <pes+0x1dc>
					if(angle>=180) {angle=180;}
    3822:	20 e0       	ldi	r18, 0x00	; 0
    3824:	30 e0       	ldi	r19, 0x00	; 0
    3826:	44 e3       	ldi	r20, 0x34	; 52
    3828:	53 e4       	ldi	r21, 0x43	; 67
    382a:	68 2d       	mov	r22, r8
    382c:	79 2d       	mov	r23, r9
    382e:	8a 2d       	mov	r24, r10
    3830:	9b 2d       	mov	r25, r11
    3832:	0e 94 e0 2a 	call	0x55c0	; 0x55c0 <__gesf2>
    3836:	88 23       	and	r24, r24
    3838:	4c f0       	brlt	.+18     	; 0x384c <pes+0x1e4>
    383a:	61 2c       	mov	r6, r1
    383c:	71 2c       	mov	r7, r1
    383e:	14 e3       	ldi	r17, 0x34	; 52
    3840:	03 e4       	ldi	r16, 0x43	; 67
    3842:	04 c0       	rjmp	.+8      	; 0x384c <pes+0x1e4>
					y=3.14-(((Ya*100)+100)*0.0157);

					spwmon=(y/0.1046)+10;
					if(spwmon>=39) spwmon=39;
					angle=y*57.324;
					if(angle<=0) {angle=0;}
    3844:	61 2c       	mov	r6, r1
    3846:	71 2c       	mov	r7, r1
    3848:	10 e0       	ldi	r17, 0x00	; 0
    384a:	00 e0       	ldi	r16, 0x00	; 0
					if(angle>=180) {angle=180;}
					
					sprintf(asd,"%3.1f",angle);
    384c:	0f 93       	push	r16
    384e:	1f 93       	push	r17
    3850:	7f 92       	push	r7
    3852:	6f 92       	push	r6
    3854:	5f 92       	push	r5
    3856:	4f 92       	push	r4
    3858:	3f 92       	push	r3
    385a:	2f 92       	push	r2
    385c:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
					
					g_clear();
    3860:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
					g_line(64,63,64-(40*cos(y)),63-(40*sin(y)));
    3864:	c7 01       	movw	r24, r14
    3866:	b6 01       	movw	r22, r12
    3868:	0e 94 47 2b 	call	0x568e	; 0x568e <sin>
    386c:	20 e0       	ldi	r18, 0x00	; 0
    386e:	30 e0       	ldi	r19, 0x00	; 0
    3870:	40 e2       	ldi	r20, 0x20	; 32
    3872:	52 e4       	ldi	r21, 0x42	; 66
    3874:	0e 94 e4 2a 	call	0x55c8	; 0x55c8 <__mulsf3>
    3878:	9b 01       	movw	r18, r22
    387a:	ac 01       	movw	r20, r24
    387c:	60 e0       	ldi	r22, 0x00	; 0
    387e:	70 e0       	ldi	r23, 0x00	; 0
    3880:	8c e7       	ldi	r24, 0x7C	; 124
    3882:	92 e4       	ldi	r25, 0x42	; 66
    3884:	0e 94 f0 28 	call	0x51e0	; 0x51e0 <__subsf3>
    3888:	0e 94 c9 29 	call	0x5392	; 0x5392 <__fixunssfsi>
    388c:	06 2f       	mov	r16, r22
    388e:	c7 01       	movw	r24, r14
    3890:	b6 01       	movw	r22, r12
    3892:	0e 94 59 29 	call	0x52b2	; 0x52b2 <cos>
    3896:	20 e0       	ldi	r18, 0x00	; 0
    3898:	30 e0       	ldi	r19, 0x00	; 0
    389a:	40 e2       	ldi	r20, 0x20	; 32
    389c:	52 e4       	ldi	r21, 0x42	; 66
    389e:	0e 94 e4 2a 	call	0x55c8	; 0x55c8 <__mulsf3>
    38a2:	9b 01       	movw	r18, r22
    38a4:	ac 01       	movw	r20, r24
    38a6:	60 e0       	ldi	r22, 0x00	; 0
    38a8:	70 e0       	ldi	r23, 0x00	; 0
    38aa:	80 e8       	ldi	r24, 0x80	; 128
    38ac:	92 e4       	ldi	r25, 0x42	; 66
    38ae:	0e 94 f0 28 	call	0x51e0	; 0x51e0 <__subsf3>
    38b2:	0e 94 c9 29 	call	0x5392	; 0x5392 <__fixunssfsi>
    38b6:	16 2f       	mov	r17, r22
    38b8:	20 2f       	mov	r18, r16
    38ba:	46 2f       	mov	r20, r22
    38bc:	6f e3       	ldi	r22, 0x3F	; 63
    38be:	80 e4       	ldi	r24, 0x40	; 64
    38c0:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
					g_line(61,63,64-(40*cos(y)),63-(40*sin(y)));
    38c4:	20 2f       	mov	r18, r16
    38c6:	41 2f       	mov	r20, r17
    38c8:	6f e3       	ldi	r22, 0x3F	; 63
    38ca:	8d e3       	ldi	r24, 0x3D	; 61
    38cc:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
					g_line(67,63,64-(40*cos(y)),63-(40*sin(y)));
    38d0:	20 2f       	mov	r18, r16
    38d2:	41 2f       	mov	r20, r17
    38d4:	6f e3       	ldi	r22, 0x3F	; 63
    38d6:	83 e4       	ldi	r24, 0x43	; 67
    38d8:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
					g_render();
    38dc:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
				sprintf(asd,"%d",going);
				print("        ");
				print(asd);
				print("%");
				
				for(t=0; t<250;)
    38e0:	0f b6       	in	r0, 0x3f	; 63
    38e2:	f8 94       	cli
    38e4:	de bf       	out	0x3e, r29	; 62
    38e6:	0f be       	out	0x3f, r0	; 63
    38e8:	cd bf       	out	0x3d, r28	; 61
    38ea:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    38ee:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    38f2:	8a 3f       	cpi	r24, 0xFA	; 250
    38f4:	91 05       	cpc	r25, r1
    38f6:	0c f4       	brge	.+2      	; 0x38fa <pes+0x292>
    38f8:	3b cf       	rjmp	.-394    	; 0x3770 <pes+0x108>
	while(1)
	{
		
		if(gcon==1)
		{
			for(p=0; p<6; p++)
    38fa:	8d 89       	ldd	r24, Y+21	; 0x15
    38fc:	9e 89       	ldd	r25, Y+22	; 0x16
    38fe:	29 8d       	ldd	r18, Y+25	; 0x19
    3900:	3a 8d       	ldd	r19, Y+26	; 0x1a
    3902:	82 17       	cp	r24, r18
    3904:	93 07       	cpc	r25, r19
    3906:	09 f0       	breq	.+2      	; 0x390a <pes+0x2a2>
    3908:	f3 ce       	rjmp	.-538    	; 0x36f0 <pes+0x88>
				print("\n\n\r          ");
				nowtime();
				print(ot);
				print("\n\n\rangle:");
				print(asd);
				going+=2;
    390a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    390c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    390e:	9e 8b       	std	Y+22, r25	; 0x16
    3910:	8d 8b       	std	Y+21, r24	; 0x15
    3912:	e1 ce       	rjmp	.-574    	; 0x36d6 <pes+0x6e>
			}
		}
		if(br==1) break;
	}
	
	autotrig=0;
    3914:	10 92 58 06 	sts	0x0658, r1	; 0x800658 <autotrig+0x1>
    3918:	10 92 57 06 	sts	0x0657, r1	; 0x800657 <autotrig>
	spwmtrig=0;
    391c:	10 92 31 06 	sts	0x0631, r1	; 0x800631 <spwmtrig+0x1>
    3920:	10 92 30 06 	sts	0x0630, r1	; 0x800630 <spwmtrig>
}
    3924:	6c 96       	adiw	r28, 0x1c	; 28
    3926:	0f b6       	in	r0, 0x3f	; 63
    3928:	f8 94       	cli
    392a:	de bf       	out	0x3e, r29	; 62
    392c:	0f be       	out	0x3f, r0	; 63
    392e:	cd bf       	out	0x3d, r28	; 61
    3930:	df 91       	pop	r29
    3932:	cf 91       	pop	r28
    3934:	1f 91       	pop	r17
    3936:	0f 91       	pop	r16
    3938:	ff 90       	pop	r15
    393a:	ef 90       	pop	r14
    393c:	df 90       	pop	r13
    393e:	cf 90       	pop	r12
    3940:	bf 90       	pop	r11
    3942:	af 90       	pop	r10
    3944:	9f 90       	pop	r9
    3946:	8f 90       	pop	r8
    3948:	7f 90       	pop	r7
    394a:	6f 90       	pop	r6
    394c:	5f 90       	pop	r5
    394e:	4f 90       	pop	r4
    3950:	3f 90       	pop	r3
    3952:	2f 90       	pop	r2
    3954:	08 95       	ret

00003956 <autorun>:
void autorun()
{
    3956:	2f 92       	push	r2
    3958:	3f 92       	push	r3
    395a:	4f 92       	push	r4
    395c:	5f 92       	push	r5
    395e:	6f 92       	push	r6
    3960:	7f 92       	push	r7
    3962:	8f 92       	push	r8
    3964:	9f 92       	push	r9
    3966:	af 92       	push	r10
    3968:	bf 92       	push	r11
    396a:	cf 92       	push	r12
    396c:	df 92       	push	r13
    396e:	ef 92       	push	r14
    3970:	ff 92       	push	r15
    3972:	0f 93       	push	r16
    3974:	1f 93       	push	r17
    3976:	cf 93       	push	r28
    3978:	df 93       	push	r29
	int cnt=0;
	int  i=0;
	int lc=0;
	
	etrig=1;
    397a:	81 e0       	ldi	r24, 0x01	; 1
    397c:	90 e0       	ldi	r25, 0x00	; 0
    397e:	90 93 01 06 	sts	0x0601, r25	; 0x800601 <etrig+0x1>
    3982:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <etrig>
	//ttrig=1;
	nowtime();
    3986:	ce d8       	rcall	.-3684   	; 0x2b24 <nowtime>
    3988:	0f 2e       	mov	r0, r31
    398a:	f5 eb       	ldi	r31, 0xB5	; 181
    398c:	af 2e       	mov	r10, r31
    398e:	fb e0       	ldi	r31, 0x0B	; 11
    3990:	bf 2e       	mov	r11, r31
    3992:	f0 2d       	mov	r31, r0
    3994:	80 91 2a 06 	lds	r24, 0x062A	; 0x80062a <num>
    3998:	90 91 2b 06 	lds	r25, 0x062B	; 0x80062b <num+0x1>
    399c:	dc 01       	movw	r26, r24
    399e:	aa 0f       	add	r26, r26
    39a0:	bb 1f       	adc	r27, r27
    39a2:	aa 0f       	add	r26, r26
    39a4:	bb 1f       	adc	r27, r27
    39a6:	aa 0f       	add	r26, r26
    39a8:	bb 1f       	adc	r27, r27
    39aa:	8a 0f       	add	r24, r26
    39ac:	9b 1f       	adc	r25, r27
    39ae:	dc 01       	movw	r26, r24
    39b0:	ab 51       	subi	r26, 0x1B	; 27
    39b2:	b9 4f       	sbci	r27, 0xF9	; 249
    39b4:	0f 2e       	mov	r0, r31
    39b6:	fe eb       	ldi	r31, 0xBE	; 190
    39b8:	8f 2e       	mov	r8, r31
    39ba:	fb e0       	ldi	r31, 0x0B	; 11
    39bc:	9f 2e       	mov	r9, r31
    39be:	f0 2d       	mov	r31, r0
	for(i=0; i<9; i++)
	{ots[num][i]=ot[i];}
    39c0:	f5 01       	movw	r30, r10
    39c2:	81 91       	ld	r24, Z+
    39c4:	8d 93       	st	X+, r24
	int lc=0;
	
	etrig=1;
	//ttrig=1;
	nowtime();
	for(i=0; i<9; i++)
    39c6:	e8 15       	cp	r30, r8
    39c8:	f9 05       	cpc	r31, r9
    39ca:	d9 f7       	brne	.-10     	; 0x39c2 <autorun+0x6c>
	{ots[num][i]=ot[i];}
	
	PORTE&=~(1<<buz);
    39cc:	1e 98       	cbi	0x03, 6	; 3
	PORTE&=0x00;
    39ce:	83 b1       	in	r24, 0x03	; 3
    39d0:	13 b8       	out	0x03, r1	; 3
	g_clear();
    39d2:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
	g_xy(13,0);
    39d6:	60 e0       	ldi	r22, 0x00	; 0
    39d8:	70 e0       	ldi	r23, 0x00	; 0
    39da:	8d e0       	ldi	r24, 0x0D	; 13
    39dc:	90 e0       	ldi	r25, 0x00	; 0
    39de:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>

	prints("Code:");
    39e2:	83 ea       	ldi	r24, 0xA3	; 163
    39e4:	93 e0       	ldi	r25, 0x03	; 3
    39e6:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	if(sel==0){prints("Tem_Over_Max");}
    39ea:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    39ee:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    39f2:	89 2b       	or	r24, r25
    39f4:	21 f4       	brne	.+8      	; 0x39fe <autorun+0xa8>
    39f6:	89 ea       	ldi	r24, 0xA9	; 169
    39f8:	93 e0       	ldi	r25, 0x03	; 3
    39fa:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	if(sel==1){prints("Tem_Over_Min");}
    39fe:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3a02:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3a06:	01 97       	sbiw	r24, 0x01	; 1
    3a08:	21 f4       	brne	.+8      	; 0x3a12 <autorun+0xbc>
    3a0a:	86 eb       	ldi	r24, 0xB6	; 182
    3a0c:	93 e0       	ldi	r25, 0x03	; 3
    3a0e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	if(sel==2){prints("Hum_Over_Max");}
    3a12:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3a16:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3a1a:	02 97       	sbiw	r24, 0x02	; 2
    3a1c:	21 f4       	brne	.+8      	; 0x3a26 <autorun+0xd0>
    3a1e:	83 ec       	ldi	r24, 0xC3	; 195
    3a20:	93 e0       	ldi	r25, 0x03	; 3
    3a22:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	if(sel==3){prints("Hum_Over_Min");}
    3a26:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3a2a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3a2e:	03 97       	sbiw	r24, 0x03	; 3
    3a30:	21 f4       	brne	.+8      	; 0x3a3a <autorun+0xe4>
    3a32:	80 ed       	ldi	r24, 0xD0	; 208
    3a34:	93 e0       	ldi	r25, 0x03	; 3
    3a36:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	g_render();
    3a3a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
	autotrig=1;
    3a3e:	81 e0       	ldi	r24, 0x01	; 1
    3a40:	90 e0       	ldi	r25, 0x00	; 0
    3a42:	90 93 58 06 	sts	0x0658, r25	; 0x800658 <autotrig+0x1>
    3a46:	80 93 57 06 	sts	0x0657, r24	; 0x800657 <autotrig>
	
	print("\r\f\n                sw2:Err_Log\n\n\rsw1:T/H Graph   sw5:Time/div   sw3:L Graph\n\n\r                sw4:Vigil Mod");
    3a4a:	8e ec       	ldi	r24, 0xCE	; 206
    3a4c:	91 e0       	ldi	r25, 0x01	; 1
    3a4e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\n\r               Error Detected!\n\r             Now Auto-Working....");
    3a52:	8d ed       	ldi	r24, 0xDD	; 221
    3a54:	93 e0       	ldi	r25, 0x03	; 3
    3a56:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
}
void autorun()
{
	int cnt=0;
	int  i=0;
	int lc=0;
    3a5a:	c0 e0       	ldi	r28, 0x00	; 0
    3a5c:	d0 e0       	ldi	r29, 0x00	; 0
	autotrig=0;
	spwmtrig=0;
}
void autorun()
{
	int cnt=0;
    3a5e:	00 e0       	ldi	r16, 0x00	; 0
    3a60:	10 e0       	ldi	r17, 0x00	; 0
		if(sel==2||sel==3){g_xy(49,32); prints(hum); printc('%');}
		
		if(sel==0)
		{
			fpwmtrig=0;
			spwmtrig=1;
    3a62:	cc 24       	eor	r12, r12
    3a64:	c3 94       	inc	r12
    3a66:	d1 2c       	mov	r13, r1
			fpwmtrig=1;
			spwmtrig=0;
			if(maxhum<=I_RH)
			{
				fpwmon=(I_RH-maxhum+5);
				if(fpwmon>=20)fpwmon=20;
    3a68:	0f 2e       	mov	r0, r31
    3a6a:	f4 e1       	ldi	r31, 0x14	; 20
    3a6c:	2f 2e       	mov	r2, r31
    3a6e:	31 2c       	mov	r3, r1
    3a70:	f0 2d       	mov	r31, r0
			g_clearline(7);
			g_xy(0,56);
			prints("Fan Speed:");
		}
		
		if(cnt>=5)cnt=5;
    3a72:	41 2c       	mov	r4, r1
    3a74:	0f 2e       	mov	r0, r31
    3a76:	fd e0       	ldi	r31, 0x0D	; 13
    3a78:	5f 2e       	mov	r5, r31
    3a7a:	f0 2d       	mov	r31, r0
	autotrig=0;
	spwmtrig=0;
}
void autorun()
{
	int cnt=0;
    3a7c:	0f 2e       	mov	r0, r31
    3a7e:	f3 e0       	ldi	r31, 0x03	; 3
    3a80:	ef 2e       	mov	r14, r31
    3a82:	f1 2c       	mov	r15, r1
    3a84:	f0 2d       	mov	r31, r0
	
	while(1)
	{
		for(i=0; i<3; i++)
		{
			for(t=0; t<500;)
    3a86:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    3a8a:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
			{
				nowtime();
    3a8e:	4a d8       	rcall	.-3948   	; 0x2b24 <nowtime>
				g_clearline(2);
    3a90:	82 e0       	ldi	r24, 0x02	; 2
    3a92:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
				g_xy(40,16);
    3a96:	60 e1       	ldi	r22, 0x10	; 16
    3a98:	70 e0       	ldi	r23, 0x00	; 0
    3a9a:	88 e2       	ldi	r24, 0x28	; 40
    3a9c:	90 e0       	ldi	r25, 0x00	; 0
    3a9e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
				prints(ot);
    3aa2:	85 eb       	ldi	r24, 0xB5	; 181
    3aa4:	9b e0       	ldi	r25, 0x0B	; 11
    3aa6:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
				g_render();
    3aaa:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>

				if(sel==1&&cnt==0)
    3aae:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3ab2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3ab6:	81 30       	cpi	r24, 0x01	; 1
    3ab8:	91 05       	cpc	r25, r1
    3aba:	09 f0       	breq	.+2      	; 0x3abe <autorun+0x168>
    3abc:	40 c0       	rjmp	.+128    	; 0x3b3e <autorun+0x1e8>
    3abe:	01 15       	cp	r16, r1
    3ac0:	11 05       	cpc	r17, r1
    3ac2:	09 f0       	breq	.+2      	; 0x3ac6 <autorun+0x170>
    3ac4:	e7 c2       	rjmp	.+1486   	; 0x4094 <autorun+0x73e>
				{if(lcnt>=1000){lcnt=0; lc++;}}
    3ac6:	20 91 fa 05 	lds	r18, 0x05FA	; 0x8005fa <lcnt>
    3aca:	30 91 fb 05 	lds	r19, 0x05FB	; 0x8005fb <lcnt+0x1>
    3ace:	28 3e       	cpi	r18, 0xE8	; 232
    3ad0:	33 40       	sbci	r19, 0x03	; 3
    3ad2:	9c f0       	brlt	.+38     	; 0x3afa <autorun+0x1a4>
    3ad4:	10 92 fb 05 	sts	0x05FB, r1	; 0x8005fb <lcnt+0x1>
    3ad8:	10 92 fa 05 	sts	0x05FA, r1	; 0x8005fa <lcnt>
    3adc:	21 96       	adiw	r28, 0x01	; 1
    3ade:	0d c0       	rjmp	.+26     	; 0x3afa <autorun+0x1a4>
				
				if(sel==1&&cnt==1)
				{if(lcnt>=800){lcnt=0; lc++;}}
    3ae0:	80 91 fa 05 	lds	r24, 0x05FA	; 0x8005fa <lcnt>
    3ae4:	90 91 fb 05 	lds	r25, 0x05FB	; 0x8005fb <lcnt+0x1>
    3ae8:	80 32       	cpi	r24, 0x20	; 32
    3aea:	93 40       	sbci	r25, 0x03	; 3
    3aec:	54 f1       	brlt	.+84     	; 0x3b42 <autorun+0x1ec>
    3aee:	10 92 fb 05 	sts	0x05FB, r1	; 0x8005fb <lcnt+0x1>
    3af2:	10 92 fa 05 	sts	0x05FA, r1	; 0x8005fa <lcnt>
    3af6:	21 96       	adiw	r28, 0x01	; 1
    3af8:	24 c0       	rjmp	.+72     	; 0x3b42 <autorun+0x1ec>
				
				if(sel==1&&cnt==2)
    3afa:	02 30       	cpi	r16, 0x02	; 2
    3afc:	11 05       	cpc	r17, r1
    3afe:	71 f4       	brne	.+28     	; 0x3b1c <autorun+0x1c6>
				{if(lcnt>=600){lcnt=0; lc++;}}
    3b00:	20 91 fa 05 	lds	r18, 0x05FA	; 0x8005fa <lcnt>
    3b04:	30 91 fb 05 	lds	r19, 0x05FB	; 0x8005fb <lcnt+0x1>
    3b08:	28 35       	cpi	r18, 0x58	; 88
    3b0a:	32 40       	sbci	r19, 0x02	; 2
    3b0c:	0c f4       	brge	.+2      	; 0x3b10 <autorun+0x1ba>
    3b0e:	c7 c2       	rjmp	.+1422   	; 0x409e <autorun+0x748>
    3b10:	10 92 fb 05 	sts	0x05FB, r1	; 0x8005fb <lcnt+0x1>
    3b14:	10 92 fa 05 	sts	0x05FA, r1	; 0x8005fa <lcnt>
    3b18:	21 96       	adiw	r28, 0x01	; 1
    3b1a:	c1 c2       	rjmp	.+1410   	; 0x409e <autorun+0x748>
				
				if(sel==1&&cnt==3)
    3b1c:	03 30       	cpi	r16, 0x03	; 3
    3b1e:	11 05       	cpc	r17, r1
    3b20:	81 f4       	brne	.+32     	; 0x3b42 <autorun+0x1ec>
				{if(lcnt>=400){lcnt=0; lc++;}}
    3b22:	20 91 fa 05 	lds	r18, 0x05FA	; 0x8005fa <lcnt>
    3b26:	30 91 fb 05 	lds	r19, 0x05FB	; 0x8005fb <lcnt+0x1>
    3b2a:	20 39       	cpi	r18, 0x90	; 144
    3b2c:	31 40       	sbci	r19, 0x01	; 1
    3b2e:	0c f4       	brge	.+2      	; 0x3b32 <autorun+0x1dc>
    3b30:	ba c2       	rjmp	.+1396   	; 0x40a6 <autorun+0x750>
    3b32:	10 92 fb 05 	sts	0x05FB, r1	; 0x8005fb <lcnt+0x1>
    3b36:	10 92 fa 05 	sts	0x05FA, r1	; 0x8005fa <lcnt>
    3b3a:	21 96       	adiw	r28, 0x01	; 1
    3b3c:	b4 c2       	rjmp	.+1384   	; 0x40a6 <autorun+0x750>
				
				if(sel==1&&cnt==4)
    3b3e:	01 97       	sbiw	r24, 0x01	; 1
    3b40:	81 f5       	brne	.+96     	; 0x3ba2 <autorun+0x24c>
    3b42:	04 30       	cpi	r16, 0x04	; 4
    3b44:	11 05       	cpc	r17, r1
    3b46:	61 f4       	brne	.+24     	; 0x3b60 <autorun+0x20a>
				{if(lcnt>=200){lcnt=0; lc++;}}
    3b48:	80 91 fa 05 	lds	r24, 0x05FA	; 0x8005fa <lcnt>
    3b4c:	90 91 fb 05 	lds	r25, 0x05FB	; 0x8005fb <lcnt+0x1>
    3b50:	88 3c       	cpi	r24, 0xC8	; 200
    3b52:	91 05       	cpc	r25, r1
    3b54:	2c f0       	brlt	.+10     	; 0x3b60 <autorun+0x20a>
    3b56:	10 92 fb 05 	sts	0x05FB, r1	; 0x8005fb <lcnt+0x1>
    3b5a:	10 92 fa 05 	sts	0x05FA, r1	; 0x8005fa <lcnt>
    3b5e:	21 96       	adiw	r28, 0x01	; 1
				
				if(sel==1)
				{
					PORTE&=0xe0;
    3b60:	83 b1       	in	r24, 0x03	; 3
    3b62:	80 7e       	andi	r24, 0xE0	; 224
    3b64:	83 b9       	out	0x03, r24	; 3
					if(lc==1){PORTE|=0x01;}
    3b66:	c1 30       	cpi	r28, 0x01	; 1
    3b68:	d1 05       	cpc	r29, r1
    3b6a:	11 f4       	brne	.+4      	; 0x3b70 <autorun+0x21a>
    3b6c:	18 9a       	sbi	0x03, 0	; 3
    3b6e:	0a c0       	rjmp	.+20     	; 0x3b84 <autorun+0x22e>
					if(lc==2){PORTE|=0x02;}
    3b70:	c2 30       	cpi	r28, 0x02	; 2
    3b72:	d1 05       	cpc	r29, r1
    3b74:	11 f4       	brne	.+4      	; 0x3b7a <autorun+0x224>
    3b76:	19 9a       	sbi	0x03, 1	; 3
    3b78:	0a c0       	rjmp	.+20     	; 0x3b8e <autorun+0x238>
					if(lc==3){PORTE|=0x04;}
    3b7a:	c3 30       	cpi	r28, 0x03	; 3
    3b7c:	d1 05       	cpc	r29, r1
    3b7e:	11 f4       	brne	.+4      	; 0x3b84 <autorun+0x22e>
    3b80:	1a 9a       	sbi	0x03, 2	; 3
    3b82:	0a c0       	rjmp	.+20     	; 0x3b98 <autorun+0x242>
					if(lc==4){PORTE|=0x08;}
    3b84:	c4 30       	cpi	r28, 0x04	; 4
    3b86:	d1 05       	cpc	r29, r1
    3b88:	11 f4       	brne	.+4      	; 0x3b8e <autorun+0x238>
    3b8a:	1b 9a       	sbi	0x03, 3	; 3
    3b8c:	0a c0       	rjmp	.+20     	; 0x3ba2 <autorun+0x24c>
					if(lc==5){PORTE|=0x10;}
    3b8e:	c5 30       	cpi	r28, 0x05	; 5
    3b90:	d1 05       	cpc	r29, r1
    3b92:	11 f4       	brne	.+4      	; 0x3b98 <autorun+0x242>
    3b94:	1c 9a       	sbi	0x03, 4	; 3
    3b96:	05 c0       	rjmp	.+10     	; 0x3ba2 <autorun+0x24c>

					if(lc==6)lc=1;
    3b98:	c6 30       	cpi	r28, 0x06	; 6
    3b9a:	d1 05       	cpc	r29, r1
    3b9c:	11 f4       	brne	.+4      	; 0x3ba2 <autorun+0x24c>
    3b9e:	c1 e0       	ldi	r28, 0x01	; 1
    3ba0:	d0 e0       	ldi	r29, 0x00	; 0
	
	while(1)
	{
		for(i=0; i<3; i++)
		{
			for(t=0; t<500;)
    3ba2:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    3ba6:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    3baa:	84 3f       	cpi	r24, 0xF4	; 244
    3bac:	91 40       	sbci	r25, 0x01	; 1
    3bae:	0c f4       	brge	.+2      	; 0x3bb2 <autorun+0x25c>
    3bb0:	6e cf       	rjmp	.-292    	; 0x3a8e <autorun+0x138>
    3bb2:	b1 e0       	ldi	r27, 0x01	; 1
    3bb4:	eb 1a       	sub	r14, r27
    3bb6:	f1 08       	sbc	r15, r1
	print("\r\f\n                sw2:Err_Log\n\n\rsw1:T/H Graph   sw5:Time/div   sw3:L Graph\n\n\r                sw4:Vigil Mod");
	print("\n\n\r               Error Detected!\n\r             Now Auto-Working....");
	
	while(1)
	{
		for(i=0; i<3; i++)
    3bb8:	09 f0       	breq	.+2      	; 0x3bbc <autorun+0x266>
					if(lc==6)lc=1;
				}
			}
		}
		
		dht();
    3bba:	65 cf       	rjmp	.-310    	; 0x3a86 <autorun+0x130>
    3bbc:	42 dc       	rcall	.-1916   	; 0x3442 <dht>
		
		g_clearline(4);
    3bbe:	84 e0       	ldi	r24, 0x04	; 4
    3bc0:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
		if(sel==0||sel==1){g_xy(46,32); prints(tem); printc('^'); printc('C');}
    3bc4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3bc8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3bcc:	02 97       	sbiw	r24, 0x02	; 2
    3bce:	80 f4       	brcc	.+32     	; 0x3bf0 <autorun+0x29a>
    3bd0:	60 e2       	ldi	r22, 0x20	; 32
    3bd2:	70 e0       	ldi	r23, 0x00	; 0
    3bd4:	8e e2       	ldi	r24, 0x2E	; 46
    3bd6:	90 e0       	ldi	r25, 0x00	; 0
    3bd8:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
    3bdc:	8d e9       	ldi	r24, 0x9D	; 157
    3bde:	9b e0       	ldi	r25, 0x0B	; 11
    3be0:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
    3be4:	8e e5       	ldi	r24, 0x5E	; 94
    3be6:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
    3bea:	83 e4       	ldi	r24, 0x43	; 67
    3bec:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		if(sel==2||sel==3){g_xy(49,32); prints(hum); printc('%');}
    3bf0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3bf4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3bf8:	02 97       	sbiw	r24, 0x02	; 2
    3bfa:	02 97       	sbiw	r24, 0x02	; 2
    3bfc:	68 f4       	brcc	.+26     	; 0x3c18 <autorun+0x2c2>
    3bfe:	60 e2       	ldi	r22, 0x20	; 32
    3c00:	70 e0       	ldi	r23, 0x00	; 0
    3c02:	81 e3       	ldi	r24, 0x31	; 49
    3c04:	90 e0       	ldi	r25, 0x00	; 0
    3c06:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
    3c0a:	84 e6       	ldi	r24, 0x64	; 100
    3c0c:	96 e0       	ldi	r25, 0x06	; 6
    3c0e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
    3c12:	85 e2       	ldi	r24, 0x25	; 37
    3c14:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		
		if(sel==0)
    3c18:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3c1c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3c20:	89 2b       	or	r24, r25
    3c22:	09 f0       	breq	.+2      	; 0x3c26 <autorun+0x2d0>
    3c24:	71 c0       	rjmp	.+226    	; 0x3d08 <autorun+0x3b2>
		{
			fpwmtrig=0;
    3c26:	10 92 35 06 	sts	0x0635, r1	; 0x800635 <fpwmtrig+0x1>
    3c2a:	10 92 34 06 	sts	0x0634, r1	; 0x800634 <fpwmtrig>
			spwmtrig=1;
    3c2e:	d0 92 31 06 	sts	0x0631, r13	; 0x800631 <spwmtrig+0x1>
    3c32:	c0 92 30 06 	sts	0x0630, r12	; 0x800630 <spwmtrig>
			PORTB|=(1<<servo);
    3c36:	c6 9a       	sbi	0x18, 6	; 24
			if(maxtem<=I_Temp)
    3c38:	00 91 ae 0b 	lds	r16, 0x0BAE	; 0x800bae <I_Temp>
    3c3c:	10 e0       	ldi	r17, 0x00	; 0
    3c3e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <maxtem>
    3c42:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <maxtem+0x1>
    3c46:	08 17       	cp	r16, r24
    3c48:	19 07       	cpc	r17, r25
    3c4a:	5c f1       	brlt	.+86     	; 0x3ca2 <autorun+0x34c>
			{
				if(I_Temp-maxtem<=50)spwmon=(6*(I_Temp-maxtem))+11;
    3c4c:	08 1b       	sub	r16, r24
    3c4e:	19 0b       	sbc	r17, r25
    3c50:	03 33       	cpi	r16, 0x33	; 51
    3c52:	11 05       	cpc	r17, r1
    3c54:	64 f4       	brge	.+24     	; 0x3c6e <autorun+0x318>
    3c56:	c8 01       	movw	r24, r16
    3c58:	88 0f       	add	r24, r24
    3c5a:	99 1f       	adc	r25, r25
    3c5c:	80 0f       	add	r24, r16
    3c5e:	91 1f       	adc	r25, r17
    3c60:	88 0f       	add	r24, r24
    3c62:	99 1f       	adc	r25, r25
    3c64:	0b 96       	adiw	r24, 0x0b	; 11
    3c66:	90 93 33 06 	sts	0x0633, r25	; 0x800633 <spwmon+0x1>
    3c6a:	80 93 32 06 	sts	0x0632, r24	; 0x800632 <spwmon>
				if(spwmon>=40){spwmon=40;}
    3c6e:	80 91 32 06 	lds	r24, 0x0632	; 0x800632 <spwmon>
    3c72:	90 91 33 06 	lds	r25, 0x0633	; 0x800633 <spwmon+0x1>
    3c76:	88 97       	sbiw	r24, 0x28	; 40
    3c78:	34 f0       	brlt	.+12     	; 0x3c86 <autorun+0x330>
    3c7a:	88 e2       	ldi	r24, 0x28	; 40
    3c7c:	90 e0       	ldi	r25, 0x00	; 0
    3c7e:	90 93 33 06 	sts	0x0633, r25	; 0x800633 <spwmon+0x1>
    3c82:	80 93 32 06 	sts	0x0632, r24	; 0x800632 <spwmon>
				num++;
				if(num==10)num=0;
				break;
			}
			
			g_clearline(7);
    3c86:	87 e0       	ldi	r24, 0x07	; 7
    3c88:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
			g_xy(0,56);
    3c8c:	68 e3       	ldi	r22, 0x38	; 56
    3c8e:	70 e0       	ldi	r23, 0x00	; 0
    3c90:	80 e0       	ldi	r24, 0x00	; 0
    3c92:	90 e0       	ldi	r25, 0x00	; 0
    3c94:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Door Open:");
    3c98:	82 e2       	ldi	r24, 0x22	; 34
    3c9a:	94 e0       	ldi	r25, 0x04	; 4
    3c9c:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
    3ca0:	33 c0       	rjmp	.+102    	; 0x3d08 <autorun+0x3b2>
				
			}
			
			else
			{
				spwmon=0;
    3ca2:	10 92 33 06 	sts	0x0633, r1	; 0x800633 <spwmon+0x1>
    3ca6:	10 92 32 06 	sts	0x0632, r1	; 0x800632 <spwmon>
				spwmtrig=0;
				cnt=0;
				for(i=0; i<9; i++)
				{ote[num][i]=ot[i];}
    3caa:	80 91 2a 06 	lds	r24, 0x062A	; 0x80062a <num>
    3cae:	90 91 2b 06 	lds	r25, 0x062B	; 0x80062b <num+0x1>
    3cb2:	fc 01       	movw	r30, r24
    3cb4:	ee 0f       	add	r30, r30
    3cb6:	ff 1f       	adc	r31, r31
    3cb8:	ee 0f       	add	r30, r30
    3cba:	ff 1f       	adc	r31, r31
    3cbc:	ee 0f       	add	r30, r30
    3cbe:	ff 1f       	adc	r31, r31
    3cc0:	e8 0f       	add	r30, r24
    3cc2:	f9 1f       	adc	r31, r25
    3cc4:	ed 58       	subi	r30, 0x8D	; 141
    3cc6:	f9 4f       	sbci	r31, 0xF9	; 249
    3cc8:	d5 01       	movw	r26, r10
    3cca:	2d 91       	ld	r18, X+
    3ccc:	5d 01       	movw	r10, r26
    3cce:	21 93       	st	Z+, r18
			else
			{
				spwmon=0;
				spwmtrig=0;
				cnt=0;
				for(i=0; i<9; i++)
    3cd0:	a8 15       	cp	r26, r8
    3cd2:	b9 05       	cpc	r27, r9
    3cd4:	c9 f7       	brne	.-14     	; 0x3cc8 <autorun+0x372>
				{ote[num][i]=ot[i];}
				bover[num]=1;
    3cd6:	9c 01       	movw	r18, r24
    3cd8:	22 0f       	add	r18, r18
    3cda:	33 1f       	adc	r19, r19
    3cdc:	f9 01       	movw	r30, r18
    3cde:	ee 5f       	subi	r30, 0xFE	; 254
    3ce0:	f9 4f       	sbci	r31, 0xF9	; 249
    3ce2:	41 e0       	ldi	r20, 0x01	; 1
    3ce4:	50 e0       	ldi	r21, 0x00	; 0
    3ce6:	51 83       	std	Z+1, r21	; 0x01
    3ce8:	40 83       	st	Z, r20
				bsel[num]=0;
    3cea:	f9 01       	movw	r30, r18
    3cec:	ea 5e       	subi	r30, 0xEA	; 234
    3cee:	f9 4f       	sbci	r31, 0xF9	; 249
    3cf0:	11 82       	std	Z+1, r1	; 0x01
    3cf2:	10 82       	st	Z, r1
				num++;
    3cf4:	01 96       	adiw	r24, 0x01	; 1
				if(num==10)num=0;
    3cf6:	8a 30       	cpi	r24, 0x0A	; 10
    3cf8:	91 05       	cpc	r25, r1
    3cfa:	09 f0       	breq	.+2      	; 0x3cfe <autorun+0x3a8>
    3cfc:	b0 c1       	rjmp	.+864    	; 0x405e <autorun+0x708>
    3cfe:	10 92 2b 06 	sts	0x062B, r1	; 0x80062b <num+0x1>
    3d02:	10 92 2a 06 	sts	0x062A, r1	; 0x80062a <num>
    3d06:	af c1       	rjmp	.+862    	; 0x4066 <autorun+0x710>
			g_clearline(7);
			g_xy(0,56);
			prints("Door Open:");
		}
		
		if(sel==1)
    3d08:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3d0c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3d10:	01 97       	sbiw	r24, 0x01	; 1
    3d12:	09 f0       	breq	.+2      	; 0x3d16 <autorun+0x3c0>
    3d14:	6c c0       	rjmp	.+216    	; 0x3dee <autorun+0x498>
		{
			fpwmtrig=0;
    3d16:	10 92 35 06 	sts	0x0635, r1	; 0x800635 <fpwmtrig+0x1>
    3d1a:	10 92 34 06 	sts	0x0634, r1	; 0x800634 <fpwmtrig>
			spwmtrig=0;
    3d1e:	10 92 31 06 	sts	0x0631, r1	; 0x800631 <spwmtrig+0x1>
    3d22:	10 92 30 06 	sts	0x0630, r1	; 0x800630 <spwmtrig>
			if(mintem>I_Temp)
    3d26:	80 91 ae 0b 	lds	r24, 0x0BAE	; 0x800bae <I_Temp>
    3d2a:	90 e0       	ldi	r25, 0x00	; 0
    3d2c:	00 91 0e 01 	lds	r16, 0x010E	; 0x80010e <mintem>
    3d30:	10 91 0f 01 	lds	r17, 0x010F	; 0x80010f <mintem+0x1>
    3d34:	80 17       	cp	r24, r16
    3d36:	91 07       	cpc	r25, r17
    3d38:	54 f4       	brge	.+20     	; 0x3d4e <autorun+0x3f8>
			{
					cnt=mintem-I_Temp-1;
    3d3a:	08 1b       	sub	r16, r24
    3d3c:	19 0b       	sbc	r17, r25
    3d3e:	01 50       	subi	r16, 0x01	; 1
    3d40:	11 09       	sbc	r17, r1
					if(cnt>=4)cnt=4;
    3d42:	04 30       	cpi	r16, 0x04	; 4
    3d44:	11 05       	cpc	r17, r1
    3d46:	a4 f1       	brlt	.+104    	; 0x3db0 <autorun+0x45a>
    3d48:	04 e0       	ldi	r16, 0x04	; 4
    3d4a:	10 e0       	ldi	r17, 0x00	; 0
    3d4c:	31 c0       	rjmp	.+98     	; 0x3db0 <autorun+0x45a>
			else
			{
				cnt=0;
				lc=0;
				for(i=0; i<9; i++)
				{ote[num][i]=ot[i];}
    3d4e:	80 91 2a 06 	lds	r24, 0x062A	; 0x80062a <num>
    3d52:	90 91 2b 06 	lds	r25, 0x062B	; 0x80062b <num+0x1>
    3d56:	fc 01       	movw	r30, r24
    3d58:	ee 0f       	add	r30, r30
    3d5a:	ff 1f       	adc	r31, r31
    3d5c:	ee 0f       	add	r30, r30
    3d5e:	ff 1f       	adc	r31, r31
    3d60:	ee 0f       	add	r30, r30
    3d62:	ff 1f       	adc	r31, r31
    3d64:	e8 0f       	add	r30, r24
    3d66:	f9 1f       	adc	r31, r25
    3d68:	ed 58       	subi	r30, 0x8D	; 141
    3d6a:	f9 4f       	sbci	r31, 0xF9	; 249
    3d6c:	d5 01       	movw	r26, r10
    3d6e:	2d 91       	ld	r18, X+
    3d70:	5d 01       	movw	r10, r26
    3d72:	21 93       	st	Z+, r18
			
			else
			{
				cnt=0;
				lc=0;
				for(i=0; i<9; i++)
    3d74:	a8 15       	cp	r26, r8
    3d76:	b9 05       	cpc	r27, r9
    3d78:	c9 f7       	brne	.-14     	; 0x3d6c <autorun+0x416>
				{ote[num][i]=ot[i];}
				bover[num]=0;
    3d7a:	9c 01       	movw	r18, r24
    3d7c:	22 0f       	add	r18, r18
    3d7e:	33 1f       	adc	r19, r19
    3d80:	f9 01       	movw	r30, r18
    3d82:	ee 5f       	subi	r30, 0xFE	; 254
    3d84:	f9 4f       	sbci	r31, 0xF9	; 249
    3d86:	11 82       	std	Z+1, r1	; 0x01
    3d88:	10 82       	st	Z, r1
				bsel[num]=0;
    3d8a:	f9 01       	movw	r30, r18
    3d8c:	ea 5e       	subi	r30, 0xEA	; 234
    3d8e:	f9 4f       	sbci	r31, 0xF9	; 249
    3d90:	11 82       	std	Z+1, r1	; 0x01
    3d92:	10 82       	st	Z, r1
				num++;
    3d94:	01 96       	adiw	r24, 0x01	; 1
				if(num==10)num=0;
    3d96:	8a 30       	cpi	r24, 0x0A	; 10
    3d98:	91 05       	cpc	r25, r1
    3d9a:	29 f0       	breq	.+10     	; 0x3da6 <autorun+0x450>
				lc=0;
				for(i=0; i<9; i++)
				{ote[num][i]=ot[i];}
				bover[num]=0;
				bsel[num]=0;
				num++;
    3d9c:	90 93 2b 06 	sts	0x062B, r25	; 0x80062b <num+0x1>
    3da0:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <num>
    3da4:	60 c1       	rjmp	.+704    	; 0x4066 <autorun+0x710>
				if(num==10)num=0;
    3da6:	10 92 2b 06 	sts	0x062B, r1	; 0x80062b <num+0x1>
    3daa:	10 92 2a 06 	sts	0x062A, r1	; 0x80062a <num>
    3dae:	5b c1       	rjmp	.+694    	; 0x4066 <autorun+0x710>
				break;	
			}

			g_clearline(7);
    3db0:	87 e0       	ldi	r24, 0x07	; 7
    3db2:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
			g_xy(0,56);
    3db6:	68 e3       	ldi	r22, 0x38	; 56
    3db8:	70 e0       	ldi	r23, 0x00	; 0
    3dba:	80 e0       	ldi	r24, 0x00	; 0
    3dbc:	90 e0       	ldi	r25, 0x00	; 0
    3dbe:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Heat Level: 1 2 3 4 5");
    3dc2:	8d e2       	ldi	r24, 0x2D	; 45
    3dc4:	94 e0       	ldi	r25, 0x04	; 4
    3dc6:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			g_xy((cnt*12)+72,56);
    3dca:	c8 01       	movw	r24, r16
    3dcc:	88 0f       	add	r24, r24
    3dce:	99 1f       	adc	r25, r25
    3dd0:	80 0f       	add	r24, r16
    3dd2:	91 1f       	adc	r25, r17
    3dd4:	88 0f       	add	r24, r24
    3dd6:	99 1f       	adc	r25, r25
    3dd8:	88 0f       	add	r24, r24
    3dda:	99 1f       	adc	r25, r25
    3ddc:	68 e3       	ldi	r22, 0x38	; 56
    3dde:	70 e0       	ldi	r23, 0x00	; 0
    3de0:	88 5b       	subi	r24, 0xB8	; 184
    3de2:	9f 4f       	sbci	r25, 0xFF	; 255
    3de4:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			printc('$');
    3de8:	84 e2       	ldi	r24, 0x24	; 36
    3dea:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
			
		}
		
		if(sel==2)
    3dee:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3df2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3df6:	02 97       	sbiw	r24, 0x02	; 2
    3df8:	09 f0       	breq	.+2      	; 0x3dfc <autorun+0x4a6>
    3dfa:	70 c0       	rjmp	.+224    	; 0x3edc <autorun+0x586>
		{
			fpwmtrig=1;
    3dfc:	d0 92 35 06 	sts	0x0635, r13	; 0x800635 <fpwmtrig+0x1>
    3e00:	c0 92 34 06 	sts	0x0634, r12	; 0x800634 <fpwmtrig>
			spwmtrig=0;
    3e04:	10 92 31 06 	sts	0x0631, r1	; 0x800631 <spwmtrig+0x1>
    3e08:	10 92 30 06 	sts	0x0630, r1	; 0x800630 <spwmtrig>
			if(maxhum<=I_RH)
    3e0c:	80 91 af 0b 	lds	r24, 0x0BAF	; 0x800baf <I_RH>
    3e10:	90 e0       	ldi	r25, 0x00	; 0
    3e12:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <maxhum>
    3e16:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <maxhum+0x1>
    3e1a:	82 17       	cp	r24, r18
    3e1c:	93 07       	cpc	r25, r19
    3e1e:	3c f1       	brlt	.+78     	; 0x3e6e <autorun+0x518>
			{
				fpwmon=(I_RH-maxhum+5);
    3e20:	82 1b       	sub	r24, r18
    3e22:	93 0b       	sbc	r25, r19
    3e24:	05 96       	adiw	r24, 0x05	; 5
				if(fpwmon>=20)fpwmon=20;
    3e26:	84 31       	cpi	r24, 0x14	; 20
    3e28:	91 05       	cpc	r25, r1
    3e2a:	2c f4       	brge	.+10     	; 0x3e36 <autorun+0x4e0>
		{
			fpwmtrig=1;
			spwmtrig=0;
			if(maxhum<=I_RH)
			{
				fpwmon=(I_RH-maxhum+5);
    3e2c:	90 93 37 06 	sts	0x0637, r25	; 0x800637 <fpwmon+0x1>
    3e30:	80 93 36 06 	sts	0x0636, r24	; 0x800636 <fpwmon>
    3e34:	04 c0       	rjmp	.+8      	; 0x3e3e <autorun+0x4e8>
				if(fpwmon>=20)fpwmon=20;
    3e36:	30 92 37 06 	sts	0x0637, r3	; 0x800637 <fpwmon+0x1>
    3e3a:	20 92 36 06 	sts	0x0636, r2	; 0x800636 <fpwmon>
				cnt=(fpwmon-5)/3;
    3e3e:	80 91 36 06 	lds	r24, 0x0636	; 0x800636 <fpwmon>
    3e42:	90 91 37 06 	lds	r25, 0x0637	; 0x800637 <fpwmon+0x1>
    3e46:	05 97       	sbiw	r24, 0x05	; 5
    3e48:	63 e0       	ldi	r22, 0x03	; 3
    3e4a:	70 e0       	ldi	r23, 0x00	; 0
    3e4c:	0e 94 1a 2f 	call	0x5e34	; 0x5e34 <__divmodhi4>
    3e50:	8b 01       	movw	r16, r22
				num++;
				if(num==10)num=0;
				break;
			}
			
			g_clearline(7);
    3e52:	87 e0       	ldi	r24, 0x07	; 7
    3e54:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
			g_xy(0,56);
    3e58:	68 e3       	ldi	r22, 0x38	; 56
    3e5a:	70 e0       	ldi	r23, 0x00	; 0
    3e5c:	80 e0       	ldi	r24, 0x00	; 0
    3e5e:	90 e0       	ldi	r25, 0x00	; 0
    3e60:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Fan Speed:");
    3e64:	83 e4       	ldi	r24, 0x43	; 67
    3e66:	94 e0       	ldi	r25, 0x04	; 4
    3e68:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
    3e6c:	37 c0       	rjmp	.+110    	; 0x3edc <autorun+0x586>
				if(fpwmon>=20)fpwmon=20;
				cnt=(fpwmon-5)/3;
			}
			else
			{
				fpwmon=0;
    3e6e:	10 92 37 06 	sts	0x0637, r1	; 0x800637 <fpwmon+0x1>
    3e72:	10 92 36 06 	sts	0x0636, r1	; 0x800636 <fpwmon>
				fpwmtrig=0;
				cnt=0;
				for(i=0; i<9; i++)
				{ote[num][i]=ot[i];}
    3e76:	80 91 2a 06 	lds	r24, 0x062A	; 0x80062a <num>
    3e7a:	90 91 2b 06 	lds	r25, 0x062B	; 0x80062b <num+0x1>
    3e7e:	fc 01       	movw	r30, r24
    3e80:	ee 0f       	add	r30, r30
    3e82:	ff 1f       	adc	r31, r31
    3e84:	ee 0f       	add	r30, r30
    3e86:	ff 1f       	adc	r31, r31
    3e88:	ee 0f       	add	r30, r30
    3e8a:	ff 1f       	adc	r31, r31
    3e8c:	e8 0f       	add	r30, r24
    3e8e:	f9 1f       	adc	r31, r25
    3e90:	ed 58       	subi	r30, 0x8D	; 141
    3e92:	f9 4f       	sbci	r31, 0xF9	; 249
    3e94:	d5 01       	movw	r26, r10
    3e96:	2d 91       	ld	r18, X+
    3e98:	5d 01       	movw	r10, r26
    3e9a:	21 93       	st	Z+, r18
			else
			{
				fpwmon=0;
				fpwmtrig=0;
				cnt=0;
				for(i=0; i<9; i++)
    3e9c:	a8 15       	cp	r26, r8
    3e9e:	b9 05       	cpc	r27, r9
    3ea0:	c9 f7       	brne	.-14     	; 0x3e94 <autorun+0x53e>
				{ote[num][i]=ot[i];}
				bover[num]=1;
    3ea2:	9c 01       	movw	r18, r24
    3ea4:	22 0f       	add	r18, r18
    3ea6:	33 1f       	adc	r19, r19
    3ea8:	f9 01       	movw	r30, r18
    3eaa:	ee 5f       	subi	r30, 0xFE	; 254
    3eac:	f9 4f       	sbci	r31, 0xF9	; 249
    3eae:	41 e0       	ldi	r20, 0x01	; 1
    3eb0:	50 e0       	ldi	r21, 0x00	; 0
    3eb2:	51 83       	std	Z+1, r21	; 0x01
    3eb4:	40 83       	st	Z, r20
				bsel[num]=1;
    3eb6:	f9 01       	movw	r30, r18
    3eb8:	ea 5e       	subi	r30, 0xEA	; 234
    3eba:	f9 4f       	sbci	r31, 0xF9	; 249
    3ebc:	51 83       	std	Z+1, r21	; 0x01
    3ebe:	40 83       	st	Z, r20
				num++;
    3ec0:	01 96       	adiw	r24, 0x01	; 1
				if(num==10)num=0;
    3ec2:	8a 30       	cpi	r24, 0x0A	; 10
    3ec4:	91 05       	cpc	r25, r1
    3ec6:	29 f0       	breq	.+10     	; 0x3ed2 <autorun+0x57c>
				cnt=0;
				for(i=0; i<9; i++)
				{ote[num][i]=ot[i];}
				bover[num]=1;
				bsel[num]=1;
				num++;
    3ec8:	90 93 2b 06 	sts	0x062B, r25	; 0x80062b <num+0x1>
    3ecc:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <num>
    3ed0:	ca c0       	rjmp	.+404    	; 0x4066 <autorun+0x710>
				if(num==10)num=0;
    3ed2:	10 92 2b 06 	sts	0x062B, r1	; 0x80062b <num+0x1>
    3ed6:	10 92 2a 06 	sts	0x062A, r1	; 0x80062a <num>
    3eda:	c5 c0       	rjmp	.+394    	; 0x4066 <autorun+0x710>
			g_clearline(7);
			g_xy(0,56);
			prints("Fan Speed:");
		}
		
		if(sel==3)
    3edc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3ee0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3ee4:	03 97       	sbiw	r24, 0x03	; 3
    3ee6:	09 f0       	breq	.+2      	; 0x3eea <autorun+0x594>
    3ee8:	70 c0       	rjmp	.+224    	; 0x3fca <autorun+0x674>
		{
			fpwmtrig=1;
    3eea:	d0 92 35 06 	sts	0x0635, r13	; 0x800635 <fpwmtrig+0x1>
    3eee:	c0 92 34 06 	sts	0x0634, r12	; 0x800634 <fpwmtrig>
			spwmtrig=0;
    3ef2:	10 92 31 06 	sts	0x0631, r1	; 0x800631 <spwmtrig+0x1>
    3ef6:	10 92 30 06 	sts	0x0630, r1	; 0x800630 <spwmtrig>
			if(minhum>=I_RH)
    3efa:	20 91 af 0b 	lds	r18, 0x0BAF	; 0x800baf <I_RH>
    3efe:	30 e0       	ldi	r19, 0x00	; 0
    3f00:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <minhum>
    3f04:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <minhum+0x1>
    3f08:	82 17       	cp	r24, r18
    3f0a:	93 07       	cpc	r25, r19
    3f0c:	3c f1       	brlt	.+78     	; 0x3f5c <autorun+0x606>
			{
				fpwmon=(minhum-I_RH+5);
    3f0e:	82 1b       	sub	r24, r18
    3f10:	93 0b       	sbc	r25, r19
    3f12:	05 96       	adiw	r24, 0x05	; 5
				if(fpwmon>=20)fpwmon=20;
    3f14:	84 31       	cpi	r24, 0x14	; 20
    3f16:	91 05       	cpc	r25, r1
    3f18:	2c f4       	brge	.+10     	; 0x3f24 <autorun+0x5ce>
		{
			fpwmtrig=1;
			spwmtrig=0;
			if(minhum>=I_RH)
			{
				fpwmon=(minhum-I_RH+5);
    3f1a:	90 93 37 06 	sts	0x0637, r25	; 0x800637 <fpwmon+0x1>
    3f1e:	80 93 36 06 	sts	0x0636, r24	; 0x800636 <fpwmon>
    3f22:	04 c0       	rjmp	.+8      	; 0x3f2c <autorun+0x5d6>
				if(fpwmon>=20)fpwmon=20;
    3f24:	30 92 37 06 	sts	0x0637, r3	; 0x800637 <fpwmon+0x1>
    3f28:	20 92 36 06 	sts	0x0636, r2	; 0x800636 <fpwmon>
				cnt=(fpwmon-5)/3;
    3f2c:	80 91 36 06 	lds	r24, 0x0636	; 0x800636 <fpwmon>
    3f30:	90 91 37 06 	lds	r25, 0x0637	; 0x800637 <fpwmon+0x1>
    3f34:	05 97       	sbiw	r24, 0x05	; 5
    3f36:	63 e0       	ldi	r22, 0x03	; 3
    3f38:	70 e0       	ldi	r23, 0x00	; 0
    3f3a:	0e 94 1a 2f 	call	0x5e34	; 0x5e34 <__divmodhi4>
    3f3e:	8b 01       	movw	r16, r22
				bsel[num]=1;
				num++;
				if(num==10)num=0;
				break;
			}
			g_clearline(7);
    3f40:	87 e0       	ldi	r24, 0x07	; 7
    3f42:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
			g_xy(0,56);
    3f46:	68 e3       	ldi	r22, 0x38	; 56
    3f48:	70 e0       	ldi	r23, 0x00	; 0
    3f4a:	80 e0       	ldi	r24, 0x00	; 0
    3f4c:	90 e0       	ldi	r25, 0x00	; 0
    3f4e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("Fan Speed:");
    3f52:	83 e4       	ldi	r24, 0x43	; 67
    3f54:	94 e0       	ldi	r25, 0x04	; 4
    3f56:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
    3f5a:	37 c0       	rjmp	.+110    	; 0x3fca <autorun+0x674>
				if(fpwmon>=20)fpwmon=20;
				cnt=(fpwmon-5)/3;
			}
			else
			{
				fpwmon=0;
    3f5c:	10 92 37 06 	sts	0x0637, r1	; 0x800637 <fpwmon+0x1>
    3f60:	10 92 36 06 	sts	0x0636, r1	; 0x800636 <fpwmon>
				fpwmtrig=0;
				cnt=0;
				for(i=0; i<9; i++)
				{ote[num][i]=ot[i];}
    3f64:	80 91 2a 06 	lds	r24, 0x062A	; 0x80062a <num>
    3f68:	90 91 2b 06 	lds	r25, 0x062B	; 0x80062b <num+0x1>
    3f6c:	fc 01       	movw	r30, r24
    3f6e:	ee 0f       	add	r30, r30
    3f70:	ff 1f       	adc	r31, r31
    3f72:	ee 0f       	add	r30, r30
    3f74:	ff 1f       	adc	r31, r31
    3f76:	ee 0f       	add	r30, r30
    3f78:	ff 1f       	adc	r31, r31
    3f7a:	e8 0f       	add	r30, r24
    3f7c:	f9 1f       	adc	r31, r25
    3f7e:	ed 58       	subi	r30, 0x8D	; 141
    3f80:	f9 4f       	sbci	r31, 0xF9	; 249
    3f82:	d5 01       	movw	r26, r10
    3f84:	2d 91       	ld	r18, X+
    3f86:	5d 01       	movw	r10, r26
    3f88:	21 93       	st	Z+, r18
			else
			{
				fpwmon=0;
				fpwmtrig=0;
				cnt=0;
				for(i=0; i<9; i++)
    3f8a:	a8 15       	cp	r26, r8
    3f8c:	b9 05       	cpc	r27, r9
    3f8e:	c9 f7       	brne	.-14     	; 0x3f82 <autorun+0x62c>
				{ote[num][i]=ot[i];}
				bover[num]=1;
    3f90:	9c 01       	movw	r18, r24
    3f92:	22 0f       	add	r18, r18
    3f94:	33 1f       	adc	r19, r19
    3f96:	f9 01       	movw	r30, r18
    3f98:	ee 5f       	subi	r30, 0xFE	; 254
    3f9a:	f9 4f       	sbci	r31, 0xF9	; 249
    3f9c:	41 e0       	ldi	r20, 0x01	; 1
    3f9e:	50 e0       	ldi	r21, 0x00	; 0
    3fa0:	51 83       	std	Z+1, r21	; 0x01
    3fa2:	40 83       	st	Z, r20
				bsel[num]=1;
    3fa4:	f9 01       	movw	r30, r18
    3fa6:	ea 5e       	subi	r30, 0xEA	; 234
    3fa8:	f9 4f       	sbci	r31, 0xF9	; 249
    3faa:	51 83       	std	Z+1, r21	; 0x01
    3fac:	40 83       	st	Z, r20
				num++;
    3fae:	01 96       	adiw	r24, 0x01	; 1
				if(num==10)num=0;
    3fb0:	8a 30       	cpi	r24, 0x0A	; 10
    3fb2:	91 05       	cpc	r25, r1
    3fb4:	29 f0       	breq	.+10     	; 0x3fc0 <autorun+0x66a>
				cnt=0;
				for(i=0; i<9; i++)
				{ote[num][i]=ot[i];}
				bover[num]=1;
				bsel[num]=1;
				num++;
    3fb6:	90 93 2b 06 	sts	0x062B, r25	; 0x80062b <num+0x1>
    3fba:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <num>
    3fbe:	53 c0       	rjmp	.+166    	; 0x4066 <autorun+0x710>
				if(num==10)num=0;
    3fc0:	10 92 2b 06 	sts	0x062B, r1	; 0x80062b <num+0x1>
    3fc4:	10 92 2a 06 	sts	0x062A, r1	; 0x80062a <num>
    3fc8:	4e c0       	rjmp	.+156    	; 0x4066 <autorun+0x710>
			g_clearline(7);
			g_xy(0,56);
			prints("Fan Speed:");
		}
		
		if(cnt>=5)cnt=5;
    3fca:	05 30       	cpi	r16, 0x05	; 5
    3fcc:	11 05       	cpc	r17, r1
    3fce:	0c f0       	brlt	.+2      	; 0x3fd2 <autorun+0x67c>
    3fd0:	73 c0       	rjmp	.+230    	; 0x40b8 <autorun+0x762>
		
		if(sel!=1)
    3fd2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    3fd6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    3fda:	01 97       	sbiw	r24, 0x01	; 1
    3fdc:	09 f4       	brne	.+2      	; 0x3fe0 <autorun+0x68a>
    3fde:	4e cd       	rjmp	.-1380   	; 0x3a7c <autorun+0x126>
		{
			PORTE&=0x00;
    3fe0:	83 b1       	in	r24, 0x03	; 3
    3fe2:	13 b8       	out	0x03, r1	; 3
			if(cnt>=1){PORTE|=0x01;}
    3fe4:	10 16       	cp	r1, r16
    3fe6:	11 06       	cpc	r1, r17
    3fe8:	0c f4       	brge	.+2      	; 0x3fec <autorun+0x696>
    3fea:	18 9a       	sbi	0x03, 0	; 3
			if(cnt>=2){PORTE|=0x03;}
    3fec:	02 30       	cpi	r16, 0x02	; 2
    3fee:	11 05       	cpc	r17, r1
    3ff0:	1c f0       	brlt	.+6      	; 0x3ff8 <autorun+0x6a2>
    3ff2:	83 b1       	in	r24, 0x03	; 3
    3ff4:	83 60       	ori	r24, 0x03	; 3
    3ff6:	83 b9       	out	0x03, r24	; 3
			if(cnt>=3){PORTE|=0x07;}
    3ff8:	03 30       	cpi	r16, 0x03	; 3
    3ffa:	11 05       	cpc	r17, r1
    3ffc:	1c f0       	brlt	.+6      	; 0x4004 <autorun+0x6ae>
    3ffe:	83 b1       	in	r24, 0x03	; 3
    4000:	87 60       	ori	r24, 0x07	; 7
    4002:	83 b9       	out	0x03, r24	; 3
			if(cnt>=4){PORTE|=0x0f;}
    4004:	04 30       	cpi	r16, 0x04	; 4
    4006:	11 05       	cpc	r17, r1
    4008:	1c f0       	brlt	.+6      	; 0x4010 <autorun+0x6ba>
    400a:	83 b1       	in	r24, 0x03	; 3
    400c:	8f 60       	ori	r24, 0x0F	; 15
    400e:	83 b9       	out	0x03, r24	; 3
			if(cnt>=5){PORTE|=0x1f;}
    4010:	05 30       	cpi	r16, 0x05	; 5
    4012:	11 05       	cpc	r17, r1
    4014:	1c f0       	brlt	.+6      	; 0x401c <autorun+0x6c6>
    4016:	83 b1       	in	r24, 0x03	; 3
    4018:	8f 61       	ori	r24, 0x1F	; 31
    401a:	83 b9       	out	0x03, r24	; 3
			
			
			for(i=0; i<cnt; i++)
    401c:	10 16       	cp	r1, r16
    401e:	11 06       	cpc	r1, r17
    4020:	dc f4       	brge	.+54     	; 0x4058 <autorun+0x702>
    4022:	50 9e       	mul	r5, r16
    4024:	70 01       	movw	r14, r0
    4026:	51 9e       	mul	r5, r17
    4028:	f0 0c       	add	r15, r0
    402a:	11 24       	eor	r1, r1
    402c:	bf e3       	ldi	r27, 0x3F	; 63
    402e:	eb 0e       	add	r14, r27
    4030:	f1 1c       	adc	r15, r1
    4032:	0f 2e       	mov	r0, r31
    4034:	ff e3       	ldi	r31, 0x3F	; 63
    4036:	6f 2e       	mov	r6, r31
    4038:	71 2c       	mov	r7, r1
    403a:	f0 2d       	mov	r31, r0
			{
				g_xy(63+(13*i),56);
    403c:	68 e3       	ldi	r22, 0x38	; 56
    403e:	70 e0       	ldi	r23, 0x00	; 0
    4040:	c3 01       	movw	r24, r6
    4042:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
				printc('<');
    4046:	8c e3       	ldi	r24, 0x3C	; 60
    4048:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
    404c:	2d e0       	ldi	r18, 0x0D	; 13
    404e:	62 0e       	add	r6, r18
    4050:	71 1c       	adc	r7, r1
			if(cnt>=3){PORTE|=0x07;}
			if(cnt>=4){PORTE|=0x0f;}
			if(cnt>=5){PORTE|=0x1f;}
			
			
			for(i=0; i<cnt; i++)
    4052:	6e 14       	cp	r6, r14
    4054:	7f 04       	cpc	r7, r15
    4056:	91 f7       	brne	.-28     	; 0x403c <autorun+0x6e6>
			{
				g_xy(63+(13*i),56);
				printc('<');
			}
			g_render();
    4058:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
    405c:	0f cd       	rjmp	.-1506   	; 0x3a7c <autorun+0x126>
				cnt=0;
				for(i=0; i<9; i++)
				{ote[num][i]=ot[i];}
				bover[num]=1;
				bsel[num]=0;
				num++;
    405e:	90 93 2b 06 	sts	0x062B, r25	; 0x80062b <num+0x1>
    4062:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <num>
				printc('<');
			}
			g_render();
		}
	}
	autotrig=0;
    4066:	10 92 58 06 	sts	0x0658, r1	; 0x800658 <autotrig+0x1>
    406a:	10 92 57 06 	sts	0x0657, r1	; 0x800657 <autotrig>
	fpwmtrig=0;
    406e:	10 92 35 06 	sts	0x0635, r1	; 0x800635 <fpwmtrig+0x1>
    4072:	10 92 34 06 	sts	0x0634, r1	; 0x800634 <fpwmtrig>
	spwmtrig=0;
    4076:	10 92 31 06 	sts	0x0631, r1	; 0x800631 <spwmtrig+0x1>
    407a:	10 92 30 06 	sts	0x0630, r1	; 0x800630 <spwmtrig>
	
	PORTB&=~(1<<fan);
    407e:	c7 98       	cbi	0x18, 7	; 24
	PORTB&=~(1<<servo);
    4080:	c6 98       	cbi	0x18, 6	; 24
	PORTE&=0x00;
    4082:	83 b1       	in	r24, 0x03	; 3
    4084:	13 b8       	out	0x03, r1	; 3
	sel=10;
    4086:	8a e0       	ldi	r24, 0x0A	; 10
    4088:	90 e0       	ldi	r25, 0x00	; 0
    408a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <sel+0x1>
    408e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <sel>
}
    4092:	1b c0       	rjmp	.+54     	; 0x40ca <autorun+0x774>
				g_render();

				if(sel==1&&cnt==0)
				{if(lcnt>=1000){lcnt=0; lc++;}}
				
				if(sel==1&&cnt==1)
    4094:	01 30       	cpi	r16, 0x01	; 1
    4096:	11 05       	cpc	r17, r1
    4098:	09 f4       	brne	.+2      	; 0x409c <autorun+0x746>
    409a:	22 cd       	rjmp	.-1468   	; 0x3ae0 <autorun+0x18a>
    409c:	2e cd       	rjmp	.-1444   	; 0x3afa <autorun+0x1a4>
				{if(lcnt>=600){lcnt=0; lc++;}}
				
				if(sel==1&&cnt==3)
				{if(lcnt>=400){lcnt=0; lc++;}}
				
				if(sel==1&&cnt==4)
    409e:	01 97       	sbiw	r24, 0x01	; 1
    40a0:	09 f0       	breq	.+2      	; 0x40a4 <autorun+0x74e>
    40a2:	7f cd       	rjmp	.-1282   	; 0x3ba2 <autorun+0x24c>
    40a4:	5d cd       	rjmp	.-1350   	; 0x3b60 <autorun+0x20a>
				{if(lcnt>=200){lcnt=0; lc++;}}
				
				if(sel==1)
    40a6:	01 97       	sbiw	r24, 0x01	; 1
    40a8:	09 f4       	brne	.+2      	; 0x40ac <autorun+0x756>
    40aa:	5a cd       	rjmp	.-1356   	; 0x3b60 <autorun+0x20a>
    40ac:	7a cd       	rjmp	.-1292   	; 0x3ba2 <autorun+0x24c>
		
		if(cnt>=5)cnt=5;
		
		if(sel!=1)
		{
			PORTE&=0x00;
    40ae:	83 b1       	in	r24, 0x03	; 3
    40b0:	13 b8       	out	0x03, r1	; 3
			g_clearline(7);
			g_xy(0,56);
			prints("Fan Speed:");
		}
		
		if(cnt>=5)cnt=5;
    40b2:	05 e0       	ldi	r16, 0x05	; 5
    40b4:	14 2d       	mov	r17, r4
    40b6:	99 cf       	rjmp	.-206    	; 0x3fea <autorun+0x694>
		
		if(sel!=1)
    40b8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    40bc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    40c0:	01 97       	sbiw	r24, 0x01	; 1
    40c2:	a9 f7       	brne	.-22     	; 0x40ae <autorun+0x758>
			g_clearline(7);
			g_xy(0,56);
			prints("Fan Speed:");
		}
		
		if(cnt>=5)cnt=5;
    40c4:	05 e0       	ldi	r16, 0x05	; 5
    40c6:	14 2d       	mov	r17, r4
    40c8:	d9 cc       	rjmp	.-1614   	; 0x3a7c <autorun+0x126>
	
	PORTB&=~(1<<fan);
	PORTB&=~(1<<servo);
	PORTE&=0x00;
	sel=10;
}
    40ca:	df 91       	pop	r29
    40cc:	cf 91       	pop	r28
    40ce:	1f 91       	pop	r17
    40d0:	0f 91       	pop	r16
    40d2:	ff 90       	pop	r15
    40d4:	ef 90       	pop	r14
    40d6:	df 90       	pop	r13
    40d8:	cf 90       	pop	r12
    40da:	bf 90       	pop	r11
    40dc:	af 90       	pop	r10
    40de:	9f 90       	pop	r9
    40e0:	8f 90       	pop	r8
    40e2:	7f 90       	pop	r7
    40e4:	6f 90       	pop	r6
    40e6:	5f 90       	pop	r5
    40e8:	4f 90       	pop	r4
    40ea:	3f 90       	pop	r3
    40ec:	2f 90       	pop	r2
    40ee:	08 95       	ret

000040f0 <overout>:
void overout()
{
	outs++;
    40f0:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    40f4:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    40f8:	01 96       	adiw	r24, 0x01	; 1
    40fa:	90 93 5f 06 	sts	0x065F, r25	; 0x80065f <outs+0x1>
    40fe:	80 93 5e 06 	sts	0x065E, r24	; 0x80065e <outs>
	if(outs<=5)
    4102:	06 97       	sbiw	r24, 0x06	; 6
    4104:	b4 f4       	brge	.+44     	; 0x4132 <overout+0x42>
	{
		g_xy(dd,56);
    4106:	68 e3       	ldi	r22, 0x38	; 56
    4108:	70 e0       	ldi	r23, 0x00	; 0
    410a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <dd>
    410e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <dd+0x1>
    4112:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		printc('>');
    4116:	8e e3       	ldi	r24, 0x3E	; 62
    4118:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		g_render();
    411c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		dd+=20;
    4120:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <dd>
    4124:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <dd+0x1>
    4128:	44 96       	adiw	r24, 0x14	; 20
    412a:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <dd+0x1>
    412e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <dd>
	}
	if(outs==5){dd=21;}
    4132:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    4136:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    413a:	85 30       	cpi	r24, 0x05	; 5
    413c:	91 05       	cpc	r25, r1
    413e:	39 f4       	brne	.+14     	; 0x414e <overout+0x5e>
    4140:	85 e1       	ldi	r24, 0x15	; 21
    4142:	90 e0       	ldi	r25, 0x00	; 0
    4144:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <dd+0x1>
    4148:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <dd>
    414c:	56 c0       	rjmp	.+172    	; 0x41fa <overout+0x10a>
	if(outs>=6&&outs<=10)
    414e:	06 97       	sbiw	r24, 0x06	; 6
    4150:	05 97       	sbiw	r24, 0x05	; 5
    4152:	08 f0       	brcs	.+2      	; 0x4156 <overout+0x66>
    4154:	48 c0       	rjmp	.+144    	; 0x41e6 <overout+0xf6>
	{
		g_xy(dd,56);
    4156:	68 e3       	ldi	r22, 0x38	; 56
    4158:	70 e0       	ldi	r23, 0x00	; 0
    415a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <dd>
    415e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <dd+0x1>
    4162:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		printc('<');
    4166:	8c e3       	ldi	r24, 0x3C	; 60
    4168:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		g_render();
    416c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		dd+=20;
    4170:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <dd>
    4174:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <dd+0x1>
    4178:	44 96       	adiw	r24, 0x14	; 20
    417a:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <dd+0x1>
    417e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <dd>
		PORTE|=(1<<buz);
    4182:	1e 9a       	sbi	0x03, 6	; 3
		if(outs-5>=1){PORTE|=0x01;}
    4184:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    4188:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    418c:	05 97       	sbiw	r24, 0x05	; 5
    418e:	18 16       	cp	r1, r24
    4190:	19 06       	cpc	r1, r25
    4192:	0c f4       	brge	.+2      	; 0x4196 <overout+0xa6>
    4194:	18 9a       	sbi	0x03, 0	; 3
		if(outs-5>=2){PORTE|=0x03;}
    4196:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    419a:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    419e:	05 97       	sbiw	r24, 0x05	; 5
    41a0:	02 97       	sbiw	r24, 0x02	; 2
    41a2:	1c f0       	brlt	.+6      	; 0x41aa <overout+0xba>
    41a4:	83 b1       	in	r24, 0x03	; 3
    41a6:	83 60       	ori	r24, 0x03	; 3
    41a8:	83 b9       	out	0x03, r24	; 3
		if(outs-5>=3){PORTE|=0x07;}
    41aa:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    41ae:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    41b2:	05 97       	sbiw	r24, 0x05	; 5
    41b4:	03 97       	sbiw	r24, 0x03	; 3
    41b6:	1c f0       	brlt	.+6      	; 0x41be <overout+0xce>
    41b8:	83 b1       	in	r24, 0x03	; 3
    41ba:	87 60       	ori	r24, 0x07	; 7
    41bc:	83 b9       	out	0x03, r24	; 3
		if(outs-5>=4){PORTE|=0x0f;}
    41be:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    41c2:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    41c6:	05 97       	sbiw	r24, 0x05	; 5
    41c8:	04 97       	sbiw	r24, 0x04	; 4
    41ca:	1c f0       	brlt	.+6      	; 0x41d2 <overout+0xe2>
    41cc:	83 b1       	in	r24, 0x03	; 3
    41ce:	8f 60       	ori	r24, 0x0F	; 15
    41d0:	83 b9       	out	0x03, r24	; 3
		if(outs-5>=5){PORTE|=0x1f;}
    41d2:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    41d6:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    41da:	05 97       	sbiw	r24, 0x05	; 5
    41dc:	05 97       	sbiw	r24, 0x05	; 5
    41de:	1c f0       	brlt	.+6      	; 0x41e6 <overout+0xf6>
    41e0:	83 b1       	in	r24, 0x03	; 3
    41e2:	8f 61       	ori	r24, 0x1F	; 31
    41e4:	83 b9       	out	0x03, r24	; 3
		
	}

	if(outs==7||outs==9)
    41e6:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    41ea:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    41ee:	87 30       	cpi	r24, 0x07	; 7
    41f0:	91 05       	cpc	r25, r1
    41f2:	11 f0       	breq	.+4      	; 0x41f8 <overout+0x108>
    41f4:	09 97       	sbiw	r24, 0x09	; 9
    41f6:	09 f4       	brne	.+2      	; 0x41fa <overout+0x10a>
	{
		PORTE&=~(1<<buz);
    41f8:	1e 98       	cbi	0x03, 6	; 3
	}
	
	if(outs==11){PORTE&=~(1<<buz); autorun();}
    41fa:	80 91 5e 06 	lds	r24, 0x065E	; 0x80065e <outs>
    41fe:	90 91 5f 06 	lds	r25, 0x065F	; 0x80065f <outs+0x1>
    4202:	0b 97       	sbiw	r24, 0x0b	; 11
    4204:	11 f4       	brne	.+4      	; 0x420a <overout+0x11a>
    4206:	1e 98       	cbi	0x03, 6	; 3
    4208:	a6 cb       	rjmp	.-2228   	; 0x3956 <autorun>
    420a:	08 95       	ret

0000420c <over>:
}
int over(int c)
{
    420c:	cf 92       	push	r12
    420e:	df 92       	push	r13
    4210:	ef 92       	push	r14
    4212:	ff 92       	push	r15
    4214:	0f 93       	push	r16
    4216:	1f 93       	push	r17
    4218:	cf 93       	push	r28
    421a:	df 93       	push	r29
    421c:	ec 01       	movw	r28, r24
	int i=0;
	
	dd=21;
    421e:	85 e1       	ldi	r24, 0x15	; 21
    4220:	90 e0       	ldi	r25, 0x00	; 0
    4222:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <dd+0x1>
    4226:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <dd>
	outs=0;
    422a:	10 92 5f 06 	sts	0x065F, r1	; 0x80065f <outs+0x1>
    422e:	10 92 5e 06 	sts	0x065E, r1	; 0x80065e <outs>
	autotrig=1;
    4232:	81 e0       	ldi	r24, 0x01	; 1
    4234:	90 e0       	ldi	r25, 0x00	; 0
    4236:	90 93 58 06 	sts	0x0658, r25	; 0x800658 <autotrig+0x1>
    423a:	80 93 57 06 	sts	0x0657, r24	; 0x800657 <autotrig>
	g_clear();
    423e:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
	
	g_xy(13,8);
    4242:	68 e0       	ldi	r22, 0x08	; 8
    4244:	70 e0       	ldi	r23, 0x00	; 0
    4246:	8d e0       	ldi	r24, 0x0D	; 13
    4248:	90 e0       	ldi	r25, 0x00	; 0
    424a:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("Error:");
    424e:	8e e4       	ldi	r24, 0x4E	; 78
    4250:	94 e0       	ldi	r25, 0x04	; 4
    4252:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	if(c==0||c==1){prints("Temperature");}
    4256:	c2 30       	cpi	r28, 0x02	; 2
    4258:	d1 05       	cpc	r29, r1
    425a:	20 f4       	brcc	.+8      	; 0x4264 <over+0x58>
    425c:	85 e5       	ldi	r24, 0x55	; 85
    425e:	94 e0       	ldi	r25, 0x04	; 4
    4260:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	if(c==2||c==3){prints("  Humudity ");}
    4264:	ce 01       	movw	r24, r28
    4266:	02 97       	sbiw	r24, 0x02	; 2
    4268:	02 97       	sbiw	r24, 0x02	; 2
    426a:	20 f4       	brcc	.+8      	; 0x4274 <over+0x68>
    426c:	81 e6       	ldi	r24, 0x61	; 97
    426e:	94 e0       	ldi	r25, 0x04	; 4
    4270:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>

	g_xy(13,24);
    4274:	68 e1       	ldi	r22, 0x18	; 24
    4276:	70 e0       	ldi	r23, 0x00	; 0
    4278:	8d e0       	ldi	r24, 0x0D	; 13
    427a:	90 e0       	ldi	r25, 0x00	; 0
    427c:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("Code:");
    4280:	83 ea       	ldi	r24, 0xA3	; 163
    4282:	93 e0       	ldi	r25, 0x03	; 3
    4284:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	prints(err_code[c]);
    4288:	2d e0       	ldi	r18, 0x0D	; 13
    428a:	2c 9f       	mul	r18, r28
    428c:	c0 01       	movw	r24, r0
    428e:	2d 9f       	mul	r18, r29
    4290:	90 0d       	add	r25, r0
    4292:	11 24       	eor	r1, r1
    4294:	83 5b       	subi	r24, 0xB3	; 179
    4296:	94 4f       	sbci	r25, 0xF4	; 244
    4298:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	
	g_xy(4,40);
    429c:	68 e2       	ldi	r22, 0x28	; 40
    429e:	70 e0       	ldi	r23, 0x00	; 0
    42a0:	84 e0       	ldi	r24, 0x04	; 4
    42a2:	90 e0       	ldi	r25, 0x00	; 0
    42a4:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
	prints("Require Proper Work.");
    42a8:	8d e6       	ldi	r24, 0x6D	; 109
    42aa:	94 e0       	ldi	r25, 0x04	; 4
    42ac:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
	g_render();
    42b0:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
				
				nowtime();
				if(c==0&&maxtem>I_Temp){sel=10;}
				if(c==1&&mintem<I_Temp){sel=10; }
				if(c==2&&maxhum>I_RH){sel=10; }
				if(c==3&&minhum<I_RH){sel=10; }
    42b4:	0a e0       	ldi	r16, 0x0A	; 10
    42b6:	10 e0       	ldi	r17, 0x00	; 0
			overout();
			if(sel==10){g_clear(); g_render(); break;}
		}
		if(sel==10){g_clear(); g_render(); break;}
		dht();
		det=1;
    42b8:	cc 24       	eor	r12, r12
    42ba:	c3 94       	inc	r12
    42bc:	d1 2c       	mov	r13, r1
	}
	
	if(outs==11){PORTE&=~(1<<buz); autorun();}
}
int over(int c)
{
    42be:	0f 2e       	mov	r0, r31
    42c0:	f3 e0       	ldi	r31, 0x03	; 3
    42c2:	ef 2e       	mov	r14, r31
    42c4:	f1 2c       	mov	r15, r1
    42c6:	f0 2d       	mov	r31, r0
	
	while(1)
	{
		for(i=0; i<3; i++)
		{
			for(t=0; t<500;)
    42c8:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    42cc:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
			{
				
				nowtime();
    42d0:	0e 94 92 15 	call	0x2b24	; 0x2b24 <nowtime>
				if(c==0&&maxtem>I_Temp){sel=10;}
    42d4:	20 97       	sbiw	r28, 0x00	; 0
    42d6:	79 f4       	brne	.+30     	; 0x42f6 <over+0xea>
    42d8:	80 91 ae 0b 	lds	r24, 0x0BAE	; 0x800bae <I_Temp>
    42dc:	90 e0       	ldi	r25, 0x00	; 0
    42de:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <maxtem>
    42e2:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <maxtem+0x1>
    42e6:	82 17       	cp	r24, r18
    42e8:	93 07       	cpc	r25, r19
    42ea:	4c f5       	brge	.+82     	; 0x433e <over+0x132>
    42ec:	10 93 07 01 	sts	0x0107, r17	; 0x800107 <sel+0x1>
    42f0:	00 93 06 01 	sts	0x0106, r16	; 0x800106 <sel>
    42f4:	24 c0       	rjmp	.+72     	; 0x433e <over+0x132>
				if(c==1&&mintem<I_Temp){sel=10; }
    42f6:	c1 30       	cpi	r28, 0x01	; 1
    42f8:	d1 05       	cpc	r29, r1
    42fa:	79 f4       	brne	.+30     	; 0x431a <over+0x10e>
    42fc:	80 91 ae 0b 	lds	r24, 0x0BAE	; 0x800bae <I_Temp>
    4300:	90 e0       	ldi	r25, 0x00	; 0
    4302:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <mintem>
    4306:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <mintem+0x1>
    430a:	28 17       	cp	r18, r24
    430c:	39 07       	cpc	r19, r25
    430e:	44 f5       	brge	.+80     	; 0x4360 <over+0x154>
    4310:	10 93 07 01 	sts	0x0107, r17	; 0x800107 <sel+0x1>
    4314:	00 93 06 01 	sts	0x0106, r16	; 0x800106 <sel>
    4318:	23 c0       	rjmp	.+70     	; 0x4360 <over+0x154>
				if(c==2&&maxhum>I_RH){sel=10; }
    431a:	c2 30       	cpi	r28, 0x02	; 2
    431c:	d1 05       	cpc	r29, r1
    431e:	79 f4       	brne	.+30     	; 0x433e <over+0x132>
    4320:	80 91 af 0b 	lds	r24, 0x0BAF	; 0x800baf <I_RH>
    4324:	90 e0       	ldi	r25, 0x00	; 0
    4326:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <maxhum>
    432a:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <maxhum+0x1>
    432e:	82 17       	cp	r24, r18
    4330:	93 07       	cpc	r25, r19
    4332:	b4 f4       	brge	.+44     	; 0x4360 <over+0x154>
    4334:	10 93 07 01 	sts	0x0107, r17	; 0x800107 <sel+0x1>
    4338:	00 93 06 01 	sts	0x0106, r16	; 0x800106 <sel>
    433c:	11 c0       	rjmp	.+34     	; 0x4360 <over+0x154>
				if(c==3&&minhum<I_RH){sel=10; }
    433e:	c3 30       	cpi	r28, 0x03	; 3
    4340:	d1 05       	cpc	r29, r1
    4342:	71 f4       	brne	.+28     	; 0x4360 <over+0x154>
    4344:	80 91 af 0b 	lds	r24, 0x0BAF	; 0x800baf <I_RH>
    4348:	90 e0       	ldi	r25, 0x00	; 0
    434a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <minhum>
    434e:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <minhum+0x1>
    4352:	28 17       	cp	r18, r24
    4354:	39 07       	cpc	r19, r25
    4356:	24 f4       	brge	.+8      	; 0x4360 <over+0x154>
    4358:	10 93 07 01 	sts	0x0107, r17	; 0x800107 <sel+0x1>
    435c:	00 93 06 01 	sts	0x0106, r16	; 0x800106 <sel>
				
				g_xy(0,0);
    4360:	60 e0       	ldi	r22, 0x00	; 0
    4362:	70 e0       	ldi	r23, 0x00	; 0
    4364:	80 e0       	ldi	r24, 0x00	; 0
    4366:	90 e0       	ldi	r25, 0x00	; 0
    4368:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
				g_clearline(0);
    436c:	80 e0       	ldi	r24, 0x00	; 0
    436e:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
				g_render();
    4372:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
	
	while(1)
	{
		for(i=0; i<3; i++)
		{
			for(t=0; t<500;)
    4376:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    437a:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    437e:	84 3f       	cpi	r24, 0xF4	; 244
    4380:	91 40       	sbci	r25, 0x01	; 1
    4382:	0c f4       	brge	.+2      	; 0x4386 <over+0x17a>
    4384:	a5 cf       	rjmp	.-182    	; 0x42d0 <over+0xc4>
				g_xy(0,0);
				g_clearline(0);
				g_render();
				
			}
			overout();
    4386:	b4 de       	rcall	.-664    	; 0x40f0 <overout>
			if(sel==10){g_clear(); g_render(); break;}
    4388:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    438c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    4390:	0a 97       	sbiw	r24, 0x0a	; 10
    4392:	59 f4       	brne	.+22     	; 0x43aa <over+0x19e>
    4394:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
    4398:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		}
		if(sel==10){g_clear(); g_render(); break;}
    439c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    43a0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    43a4:	0a 97       	sbiw	r24, 0x0a	; 10
    43a6:	31 f4       	brne	.+12     	; 0x43b4 <over+0x1a8>
    43a8:	0b c0       	rjmp	.+22     	; 0x43c0 <over+0x1b4>
    43aa:	81 e0       	ldi	r24, 0x01	; 1
    43ac:	e8 1a       	sub	r14, r24
    43ae:	f1 08       	sbc	r15, r1
	prints("Require Proper Work.");
	g_render();
	
	while(1)
	{
		for(i=0; i<3; i++)
    43b0:	09 f0       	breq	.+2      	; 0x43b4 <over+0x1a8>
			}
			overout();
			if(sel==10){g_clear(); g_render(); break;}
		}
		if(sel==10){g_clear(); g_render(); break;}
		dht();
    43b2:	8a cf       	rjmp	.-236    	; 0x42c8 <over+0xbc>
    43b4:	46 d8       	rcall	.-3956   	; 0x3442 <dht>
		det=1;
    43b6:	d0 92 50 06 	sts	0x0650, r13	; 0x800650 <det+0x1>
    43ba:	c0 92 4f 06 	sts	0x064F, r12	; 0x80064f <det>
	}
    43be:	7f cf       	rjmp	.-258    	; 0x42be <over+0xb2>
				
			}
			overout();
			if(sel==10){g_clear(); g_render(); break;}
		}
		if(sel==10){g_clear(); g_render(); break;}
    43c0:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
    43c4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		dht();
		det=1;
	}
}
    43c8:	80 e0       	ldi	r24, 0x00	; 0
    43ca:	90 e0       	ldi	r25, 0x00	; 0
    43cc:	df 91       	pop	r29
    43ce:	cf 91       	pop	r28
    43d0:	1f 91       	pop	r17
    43d2:	0f 91       	pop	r16
    43d4:	ff 90       	pop	r15
    43d6:	ef 90       	pop	r14
    43d8:	df 90       	pop	r13
    43da:	cf 90       	pop	r12
    43dc:	08 95       	ret

000043de <detect>:
void detect()
{
	if(maxtem<=I_Temp){sel=0;}
    43de:	20 91 ae 0b 	lds	r18, 0x0BAE	; 0x800bae <I_Temp>
    43e2:	30 e0       	ldi	r19, 0x00	; 0
    43e4:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <maxtem>
    43e8:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <maxtem+0x1>
    43ec:	28 17       	cp	r18, r24
    43ee:	39 07       	cpc	r19, r25
    43f0:	3c f0       	brlt	.+14     	; 0x4400 <detect+0x22>
    43f2:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <sel+0x1>
    43f6:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <sel>
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
    43fa:	80 e0       	ldi	r24, 0x00	; 0
    43fc:	90 e0       	ldi	r25, 0x00	; 0
    43fe:	08 c0       	rjmp	.+16     	; 0x4410 <detect+0x32>
    4400:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    4404:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    4408:	8a 30       	cpi	r24, 0x0A	; 10
    440a:	91 05       	cpc	r25, r1
    440c:	09 f4       	brne	.+2      	; 0x4410 <detect+0x32>
    440e:	58 c0       	rjmp	.+176    	; 0x44c0 <detect+0xe2>
    4410:	fd de       	rcall	.-518    	; 0x420c <over>
    4412:	8f eb       	ldi	r24, 0xBF	; 191
    4414:	83 b9       	out	0x03, r24	; 3
	if(mintem>I_Temp){sel=1;}
    4416:	80 91 ae 0b 	lds	r24, 0x0BAE	; 0x800bae <I_Temp>
    441a:	90 e0       	ldi	r25, 0x00	; 0
    441c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <mintem>
    4420:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <mintem+0x1>
    4424:	82 17       	cp	r24, r18
    4426:	93 07       	cpc	r25, r19
    4428:	3c f4       	brge	.+14     	; 0x4438 <detect+0x5a>
    442a:	81 e0       	ldi	r24, 0x01	; 1
    442c:	90 e0       	ldi	r25, 0x00	; 0
    442e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <sel+0x1>
    4432:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <sel>
    4436:	08 c0       	rjmp	.+16     	; 0x4448 <detect+0x6a>
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
    4438:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    443c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    4440:	8a 30       	cpi	r24, 0x0A	; 10
    4442:	91 05       	cpc	r25, r1
    4444:	09 f4       	brne	.+2      	; 0x4448 <detect+0x6a>
    4446:	4d c0       	rjmp	.+154    	; 0x44e2 <detect+0x104>
    4448:	e1 de       	rcall	.-574    	; 0x420c <over>
    444a:	8f eb       	ldi	r24, 0xBF	; 191
    444c:	83 b9       	out	0x03, r24	; 3
	
	if(maxhum<=I_RH){sel=2;}
    444e:	20 91 af 0b 	lds	r18, 0x0BAF	; 0x800baf <I_RH>
    4452:	30 e0       	ldi	r19, 0x00	; 0
    4454:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <maxhum>
    4458:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <maxhum+0x1>
    445c:	28 17       	cp	r18, r24
    445e:	39 07       	cpc	r19, r25
    4460:	3c f0       	brlt	.+14     	; 0x4470 <detect+0x92>
    4462:	82 e0       	ldi	r24, 0x02	; 2
    4464:	90 e0       	ldi	r25, 0x00	; 0
    4466:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <sel+0x1>
    446a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <sel>
    446e:	07 c0       	rjmp	.+14     	; 0x447e <detect+0xa0>
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
    4470:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    4474:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    4478:	8a 30       	cpi	r24, 0x0A	; 10
    447a:	91 05       	cpc	r25, r1
    447c:	51 f1       	breq	.+84     	; 0x44d2 <detect+0xf4>
    447e:	c6 de       	rcall	.-628    	; 0x420c <over>
    4480:	8f eb       	ldi	r24, 0xBF	; 191
    4482:	83 b9       	out	0x03, r24	; 3
	if(minhum>=I_RH){sel=3;}
    4484:	80 91 af 0b 	lds	r24, 0x0BAF	; 0x800baf <I_RH>
    4488:	90 e0       	ldi	r25, 0x00	; 0
    448a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <minhum>
    448e:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <minhum+0x1>
    4492:	28 17       	cp	r18, r24
    4494:	39 07       	cpc	r19, r25
    4496:	3c f0       	brlt	.+14     	; 0x44a6 <detect+0xc8>
    4498:	83 e0       	ldi	r24, 0x03	; 3
    449a:	90 e0       	ldi	r25, 0x00	; 0
    449c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <sel+0x1>
    44a0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <sel>
    44a4:	07 c0       	rjmp	.+14     	; 0x44b4 <detect+0xd6>
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
    44a6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <sel>
    44aa:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <sel+0x1>
    44ae:	8a 30       	cpi	r24, 0x0A	; 10
    44b0:	91 05       	cpc	r25, r1
    44b2:	19 f0       	breq	.+6      	; 0x44ba <detect+0xdc>
    44b4:	ab de       	rcall	.-682    	; 0x420c <over>
    44b6:	8f eb       	ldi	r24, 0xBF	; 191
    44b8:	83 b9       	out	0x03, r24	; 3

	PORTE&=0x00;
    44ba:	83 b1       	in	r24, 0x03	; 3
    44bc:	13 b8       	out	0x03, r1	; 3
}
    44be:	08 95       	ret
}
void detect()
{
	if(maxtem<=I_Temp){sel=0;}
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
	if(mintem>I_Temp){sel=1;}
    44c0:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <mintem>
    44c4:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <mintem+0x1>
    44c8:	28 17       	cp	r18, r24
    44ca:	39 07       	cpc	r19, r25
    44cc:	0c f4       	brge	.+2      	; 0x44d0 <detect+0xf2>
    44ce:	ad cf       	rjmp	.-166    	; 0x442a <detect+0x4c>
    44d0:	08 c0       	rjmp	.+16     	; 0x44e2 <detect+0x104>
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
	
	if(maxhum<=I_RH){sel=2;}
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
	if(minhum>=I_RH){sel=3;}
    44d2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <minhum>
    44d6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <minhum+0x1>
    44da:	82 17       	cp	r24, r18
    44dc:	93 07       	cpc	r25, r19
    44de:	e4 f6       	brge	.-72     	; 0x4498 <detect+0xba>
    44e0:	ec cf       	rjmp	.-40     	; 0x44ba <detect+0xdc>
	if(maxtem<=I_Temp){sel=0;}
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
	if(mintem>I_Temp){sel=1;}
	if(sel!=10){over(sel); PORTE=~(1<<buz);}
	
	if(maxhum<=I_RH){sel=2;}
    44e2:	20 91 af 0b 	lds	r18, 0x0BAF	; 0x800baf <I_RH>
    44e6:	30 e0       	ldi	r19, 0x00	; 0
    44e8:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <maxhum>
    44ec:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <maxhum+0x1>
    44f0:	28 17       	cp	r18, r24
    44f2:	39 07       	cpc	r19, r25
    44f4:	0c f0       	brlt	.+2      	; 0x44f8 <detect+0x11a>
    44f6:	b5 cf       	rjmp	.-150    	; 0x4462 <detect+0x84>
    44f8:	ec cf       	rjmp	.-40     	; 0x44d2 <detect+0xf4>

000044fa <thprint>:
	if(sel!=10){over(sel); PORTE=~(1<<buz);}

	PORTE&=0x00;
}
void thprint()
{
    44fa:	0f 93       	push	r16
    44fc:	1f 93       	push	r17
    44fe:	cf 93       	push	r28
    4500:	df 93       	push	r29
	print("\n\rT/H Graph");
    4502:	82 e8       	ldi	r24, 0x82	; 130
    4504:	94 e0       	ldi	r25, 0x04	; 4
    4506:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\rT/div: 1.5Sec/");
    450a:	8e e8       	ldi	r24, 0x8E	; 142
    450c:	94 e0       	ldi	r25, 0x04	; 4
    450e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	sprintf(out,"%d",tdiv);
    4512:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <tdiv+0x1>
    4516:	8f 93       	push	r24
    4518:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <tdiv>
    451c:	8f 93       	push	r24
    451e:	0e e2       	ldi	r16, 0x2E	; 46
    4520:	13 e0       	ldi	r17, 0x03	; 3
    4522:	1f 93       	push	r17
    4524:	0f 93       	push	r16
    4526:	c9 ed       	ldi	r28, 0xD9	; 217
    4528:	d6 e0       	ldi	r29, 0x06	; 6
    452a:	df 93       	push	r29
    452c:	cf 93       	push	r28
    452e:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	print(out);
    4532:	ce 01       	movw	r24, r28
    4534:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("Pixel");
    4538:	80 ed       	ldi	r24, 0xD0	; 208
    453a:	92 e0       	ldi	r25, 0x02	; 2
    453c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\rmaxtem=");
    4540:	8f e9       	ldi	r24, 0x9F	; 159
    4542:	94 e0       	ldi	r25, 0x04	; 4
    4544:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	sprintf(out,"%d",maxtem);
    4548:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <maxtem+0x1>
    454c:	8f 93       	push	r24
    454e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <maxtem>
    4552:	8f 93       	push	r24
    4554:	1f 93       	push	r17
    4556:	0f 93       	push	r16
    4558:	df 93       	push	r29
    455a:	cf 93       	push	r28
    455c:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	print(out);
    4560:	ce 01       	movw	r24, r28
    4562:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\rmintem=");
    4566:	89 ea       	ldi	r24, 0xA9	; 169
    4568:	94 e0       	ldi	r25, 0x04	; 4
    456a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	sprintf(out,"%d",mintem);
    456e:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <mintem+0x1>
    4572:	8f 93       	push	r24
    4574:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <mintem>
    4578:	8f 93       	push	r24
    457a:	1f 93       	push	r17
    457c:	0f 93       	push	r16
    457e:	df 93       	push	r29
    4580:	cf 93       	push	r28
    4582:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	print(out);
    4586:	ce 01       	movw	r24, r28
    4588:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\rmaxhum=");
    458c:	83 eb       	ldi	r24, 0xB3	; 179
    458e:	94 e0       	ldi	r25, 0x04	; 4
    4590:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	sprintf(out,"%d",maxhum);
    4594:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <maxhum+0x1>
    4598:	8f 93       	push	r24
    459a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <maxhum>
    459e:	8f 93       	push	r24
    45a0:	1f 93       	push	r17
    45a2:	0f 93       	push	r16
    45a4:	df 93       	push	r29
    45a6:	cf 93       	push	r28
    45a8:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	print(out);
    45ac:	ce 01       	movw	r24, r28
    45ae:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\rminhum=");
    45b2:	8d eb       	ldi	r24, 0xBD	; 189
    45b4:	94 e0       	ldi	r25, 0x04	; 4
    45b6:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	sprintf(out,"%d",minhum);
    45ba:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <minhum+0x1>
    45be:	8f 93       	push	r24
    45c0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <minhum>
    45c4:	8f 93       	push	r24
    45c6:	1f 93       	push	r17
    45c8:	0f 93       	push	r16
    45ca:	df 93       	push	r29
    45cc:	cf 93       	push	r28
    45ce:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	print(out);
    45d2:	ce 01       	movw	r24, r28
    45d4:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
}
    45d8:	8d b7       	in	r24, 0x3d	; 61
    45da:	9e b7       	in	r25, 0x3e	; 62
    45dc:	4e 96       	adiw	r24, 0x1e	; 30
    45de:	0f b6       	in	r0, 0x3f	; 63
    45e0:	f8 94       	cli
    45e2:	9e bf       	out	0x3e, r25	; 62
    45e4:	0f be       	out	0x3f, r0	; 63
    45e6:	8d bf       	out	0x3d, r24	; 61
    45e8:	df 91       	pop	r29
    45ea:	cf 91       	pop	r28
    45ec:	1f 91       	pop	r17
    45ee:	0f 91       	pop	r16
    45f0:	08 95       	ret

000045f2 <lprint>:
void lprint()
{
    45f2:	0f 93       	push	r16
    45f4:	1f 93       	push	r17
    45f6:	cf 93       	push	r28
    45f8:	df 93       	push	r29
	print("\n\rL Graph");
    45fa:	87 ec       	ldi	r24, 0xC7	; 199
    45fc:	94 e0       	ldi	r25, 0x04	; 4
    45fe:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\rT/div: 0.1Sec/");
    4602:	81 ed       	ldi	r24, 0xD1	; 209
    4604:	94 e0       	ldi	r25, 0x04	; 4
    4606:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	sprintf(out,"%d",ltdiv);
    460a:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <ltdiv+0x1>
    460e:	8f 93       	push	r24
    4610:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <ltdiv>
    4614:	8f 93       	push	r24
    4616:	0e e2       	ldi	r16, 0x2E	; 46
    4618:	13 e0       	ldi	r17, 0x03	; 3
    461a:	1f 93       	push	r17
    461c:	0f 93       	push	r16
    461e:	c9 ed       	ldi	r28, 0xD9	; 217
    4620:	d6 e0       	ldi	r29, 0x06	; 6
    4622:	df 93       	push	r29
    4624:	cf 93       	push	r28
    4626:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	print(out);
    462a:	ce 01       	movw	r24, r28
    462c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("Pixel");
    4630:	80 ed       	ldi	r24, 0xD0	; 208
    4632:	92 e0       	ldi	r25, 0x02	; 2
    4634:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\rmaxlux=");
    4638:	82 ee       	ldi	r24, 0xE2	; 226
    463a:	94 e0       	ldi	r25, 0x04	; 4
    463c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	sprintf(out,"%d",maxlux);
    4640:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <maxlux+0x1>
    4644:	8f 93       	push	r24
    4646:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <maxlux>
    464a:	8f 93       	push	r24
    464c:	1f 93       	push	r17
    464e:	0f 93       	push	r16
    4650:	df 93       	push	r29
    4652:	cf 93       	push	r28
    4654:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	print(out);
    4658:	ce 01       	movw	r24, r28
    465a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("\n\rminlux=");
    465e:	8c ee       	ldi	r24, 0xEC	; 236
    4660:	94 e0       	ldi	r25, 0x04	; 4
    4662:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	sprintf(out,"%d",minlux);
    4666:	80 91 52 06 	lds	r24, 0x0652	; 0x800652 <minlux+0x1>
    466a:	8f 93       	push	r24
    466c:	80 91 51 06 	lds	r24, 0x0651	; 0x800651 <minlux>
    4670:	8f 93       	push	r24
    4672:	1f 93       	push	r17
    4674:	0f 93       	push	r16
    4676:	df 93       	push	r29
    4678:	cf 93       	push	r28
    467a:	0e 94 95 30 	call	0x612a	; 0x612a <sprintf>
	print(out);
    467e:	ce 01       	movw	r24, r28
    4680:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>

}
    4684:	8d b7       	in	r24, 0x3d	; 61
    4686:	9e b7       	in	r25, 0x3e	; 62
    4688:	42 96       	adiw	r24, 0x12	; 18
    468a:	0f b6       	in	r0, 0x3f	; 63
    468c:	f8 94       	cli
    468e:	9e bf       	out	0x3e, r25	; 62
    4690:	0f be       	out	0x3f, r0	; 63
    4692:	8d bf       	out	0x3d, r24	; 61
    4694:	df 91       	pop	r29
    4696:	cf 91       	pop	r28
    4698:	1f 91       	pop	r17
    469a:	0f 91       	pop	r16
    469c:	08 95       	ret

0000469e <lgraph>:
void lgraph()
{
    469e:	2f 92       	push	r2
    46a0:	3f 92       	push	r3
    46a2:	4f 92       	push	r4
    46a4:	5f 92       	push	r5
    46a6:	6f 92       	push	r6
    46a8:	7f 92       	push	r7
    46aa:	8f 92       	push	r8
    46ac:	9f 92       	push	r9
    46ae:	af 92       	push	r10
    46b0:	bf 92       	push	r11
    46b2:	cf 92       	push	r12
    46b4:	df 92       	push	r13
    46b6:	ef 92       	push	r14
    46b8:	ff 92       	push	r15
    46ba:	0f 93       	push	r16
    46bc:	1f 93       	push	r17
    46be:	cf 93       	push	r28
    46c0:	df 93       	push	r29
    46c2:	00 d0       	rcall	.+0      	; 0x46c4 <lgraph+0x26>
    46c4:	00 d0       	rcall	.+0      	; 0x46c6 <lgraph+0x28>
    46c6:	00 d0       	rcall	.+0      	; 0x46c8 <lgraph+0x2a>
    46c8:	cd b7       	in	r28, 0x3d	; 61
    46ca:	de b7       	in	r29, 0x3e	; 62
	int x1=10;
	int y1=0;
	int lpcnt=0;
	int keyt=0;
	
	divtrig=1;
    46cc:	81 e0       	ldi	r24, 0x01	; 1
    46ce:	90 e0       	ldi	r25, 0x00	; 0
    46d0:	90 93 5a 06 	sts	0x065A, r25	; 0x80065a <divtrig+0x1>
    46d4:	80 93 59 06 	sts	0x0659, r24	; 0x800659 <divtrig>
	g_clear();
    46d8:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
	g_line(10,0,10,63);
    46dc:	2f e3       	ldi	r18, 0x3F	; 63
    46de:	4a e0       	ldi	r20, 0x0A	; 10
    46e0:	60 e0       	ldi	r22, 0x00	; 0
    46e2:	8a e0       	ldi	r24, 0x0A	; 10
    46e4:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
	g_line(0,53,127,53);
    46e8:	25 e3       	ldi	r18, 0x35	; 53
    46ea:	4f e7       	ldi	r20, 0x7F	; 127
    46ec:	65 e3       	ldi	r22, 0x35	; 53
    46ee:	80 e0       	ldi	r24, 0x00	; 0
    46f0:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
	g_render();
    46f4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
	
	print("\r\f\n1:Max/Min Setting\n\r2:Power Setting\n\rR+3:Time Reset and Re-setting time\n\r");
    46f8:	86 ef       	ldi	r24, 0xF6	; 246
    46fa:	94 e0       	ldi	r25, 0x04	; 4
    46fc:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	lprint();
    4700:	78 df       	rcall	.-272    	; 0x45f2 <lprint>
	int x0=10;
	int y0=0;
	int x1=10;
	int y1=0;
	int lpcnt=0;
	int keyt=0;
    4702:	1e 82       	std	Y+6, r1	; 0x06
    4704:	1d 82       	std	Y+5, r1	; 0x05
{
	int x0=10;
	int y0=0;
	int x1=10;
	int y1=0;
	int lpcnt=0;
    4706:	c1 2c       	mov	r12, r1
    4708:	d1 2c       	mov	r13, r1
void lgraph()
{
	int x0=10;
	int y0=0;
	int x1=10;
	int y1=0;
    470a:	1a 82       	std	Y+2, r1	; 0x02
    470c:	19 82       	std	Y+1, r1	; 0x01
}
void lgraph()
{
	int x0=10;
	int y0=0;
	int x1=10;
    470e:	0f 2e       	mov	r0, r31
    4710:	fa e0       	ldi	r31, 0x0A	; 10
    4712:	ef 2e       	mov	r14, r31
    4714:	f1 2c       	mov	r15, r1
    4716:	f0 2d       	mov	r31, r0

}
void lgraph()
{
	int x0=10;
	int y0=0;
    4718:	1c 82       	std	Y+4, r1	; 0x04
    471a:	1b 82       	std	Y+3, r1	; 0x03
	print(out);

}
void lgraph()
{
	int x0=10;
    471c:	0a e0       	ldi	r16, 0x0A	; 10
    471e:	10 e0       	ldi	r17, 0x00	; 0
		for(t=0; t<100;)
		{
			
			if(!(PINF&=(1<<PF0))&&fcnt==0){fcnt=1;}
			if(PINF&=(1<<PF0)&&fcnt==1){fcnt=0; fr++;}
			if(!(PINC&=(1<<sw5))){while(!(PINC&=(1<<sw5))){} divset(); _delay_ms(1500); t=100;}
    4720:	0f 2e       	mov	r0, r31
    4722:	f4 e6       	ldi	r31, 0x64	; 100
    4724:	af 2e       	mov	r10, r31
    4726:	b1 2c       	mov	r11, r1
    4728:	f0 2d       	mov	r31, r0
	while(1)
	{
		for(t=0; t<100;)
		{
			
			if(!(PINF&=(1<<PF0))&&fcnt==0){fcnt=1;}
    472a:	66 24       	eor	r6, r6
    472c:	63 94       	inc	r6
    472e:	71 2c       	mov	r7, r1
			if(PINF&=(1<<PF0)&&fcnt==1){fcnt=0; fr++;}
    4730:	33 24       	eor	r3, r3
    4732:	33 94       	inc	r3
    4734:	21 2c       	mov	r2, r1
			if(!(PINC&=(1<<sw5))){while(!(PINC&=(1<<sw5))){} divset(); _delay_ms(1500); t=100;}
    4736:	4a 2c       	mov	r4, r10
    4738:	5b 2c       	mov	r5, r11
		if(fr==0)
		fr=1;
		
		if(x0==10)
		{
			y0=53-(100-fr)/2;
    473a:	0f 2e       	mov	r0, r31
    473c:	f5 e3       	ldi	r31, 0x35	; 53
    473e:	8f 2e       	mov	r8, r31
    4740:	91 2c       	mov	r9, r1
    4742:	f0 2d       	mov	r31, r0
	print("\r\f\n1:Max/Min Setting\n\r2:Power Setting\n\rR+3:Time Reset and Re-setting time\n\r");
	lprint();
	
	while(1)
	{
		for(t=0; t<100;)
    4744:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    4748:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
		{
			
			if(!(PINF&=(1<<PF0))&&fcnt==0){fcnt=1;}
    474c:	80 b1       	in	r24, 0x00	; 0
    474e:	81 70       	andi	r24, 0x01	; 1
    4750:	80 b9       	out	0x00, r24	; 0
    4752:	81 11       	cpse	r24, r1
    4754:	0a c0       	rjmp	.+20     	; 0x476a <lgraph+0xcc>
    4756:	80 91 4d 06 	lds	r24, 0x064D	; 0x80064d <fcnt>
    475a:	90 91 4e 06 	lds	r25, 0x064E	; 0x80064e <fcnt+0x1>
    475e:	89 2b       	or	r24, r25
    4760:	21 f4       	brne	.+8      	; 0x476a <lgraph+0xcc>
    4762:	60 92 4d 06 	sts	0x064D, r6	; 0x80064d <fcnt>
    4766:	70 92 4e 06 	sts	0x064E, r7	; 0x80064e <fcnt+0x1>
			if(PINF&=(1<<PF0)&&fcnt==1){fcnt=0; fr++;}
    476a:	80 b1       	in	r24, 0x00	; 0
    476c:	93 2d       	mov	r25, r3
    476e:	20 91 4d 06 	lds	r18, 0x064D	; 0x80064d <fcnt>
    4772:	30 91 4e 06 	lds	r19, 0x064E	; 0x80064e <fcnt+0x1>
    4776:	21 30       	cpi	r18, 0x01	; 1
    4778:	31 05       	cpc	r19, r1
    477a:	09 f0       	breq	.+2      	; 0x477e <lgraph+0xe0>
    477c:	92 2d       	mov	r25, r2
    477e:	89 23       	and	r24, r25
    4780:	80 b9       	out	0x00, r24	; 0
    4782:	88 23       	and	r24, r24
    4784:	69 f0       	breq	.+26     	; 0x47a0 <lgraph+0x102>
    4786:	10 92 4e 06 	sts	0x064E, r1	; 0x80064e <fcnt+0x1>
    478a:	10 92 4d 06 	sts	0x064D, r1	; 0x80064d <fcnt>
    478e:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    4792:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    4796:	01 96       	adiw	r24, 0x01	; 1
    4798:	90 93 4c 06 	sts	0x064C, r25	; 0x80064c <fr+0x1>
    479c:	80 93 4b 06 	sts	0x064B, r24	; 0x80064b <fr>
			if(!(PINC&=(1<<sw5))){while(!(PINC&=(1<<sw5))){} divset(); _delay_ms(1500); t=100;}
    47a0:	83 b3       	in	r24, 0x13	; 19
    47a2:	80 71       	andi	r24, 0x10	; 16
    47a4:	83 bb       	out	0x13, r24	; 19
    47a6:	81 11       	cpse	r24, r1
    47a8:	14 c0       	rjmp	.+40     	; 0x47d2 <lgraph+0x134>
    47aa:	83 b3       	in	r24, 0x13	; 19
    47ac:	80 71       	andi	r24, 0x10	; 16
    47ae:	83 bb       	out	0x13, r24	; 19
    47b0:	88 23       	and	r24, r24
    47b2:	d9 f3       	breq	.-10     	; 0x47aa <lgraph+0x10c>
    47b4:	0e 94 f5 16 	call	0x2dea	; 0x2dea <divset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    47b8:	2f ef       	ldi	r18, 0xFF	; 255
    47ba:	3d e3       	ldi	r19, 0x3D	; 61
    47bc:	49 e4       	ldi	r20, 0x49	; 73
    47be:	21 50       	subi	r18, 0x01	; 1
    47c0:	30 40       	sbci	r19, 0x00	; 0
    47c2:	40 40       	sbci	r20, 0x00	; 0
    47c4:	e1 f7       	brne	.-8      	; 0x47be <lgraph+0x120>
    47c6:	00 c0       	rjmp	.+0      	; 0x47c8 <lgraph+0x12a>
    47c8:	00 00       	nop
    47ca:	40 92 49 06 	sts	0x0649, r4	; 0x800649 <t>
    47ce:	50 92 4a 06 	sts	0x064A, r5	; 0x80064a <t+0x1>
			
			if(!(PINC&=(1<<sw3)))
    47d2:	83 b3       	in	r24, 0x13	; 19
    47d4:	84 70       	andi	r24, 0x04	; 4
    47d6:	83 bb       	out	0x13, r24	; 19
    47d8:	81 11       	cpse	r24, r1
    47da:	12 c0       	rjmp	.+36     	; 0x4800 <lgraph+0x162>
			{
				while(!(PINC&=(1<<sw3)))
    47dc:	83 b3       	in	r24, 0x13	; 19
    47de:	84 70       	andi	r24, 0x04	; 4
    47e0:	83 bb       	out	0x13, r24	; 19
    47e2:	81 11       	cpse	r24, r1
    47e4:	09 c0       	rjmp	.+18     	; 0x47f8 <lgraph+0x15a>
				bk=1;
    47e6:	60 92 53 06 	sts	0x0653, r6	; 0x800653 <bk>
    47ea:	70 92 54 06 	sts	0x0654, r7	; 0x800654 <bk+0x1>
			if(PINF&=(1<<PF0)&&fcnt==1){fcnt=0; fr++;}
			if(!(PINC&=(1<<sw5))){while(!(PINC&=(1<<sw5))){} divset(); _delay_ms(1500); t=100;}
			
			if(!(PINC&=(1<<sw3)))
			{
				while(!(PINC&=(1<<sw3)))
    47ee:	83 b3       	in	r24, 0x13	; 19
    47f0:	84 70       	andi	r24, 0x04	; 4
    47f2:	83 bb       	out	0x13, r24	; 19
    47f4:	88 23       	and	r24, r24
    47f6:	b9 f3       	breq	.-18     	; 0x47e6 <lgraph+0x148>
				bk=1;
				t=100;
    47f8:	40 92 49 06 	sts	0x0649, r4	; 0x800649 <t>
    47fc:	50 92 4a 06 	sts	0x064A, r5	; 0x80064a <t+0x1>
			}

			if(!(PINC&=(1<<sw4)))
    4800:	83 b3       	in	r24, 0x13	; 19
    4802:	88 70       	andi	r24, 0x08	; 8
    4804:	83 bb       	out	0x13, r24	; 19
    4806:	81 11       	cpse	r24, r1
    4808:	10 c0       	rjmp	.+32     	; 0x482a <lgraph+0x18c>
			{
				while(!(PINC&=(1<<sw4))){}
    480a:	83 b3       	in	r24, 0x13	; 19
    480c:	88 70       	andi	r24, 0x08	; 8
    480e:	83 bb       	out	0x13, r24	; 19
    4810:	88 23       	and	r24, r24
    4812:	d9 f3       	breq	.-10     	; 0x480a <lgraph+0x16c>
				vigil();
    4814:	0e 94 c2 18 	call	0x3184	; 0x3184 <vigil>
				g_clear();
    4818:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
				x0=10;
				btg=0;
    481c:	10 92 ff 05 	sts	0x05FF, r1	; 0x8005ff <btg+0x1>
    4820:	10 92 fe 05 	sts	0x05FE, r1	; 0x8005fe <btg>
			if(!(PINC&=(1<<sw4)))
			{
				while(!(PINC&=(1<<sw4))){}
				vigil();
				g_clear();
				x0=10;
    4824:	0a e0       	ldi	r16, 0x0A	; 10
    4826:	10 e0       	ldi	r17, 0x00	; 0
				btg=0;
				
				break;
    4828:	89 c0       	rjmp	.+274    	; 0x493c <lgraph+0x29e>
			}
			
			key=rx();
    482a:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <rx>
    482e:	80 93 3a 06 	sts	0x063A, r24	; 0x80063a <key>
			if(key==49)
    4832:	81 33       	cpi	r24, 0x31	; 49
    4834:	e9 f4       	brne	.+58     	; 0x4870 <lgraph+0x1d2>
			{
				setting();
    4836:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <setting>
				g_clear();
    483a:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
				g_line(10,0,10,63);
    483e:	2f e3       	ldi	r18, 0x3F	; 63
    4840:	4a e0       	ldi	r20, 0x0A	; 10
    4842:	60 e0       	ldi	r22, 0x00	; 0
    4844:	8a e0       	ldi	r24, 0x0A	; 10
    4846:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
				g_line(0,53,127,53);
    484a:	25 e3       	ldi	r18, 0x35	; 53
    484c:	4f e7       	ldi	r20, 0x7F	; 127
    484e:	65 e3       	ldi	r22, 0x35	; 53
    4850:	80 e0       	ldi	r24, 0x00	; 0
    4852:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
				g_render();
    4856:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
				t=0;
    485a:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    485e:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
				key=0;
    4862:	10 92 3a 06 	sts	0x063A, r1	; 0x80063a <key>
				det=1;
    4866:	60 92 4f 06 	sts	0x064F, r6	; 0x80064f <det>
    486a:	70 92 50 06 	sts	0x0650, r7	; 0x800650 <det+0x1>
				break;
    486e:	66 c0       	rjmp	.+204    	; 0x493c <lgraph+0x29e>
			}
			if(key==50)
    4870:	82 33       	cpi	r24, 0x32	; 50
    4872:	e9 f4       	brne	.+58     	; 0x48ae <lgraph+0x210>
			{
				onset();
    4874:	0e 94 09 11 	call	0x2212	; 0x2212 <onset>
				g_clear();
    4878:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
				g_line(10,0,10,63);
    487c:	2f e3       	ldi	r18, 0x3F	; 63
    487e:	4a e0       	ldi	r20, 0x0A	; 10
    4880:	60 e0       	ldi	r22, 0x00	; 0
    4882:	8a e0       	ldi	r24, 0x0A	; 10
    4884:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
				g_line(0,53,127,53);
    4888:	25 e3       	ldi	r18, 0x35	; 53
    488a:	4f e7       	ldi	r20, 0x7F	; 127
    488c:	65 e3       	ldi	r22, 0x35	; 53
    488e:	80 e0       	ldi	r24, 0x00	; 0
    4890:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
				g_render();
    4894:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
				t=0;
    4898:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    489c:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
				key=0;
    48a0:	10 92 3a 06 	sts	0x063A, r1	; 0x80063a <key>
				det=1;
    48a4:	60 92 4f 06 	sts	0x064F, r6	; 0x80064f <det>
    48a8:	70 92 50 06 	sts	0x0650, r7	; 0x800650 <det+0x1>
				break;
    48ac:	47 c0       	rjmp	.+142    	; 0x493c <lgraph+0x29e>
			}
			if(key==114) keyt=1;
    48ae:	82 37       	cpi	r24, 0x72	; 114
    48b0:	d9 f1       	breq	.+118    	; 0x4928 <lgraph+0x28a>
			
			if(keyt==1&&key==51)
    48b2:	2d 81       	ldd	r18, Y+5	; 0x05
    48b4:	3e 81       	ldd	r19, Y+6	; 0x06
    48b6:	21 30       	cpi	r18, 0x01	; 1
    48b8:	31 05       	cpc	r19, r1
    48ba:	c1 f5       	brne	.+112    	; 0x492c <lgraph+0x28e>
    48bc:	83 33       	cpi	r24, 0x33	; 51
    48be:	b1 f5       	brne	.+108    	; 0x492c <lgraph+0x28e>
			{
				eeprom_write_byte((uint16_t*)46,0);
    48c0:	60 e0       	ldi	r22, 0x00	; 0
    48c2:	8e e2       	ldi	r24, 0x2E	; 46
    48c4:	90 e0       	ldi	r25, 0x00	; 0
    48c6:	0e 94 39 31 	call	0x6272	; 0x6272 <eeprom_write_byte>
				hc=0;
    48ca:	10 92 42 06 	sts	0x0642, r1	; 0x800642 <hc+0x1>
    48ce:	10 92 41 06 	sts	0x0641, r1	; 0x800641 <hc>
				mc=0; sc=0;
    48d2:	10 92 40 06 	sts	0x0640, r1	; 0x800640 <mc+0x1>
    48d6:	10 92 3f 06 	sts	0x063F, r1	; 0x80063f <mc>
    48da:	10 92 3e 06 	sts	0x063E, r1	; 0x80063e <sc+0x1>
    48de:	10 92 3d 06 	sts	0x063D, r1	; 0x80063d <sc>
				ttrig=0;
    48e2:	10 92 5c 06 	sts	0x065C, r1	; 0x80065c <ttrig+0x1>
    48e6:	10 92 5b 06 	sts	0x065B, r1	; 0x80065b <ttrig>
				timeset();
    48ea:	0e 94 07 13 	call	0x260e	; 0x260e <timeset>
				t=0;
    48ee:	10 92 4a 06 	sts	0x064A, r1	; 0x80064a <t+0x1>
    48f2:	10 92 49 06 	sts	0x0649, r1	; 0x800649 <t>
				key=0;
    48f6:	10 92 3a 06 	sts	0x063A, r1	; 0x80063a <key>
				keyt=0;
				trig=1;
    48fa:	60 92 55 06 	sts	0x0655, r6	; 0x800655 <trig>
    48fe:	70 92 56 06 	sts	0x0656, r7	; 0x800656 <trig+0x1>
				g_clear();
    4902:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
				g_line(10,0,10,63);
    4906:	2f e3       	ldi	r18, 0x3F	; 63
    4908:	4a e0       	ldi	r20, 0x0A	; 10
    490a:	60 e0       	ldi	r22, 0x00	; 0
    490c:	8a e0       	ldi	r24, 0x0A	; 10
    490e:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
				g_line(0,53,127,53);
    4912:	25 e3       	ldi	r18, 0x35	; 53
    4914:	4f e7       	ldi	r20, 0x7F	; 127
    4916:	65 e3       	ldi	r22, 0x35	; 53
    4918:	80 e0       	ldi	r24, 0x00	; 0
    491a:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
				g_render();
    491e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
				mc=0; sc=0;
				ttrig=0;
				timeset();
				t=0;
				key=0;
				keyt=0;
    4922:	1e 82       	std	Y+6, r1	; 0x06
    4924:	1d 82       	std	Y+5, r1	; 0x05
				trig=1;
				g_clear();
				g_line(10,0,10,63);
				g_line(0,53,127,53);
				g_render();
				break;
    4926:	0a c0       	rjmp	.+20     	; 0x493c <lgraph+0x29e>
    4928:	6d 82       	std	Y+5, r6	; 0x05
    492a:	7e 82       	std	Y+6, r7	; 0x06
	print("\r\f\n1:Max/Min Setting\n\r2:Power Setting\n\rR+3:Time Reset and Re-setting time\n\r");
	lprint();
	
	while(1)
	{
		for(t=0; t<100;)
    492c:	80 91 49 06 	lds	r24, 0x0649	; 0x800649 <t>
    4930:	90 91 4a 06 	lds	r25, 0x064A	; 0x80064a <t+0x1>
    4934:	84 36       	cpi	r24, 0x64	; 100
    4936:	91 05       	cpc	r25, r1
    4938:	0c f4       	brge	.+2      	; 0x493c <lgraph+0x29e>
    493a:	08 cf       	rjmp	.-496    	; 0x474c <lgraph+0xae>
				break;
			}
			
		}
		
		lpcnt++;
    493c:	3f ef       	ldi	r19, 0xFF	; 255
    493e:	c3 1a       	sub	r12, r19
    4940:	d3 0a       	sbc	r13, r19
		if(lpcnt==10)
    4942:	4a e0       	ldi	r20, 0x0A	; 10
    4944:	c4 16       	cp	r12, r20
    4946:	d1 04       	cpc	r13, r1
    4948:	39 f4       	brne	.+14     	; 0x4958 <lgraph+0x2ba>
		{
			lpcnt=0;
			print("\r\f\n1:Max/Min Setting\n\r2:Power Setting\n\rR+3:Time Reset and Re-setting time\n\r");
    494a:	86 ef       	ldi	r24, 0xF6	; 246
    494c:	94 e0       	ldi	r25, 0x04	; 4
    494e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			lprint();
    4952:	4f de       	rcall	.-866    	; 0x45f2 <lprint>
		}
		
		lpcnt++;
		if(lpcnt==10)
		{
			lpcnt=0;
    4954:	c1 2c       	mov	r12, r1
    4956:	d1 2c       	mov	r13, r1
			print("\r\f\n1:Max/Min Setting\n\r2:Power Setting\n\rR+3:Time Reset and Re-setting time\n\r");
			lprint();
		}
		
		if(bk==1)
    4958:	80 91 53 06 	lds	r24, 0x0653	; 0x800653 <bk>
    495c:	90 91 54 06 	lds	r25, 0x0654	; 0x800654 <bk+0x1>
    4960:	01 97       	sbiw	r24, 0x01	; 1
    4962:	29 f4       	brne	.+10     	; 0x496e <lgraph+0x2d0>
		{
			bk=0;
    4964:	10 92 54 06 	sts	0x0654, r1	; 0x800654 <bk+0x1>
    4968:	10 92 53 06 	sts	0x0653, r1	; 0x800653 <bk>
		
		fr=0;

	}
	
}
    496c:	a8 c0       	rjmp	.+336    	; 0x4abe <lgraph+0x420>
		{
			bk=0;
			break;
		}
		
		if(fr>=100)
    496e:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    4972:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    4976:	84 36       	cpi	r24, 0x64	; 100
    4978:	91 05       	cpc	r25, r1
    497a:	2c f0       	brlt	.+10     	; 0x4986 <lgraph+0x2e8>
		fr=100;
    497c:	40 92 4b 06 	sts	0x064B, r4	; 0x80064b <fr>
    4980:	50 92 4c 06 	sts	0x064C, r5	; 0x80064c <fr+0x1>
    4984:	06 c0       	rjmp	.+12     	; 0x4992 <lgraph+0x2f4>
		
		if(fr==0)
    4986:	89 2b       	or	r24, r25
    4988:	21 f4       	brne	.+8      	; 0x4992 <lgraph+0x2f4>
		fr=1;
    498a:	60 92 4b 06 	sts	0x064B, r6	; 0x80064b <fr>
    498e:	70 92 4c 06 	sts	0x064C, r7	; 0x80064c <fr+0x1>
		
		if(x0==10)
    4992:	0a 30       	cpi	r16, 0x0A	; 10
    4994:	11 05       	cpc	r17, r1
    4996:	b1 f4       	brne	.+44     	; 0x49c4 <lgraph+0x326>
		{
			y0=53-(100-fr)/2;
    4998:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    499c:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    49a0:	95 01       	movw	r18, r10
    49a2:	28 1b       	sub	r18, r24
    49a4:	39 0b       	sbc	r19, r25
    49a6:	c9 01       	movw	r24, r18
    49a8:	99 23       	and	r25, r25
    49aa:	0c f4       	brge	.+2      	; 0x49ae <lgraph+0x310>
    49ac:	01 96       	adiw	r24, 0x01	; 1
    49ae:	95 95       	asr	r25
    49b0:	87 95       	ror	r24
    49b2:	94 01       	movw	r18, r8
    49b4:	28 1b       	sub	r18, r24
    49b6:	39 0b       	sbc	r19, r25
    49b8:	3c 83       	std	Y+4, r19	; 0x04
    49ba:	2b 83       	std	Y+3, r18	; 0x03
			x1=10;
			y1=y0;
    49bc:	3a 83       	std	Y+2, r19	; 0x02
    49be:	29 83       	std	Y+1, r18	; 0x01
		fr=1;
		
		if(x0==10)
		{
			y0=53-(100-fr)/2;
			x1=10;
    49c0:	78 01       	movw	r14, r16
    49c2:	03 c0       	rjmp	.+6      	; 0x49ca <lgraph+0x32c>
			y1=y0;
		}
		
		if(x0>=127||trig==1)
    49c4:	0f 37       	cpi	r16, 0x7F	; 127
    49c6:	11 05       	cpc	r17, r1
    49c8:	34 f4       	brge	.+12     	; 0x49d6 <lgraph+0x338>
    49ca:	80 91 55 06 	lds	r24, 0x0655	; 0x800655 <trig>
    49ce:	90 91 56 06 	lds	r25, 0x0656	; 0x800656 <trig+0x1>
    49d2:	01 97       	sbiw	r24, 0x01	; 1
    49d4:	69 f4       	brne	.+26     	; 0x49f0 <lgraph+0x352>
		{
			g_clear();
    49d6:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
			x0=10;
			x1=x0;
			trig=0;
    49da:	10 92 56 06 	sts	0x0656, r1	; 0x800656 <trig+0x1>
    49de:	10 92 55 06 	sts	0x0655, r1	; 0x800655 <trig>
		
		if(x0>=127||trig==1)
		{
			g_clear();
			x0=10;
			x1=x0;
    49e2:	0f 2e       	mov	r0, r31
    49e4:	fa e0       	ldi	r31, 0x0A	; 10
    49e6:	ef 2e       	mov	r14, r31
    49e8:	f1 2c       	mov	r15, r1
    49ea:	f0 2d       	mov	r31, r0
		}
		
		if(x0>=127||trig==1)
		{
			g_clear();
			x0=10;
    49ec:	0a e0       	ldi	r16, 0x0A	; 10
    49ee:	10 e0       	ldi	r17, 0x00	; 0
			x1=x0;
			trig=0;
		}
		
		g_clearline(7);
    49f0:	87 e0       	ldi	r24, 0x07	; 7
    49f2:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
		
		g_line(10,0,10,63);
    49f6:	2f e3       	ldi	r18, 0x3F	; 63
    49f8:	4a e0       	ldi	r20, 0x0A	; 10
    49fa:	60 e0       	ldi	r22, 0x00	; 0
    49fc:	8a e0       	ldi	r24, 0x0A	; 10
    49fe:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
		g_line(0,53,127,53);
    4a02:	25 e3       	ldi	r18, 0x35	; 53
    4a04:	4f e7       	ldi	r20, 0x7F	; 127
    4a06:	65 e3       	ldi	r22, 0x35	; 53
    4a08:	80 e0       	ldi	r24, 0x00	; 0
    4a0a:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
		
		g_xy(12,56);
    4a0e:	68 e3       	ldi	r22, 0x38	; 56
    4a10:	70 e0       	ldi	r23, 0x00	; 0
    4a12:	8c e0       	ldi	r24, 0x0C	; 12
    4a14:	90 e0       	ldi	r25, 0x00	; 0
    4a16:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("lux:");
    4a1a:	8e e8       	ldi	r24, 0x8E	; 142
    4a1c:	91 e0       	ldi	r25, 0x01	; 1
    4a1e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		printi(100-fr);
    4a22:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    4a26:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    4a2a:	b5 01       	movw	r22, r10
    4a2c:	68 1b       	sub	r22, r24
    4a2e:	79 0b       	sbc	r23, r25
    4a30:	07 2e       	mov	r0, r23
    4a32:	00 0c       	add	r0, r0
    4a34:	88 0b       	sbc	r24, r24
    4a36:	99 0b       	sbc	r25, r25
    4a38:	0e 94 72 09 	call	0x12e4	; 0x12e4 <printi>
		printc('%');
    4a3c:	85 e2       	ldi	r24, 0x25	; 37
    4a3e:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		
		nowtime();
    4a42:	0e 94 92 15 	call	0x2b24	; 0x2b24 <nowtime>
		g_xy(66,56);
    4a46:	68 e3       	ldi	r22, 0x38	; 56
    4a48:	70 e0       	ldi	r23, 0x00	; 0
    4a4a:	82 e4       	ldi	r24, 0x42	; 66
    4a4c:	90 e0       	ldi	r25, 0x00	; 0
    4a4e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		nowtime();
    4a52:	0e 94 92 15 	call	0x2b24	; 0x2b24 <nowtime>
		prints(ot);
    4a56:	85 eb       	ldi	r24, 0xB5	; 181
    4a58:	9b e0       	ldi	r25, 0x0B	; 11
    4a5a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_cir(x1,y1,1);
    4a5e:	41 e0       	ldi	r20, 0x01	; 1
    4a60:	69 81       	ldd	r22, Y+1	; 0x01
    4a62:	8e 2d       	mov	r24, r14
    4a64:	0e 94 d1 05 	call	0xba2	; 0xba2 <g_cir>
		
		g_line(x0,y0,x1,y1);
    4a68:	29 81       	ldd	r18, Y+1	; 0x01
    4a6a:	4e 2d       	mov	r20, r14
    4a6c:	6b 81       	ldd	r22, Y+3	; 0x03
    4a6e:	80 2f       	mov	r24, r16
    4a70:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
		
		g_render();
    4a74:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		x1+=ltdiv;
    4a78:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <ltdiv>
    4a7c:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <ltdiv+0x1>
    4a80:	e2 0e       	add	r14, r18
    4a82:	f3 1e       	adc	r15, r19
		y1=53-(100-fr)/2;
    4a84:	80 91 4b 06 	lds	r24, 0x064B	; 0x80064b <fr>
    4a88:	90 91 4c 06 	lds	r25, 0x064C	; 0x80064c <fr+0x1>
    4a8c:	a5 01       	movw	r20, r10
    4a8e:	48 1b       	sub	r20, r24
    4a90:	59 0b       	sbc	r21, r25
    4a92:	ca 01       	movw	r24, r20
    4a94:	99 23       	and	r25, r25
    4a96:	0c f4       	brge	.+2      	; 0x4a9a <lgraph+0x3fc>
    4a98:	01 96       	adiw	r24, 0x01	; 1
    4a9a:	95 95       	asr	r25
    4a9c:	87 95       	ror	r24
    4a9e:	a4 01       	movw	r20, r8
    4aa0:	48 1b       	sub	r20, r24
    4aa2:	59 0b       	sbc	r21, r25
    4aa4:	5a 83       	std	Y+2, r21	; 0x02
    4aa6:	49 83       	std	Y+1, r20	; 0x01
		x0+=ltdiv;
    4aa8:	02 0f       	add	r16, r18
    4aaa:	13 1f       	adc	r17, r19
		y0=54;
		
		fr=0;
    4aac:	10 92 4c 06 	sts	0x064C, r1	; 0x80064c <fr+0x1>
    4ab0:	10 92 4b 06 	sts	0x064B, r1	; 0x80064b <fr>
		
		g_render();
		x1+=ltdiv;
		y1=53-(100-fr)/2;
		x0+=ltdiv;
		y0=54;
    4ab4:	86 e3       	ldi	r24, 0x36	; 54
    4ab6:	90 e0       	ldi	r25, 0x00	; 0
    4ab8:	9c 83       	std	Y+4, r25	; 0x04
    4aba:	8b 83       	std	Y+3, r24	; 0x03
		
		fr=0;

	}
    4abc:	43 ce       	rjmp	.-890    	; 0x4744 <lgraph+0xa6>
	
}
    4abe:	26 96       	adiw	r28, 0x06	; 6
    4ac0:	0f b6       	in	r0, 0x3f	; 63
    4ac2:	f8 94       	cli
    4ac4:	de bf       	out	0x3e, r29	; 62
    4ac6:	0f be       	out	0x3f, r0	; 63
    4ac8:	cd bf       	out	0x3d, r28	; 61
    4aca:	df 91       	pop	r29
    4acc:	cf 91       	pop	r28
    4ace:	1f 91       	pop	r17
    4ad0:	0f 91       	pop	r16
    4ad2:	ff 90       	pop	r15
    4ad4:	ef 90       	pop	r14
    4ad6:	df 90       	pop	r13
    4ad8:	cf 90       	pop	r12
    4ada:	bf 90       	pop	r11
    4adc:	af 90       	pop	r10
    4ade:	9f 90       	pop	r9
    4ae0:	8f 90       	pop	r8
    4ae2:	7f 90       	pop	r7
    4ae4:	6f 90       	pop	r6
    4ae6:	5f 90       	pop	r5
    4ae8:	4f 90       	pop	r4
    4aea:	3f 90       	pop	r3
    4aec:	2f 90       	pop	r2
    4aee:	08 95       	ret

00004af0 <thgraph>:
void thgraph()
{
    4af0:	5f 92       	push	r5
    4af2:	6f 92       	push	r6
    4af4:	7f 92       	push	r7
    4af6:	8f 92       	push	r8
    4af8:	9f 92       	push	r9
    4afa:	af 92       	push	r10
    4afc:	bf 92       	push	r11
    4afe:	cf 92       	push	r12
    4b00:	df 92       	push	r13
    4b02:	ef 92       	push	r14
    4b04:	ff 92       	push	r15
    4b06:	0f 93       	push	r16
    4b08:	1f 93       	push	r17
    4b0a:	cf 93       	push	r28
    4b0c:	df 93       	push	r29
	int hy0=0;
	int hx0=10;
	int hy1=0;
	int hx1=0;
	
	divtrig=0;
    4b0e:	10 92 5a 06 	sts	0x065A, r1	; 0x80065a <divtrig+0x1>
    4b12:	10 92 59 06 	sts	0x0659, r1	; 0x800659 <divtrig>
	autotrig=0;
    4b16:	10 92 58 06 	sts	0x0658, r1	; 0x800658 <autotrig+0x1>
    4b1a:	10 92 57 06 	sts	0x0657, r1	; 0x800657 <autotrig>
	g_clear();
    4b1e:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
	g_line(10,0,10,63);
    4b22:	2f e3       	ldi	r18, 0x3F	; 63
    4b24:	4a e0       	ldi	r20, 0x0A	; 10
    4b26:	60 e0       	ldi	r22, 0x00	; 0
    4b28:	8a e0       	ldi	r24, 0x0A	; 10
    4b2a:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
	g_line(0,53,127,53);
    4b2e:	25 e3       	ldi	r18, 0x35	; 53
    4b30:	4f e7       	ldi	r20, 0x7F	; 127
    4b32:	65 e3       	ldi	r22, 0x35	; 53
    4b34:	80 e0       	ldi	r24, 0x00	; 0
    4b36:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
	g_render();
    4b3a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
	
	print("\r\f\n1:Max/Min Setting\n\r2:Power Setting\n\rR+3:Time Reset and Re-setting time\n\r");
    4b3e:	86 ef       	ldi	r24, 0xF6	; 246
    4b40:	94 e0       	ldi	r25, 0x04	; 4
    4b42:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	thprint();
    4b46:	d9 dc       	rcall	.-1614   	; 0x44fa <thprint>
	int y1=0;
	int x1=0;
	
	int hy0=0;
	int hx0=10;
	int hy1=0;
    4b48:	71 2c       	mov	r7, r1
{
	char out[10];
	int y0=0;
	int x0=10;
	int y1=0;
	int x1=0;
    4b4a:	c0 e0       	ldi	r28, 0x00	; 0
    4b4c:	d0 e0       	ldi	r29, 0x00	; 0
void thgraph()
{
	char out[10];
	int y0=0;
	int x0=10;
	int y1=0;
    4b4e:	a1 2c       	mov	r10, r1
}
void thgraph()
{
	char out[10];
	int y0=0;
	int x0=10;
    4b50:	0a e0       	ldi	r16, 0x0A	; 10
    4b52:	10 e0       	ldi	r17, 0x00	; 0
		if(x0==1)
		{
			x0=10+tdiv;
			hx0=10+tdiv;
			
			y0=53-I_Temp;
    4b54:	0f 2e       	mov	r0, r31
    4b56:	f5 e3       	ldi	r31, 0x35	; 53
    4b58:	8f 2e       	mov	r8, r31
    4b5a:	91 2c       	mov	r9, r1
    4b5c:	f0 2d       	mov	r31, r0
		
		
		if(x0>=127||trig==1||det==1||btg==1)
		{
			trig=0;
			x0=10;
    4b5e:	0f 2e       	mov	r0, r31
    4b60:	fa e0       	ldi	r31, 0x0A	; 10
    4b62:	5f 2e       	mov	r5, r31
    4b64:	f0 2d       	mov	r31, r0
    4b66:	61 2c       	mov	r6, r1
    4b68:	03 c0       	rjmp	.+6      	; 0x4b70 <thgraph+0x80>
    4b6a:	8e 01       	movw	r16, r28
			x1=x0;
			y1=y0;
			hx1=hx0;
			hy1=hy0;
			
			x0=1;
    4b6c:	7c 2c       	mov	r7, r12
    4b6e:	ae 2c       	mov	r10, r14
	print("\r\f\n1:Max/Min Setting\n\r2:Power Setting\n\rR+3:Time Reset and Re-setting time\n\r");
	thprint();
	
	while(1)
	{
		dht();
    4b70:	0e 94 21 1a 	call	0x3442	; 0x3442 <dht>
		nowtime();
    4b74:	0e 94 92 15 	call	0x2b24	; 0x2b24 <nowtime>
		print("\r\f\n1:Max/Min Setting\n\r2:Power Setting\n\rR+3:Time Reset and Re-setting time\n\r");
    4b78:	86 ef       	ldi	r24, 0xF6	; 246
    4b7a:	94 e0       	ldi	r25, 0x04	; 4
    4b7c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		thprint();
    4b80:	bc dc       	rcall	.-1672   	; 0x44fa <thprint>
		if(bk==1)
    4b82:	80 91 53 06 	lds	r24, 0x0653	; 0x800653 <bk>
    4b86:	90 91 54 06 	lds	r25, 0x0654	; 0x800654 <bk+0x1>
    4b8a:	01 97       	sbiw	r24, 0x01	; 1
    4b8c:	29 f4       	brne	.+10     	; 0x4b98 <thgraph+0xa8>
		{
			bk=0;
    4b8e:	10 92 54 06 	sts	0x0654, r1	; 0x800654 <bk+0x1>
    4b92:	10 92 53 06 	sts	0x0653, r1	; 0x800653 <bk>
			break;
		}
		
		detect();
    4b96:	e1 c0       	rjmp	.+450    	; 0x4d5a <thgraph+0x26a>
    4b98:	22 dc       	rcall	.-1980   	; 0x43de <detect>
		
		if(x0==10)
    4b9a:	0a 30       	cpi	r16, 0x0A	; 10
    4b9c:	11 05       	cpc	r17, r1
    4b9e:	09 f0       	breq	.+2      	; 0x4ba2 <thgraph+0xb2>
    4ba0:	d7 c0       	rjmp	.+430    	; 0x4d50 <thgraph+0x260>
		{
			x1=10;
			hx1=10;
			y0=53-I_Temp;
    4ba2:	80 91 ae 0b 	lds	r24, 0x0BAE	; 0x800bae <I_Temp>
    4ba6:	74 01       	movw	r14, r8
    4ba8:	e8 1a       	sub	r14, r24
    4baa:	f1 08       	sbc	r15, r1
			hy0=53-(I_RH/2);
    4bac:	80 91 af 0b 	lds	r24, 0x0BAF	; 0x800baf <I_RH>
    4bb0:	86 95       	lsr	r24
    4bb2:	64 01       	movw	r12, r8
    4bb4:	c8 1a       	sub	r12, r24
    4bb6:	d1 08       	sbc	r13, r1
		
		detect();
		
		if(x0==10)
		{
			x1=10;
    4bb8:	e8 01       	movw	r28, r16
    4bba:	25 c0       	rjmp	.+74     	; 0x4c06 <thgraph+0x116>
			hy0=53-(I_RH/2);
		}
		
		if(x0!=10 && x0!=1)
		{
			y0=53-I_Temp;
    4bbc:	80 91 ae 0b 	lds	r24, 0x0BAE	; 0x800bae <I_Temp>
    4bc0:	74 01       	movw	r14, r8
    4bc2:	e8 1a       	sub	r14, r24
    4bc4:	f1 08       	sbc	r15, r1
			x0+=tdiv;
    4bc6:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <tdiv>
    4bca:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <tdiv+0x1>
    4bce:	08 0f       	add	r16, r24
    4bd0:	19 1f       	adc	r17, r25
			
			hy0=53-(I_RH/2);
    4bd2:	80 91 af 0b 	lds	r24, 0x0BAF	; 0x800baf <I_RH>
    4bd6:	86 95       	lsr	r24
    4bd8:	64 01       	movw	r12, r8
    4bda:	c8 1a       	sub	r12, r24
    4bdc:	d1 08       	sbc	r13, r1
			hx0+=tdiv;
		}
		
		if(x0==1)
    4bde:	01 30       	cpi	r16, 0x01	; 1
    4be0:	11 05       	cpc	r17, r1
    4be2:	89 f4       	brne	.+34     	; 0x4c06 <thgraph+0x116>
		{
			x0=10+tdiv;
    4be4:	00 91 14 01 	lds	r16, 0x0114	; 0x800114 <tdiv>
    4be8:	10 91 15 01 	lds	r17, 0x0115	; 0x800115 <tdiv+0x1>
    4bec:	06 5f       	subi	r16, 0xF6	; 246
    4bee:	1f 4f       	sbci	r17, 0xFF	; 255
			hx0=10+tdiv;
			
			y0=53-I_Temp;
    4bf0:	80 91 ae 0b 	lds	r24, 0x0BAE	; 0x800bae <I_Temp>
    4bf4:	74 01       	movw	r14, r8
    4bf6:	e8 1a       	sub	r14, r24
    4bf8:	f1 08       	sbc	r15, r1
			hy0=53-(I_RH/2);
    4bfa:	80 91 af 0b 	lds	r24, 0x0BAF	; 0x800baf <I_RH>
    4bfe:	86 95       	lsr	r24
    4c00:	64 01       	movw	r12, r8
    4c02:	c8 1a       	sub	r12, r24
    4c04:	d1 08       	sbc	r13, r1
		}
		
		
		
		if(x0>=127||trig==1||det==1||btg==1)
    4c06:	0f 37       	cpi	r16, 0x7F	; 127
    4c08:	11 05       	cpc	r17, r1
    4c0a:	9c f4       	brge	.+38     	; 0x4c32 <thgraph+0x142>
    4c0c:	80 91 55 06 	lds	r24, 0x0655	; 0x800655 <trig>
    4c10:	90 91 56 06 	lds	r25, 0x0656	; 0x800656 <trig+0x1>
    4c14:	01 97       	sbiw	r24, 0x01	; 1
    4c16:	69 f0       	breq	.+26     	; 0x4c32 <thgraph+0x142>
    4c18:	80 91 4f 06 	lds	r24, 0x064F	; 0x80064f <det>
    4c1c:	90 91 50 06 	lds	r25, 0x0650	; 0x800650 <det+0x1>
    4c20:	01 97       	sbiw	r24, 0x01	; 1
    4c22:	39 f0       	breq	.+14     	; 0x4c32 <thgraph+0x142>
    4c24:	80 91 fe 05 	lds	r24, 0x05FE	; 0x8005fe <btg>
    4c28:	90 91 ff 05 	lds	r25, 0x05FF	; 0x8005ff <btg+0x1>
    4c2c:	01 97       	sbiw	r24, 0x01	; 1
    4c2e:	09 f0       	breq	.+2      	; 0x4c32 <thgraph+0x142>
    4c30:	43 c0       	rjmp	.+134    	; 0x4cb8 <thgraph+0x1c8>
		{
			trig=0;
    4c32:	10 92 56 06 	sts	0x0656, r1	; 0x800656 <trig+0x1>
    4c36:	10 92 55 06 	sts	0x0655, r1	; 0x800655 <trig>
			x0=10;
			hx0=10;
			x1=10;
			hx1=10;
			g_clear();
    4c3a:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
			g_line(10,0,10,63);
    4c3e:	2f e3       	ldi	r18, 0x3F	; 63
    4c40:	4a e0       	ldi	r20, 0x0A	; 10
    4c42:	60 e0       	ldi	r22, 0x00	; 0
    4c44:	8a e0       	ldi	r24, 0x0A	; 10
    4c46:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
			g_line(0,53,127,53);
    4c4a:	25 e3       	ldi	r18, 0x35	; 53
    4c4c:	4f e7       	ldi	r20, 0x7F	; 127
    4c4e:	65 e3       	ldi	r22, 0x35	; 53
    4c50:	80 e0       	ldi	r24, 0x00	; 0
    4c52:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
			
			g_xy(12,56);
    4c56:	68 e3       	ldi	r22, 0x38	; 56
    4c58:	70 e0       	ldi	r23, 0x00	; 0
    4c5a:	8c e0       	ldi	r24, 0x0C	; 12
    4c5c:	90 e0       	ldi	r25, 0x00	; 0
    4c5e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("tem:");
    4c62:	82 e4       	ldi	r24, 0x42	; 66
    4c64:	95 e0       	ldi	r25, 0x05	; 5
    4c66:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			prints(tem);
    4c6a:	8d e9       	ldi	r24, 0x9D	; 157
    4c6c:	9b e0       	ldi	r25, 0x0B	; 11
    4c6e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			
			g_xy(70,56);
    4c72:	68 e3       	ldi	r22, 0x38	; 56
    4c74:	70 e0       	ldi	r23, 0x00	; 0
    4c76:	86 e4       	ldi	r24, 0x46	; 70
    4c78:	90 e0       	ldi	r25, 0x00	; 0
    4c7a:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
			prints("hum:");
    4c7e:	87 e4       	ldi	r24, 0x47	; 71
    4c80:	95 e0       	ldi	r25, 0x05	; 5
    4c82:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			prints(hum);
    4c86:	84 e6       	ldi	r24, 0x64	; 100
    4c88:	96 e0       	ldi	r25, 0x06	; 6
    4c8a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
			
			g_render();
    4c8e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
			det=0;
    4c92:	10 92 50 06 	sts	0x0650, r1	; 0x800650 <det+0x1>
    4c96:	10 92 4f 06 	sts	0x064F, r1	; 0x80064f <det>
			autotrig=0;
    4c9a:	10 92 58 06 	sts	0x0658, r1	; 0x800658 <autotrig+0x1>
    4c9e:	10 92 57 06 	sts	0x0657, r1	; 0x800657 <autotrig>
			btg=0;
    4ca2:	10 92 ff 05 	sts	0x05FF, r1	; 0x8005ff <btg+0x1>
    4ca6:	10 92 fe 05 	sts	0x05FE, r1	; 0x8005fe <btg>
		if(x0>=127||trig==1||det==1||btg==1)
		{
			trig=0;
			x0=10;
			hx0=10;
			x1=10;
    4caa:	0f 2e       	mov	r0, r31
    4cac:	fa e0       	ldi	r31, 0x0A	; 10
    4cae:	bf 2e       	mov	r11, r31
    4cb0:	f0 2d       	mov	r31, r0
		
		
		if(x0>=127||trig==1||det==1||btg==1)
		{
			trig=0;
			x0=10;
    4cb2:	c5 2d       	mov	r28, r5
    4cb4:	d6 2d       	mov	r29, r6
    4cb6:	02 c0       	rjmp	.+4      	; 0x4cbc <thgraph+0x1cc>
    4cb8:	bc 2e       	mov	r11, r28
    4cba:	e8 01       	movw	r28, r16
			btg=0;
		}
		
		
		
		g_clearline(7);
    4cbc:	87 e0       	ldi	r24, 0x07	; 7
    4cbe:	0e 94 b1 04 	call	0x962	; 0x962 <g_clearline>
		g_line(10,0,10,63);
    4cc2:	2f e3       	ldi	r18, 0x3F	; 63
    4cc4:	4a e0       	ldi	r20, 0x0A	; 10
    4cc6:	60 e0       	ldi	r22, 0x00	; 0
    4cc8:	8a e0       	ldi	r24, 0x0A	; 10
    4cca:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
		g_line(0,53,127,53);
    4cce:	25 e3       	ldi	r18, 0x35	; 53
    4cd0:	4f e7       	ldi	r20, 0x7F	; 127
    4cd2:	65 e3       	ldi	r22, 0x35	; 53
    4cd4:	80 e0       	ldi	r24, 0x00	; 0
    4cd6:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
		
		g_xy(12,56);
    4cda:	68 e3       	ldi	r22, 0x38	; 56
    4cdc:	70 e0       	ldi	r23, 0x00	; 0
    4cde:	8c e0       	ldi	r24, 0x0C	; 12
    4ce0:	90 e0       	ldi	r25, 0x00	; 0
    4ce2:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("tem:");
    4ce6:	82 e4       	ldi	r24, 0x42	; 66
    4ce8:	95 e0       	ldi	r25, 0x05	; 5
    4cea:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		prints(tem);
    4cee:	8d e9       	ldi	r24, 0x9D	; 157
    4cf0:	9b e0       	ldi	r25, 0x0B	; 11
    4cf2:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		
		g_xy(70,56);
    4cf6:	68 e3       	ldi	r22, 0x38	; 56
    4cf8:	70 e0       	ldi	r23, 0x00	; 0
    4cfa:	86 e4       	ldi	r24, 0x46	; 70
    4cfc:	90 e0       	ldi	r25, 0x00	; 0
    4cfe:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("hum:");
    4d02:	87 e4       	ldi	r24, 0x47	; 71
    4d04:	95 e0       	ldi	r25, 0x05	; 5
    4d06:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		prints(hum);
    4d0a:	84 e6       	ldi	r24, 0x64	; 100
    4d0c:	96 e0       	ldi	r25, 0x06	; 6
    4d0e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>

		
		g_line(x0,y0,x1,y1);
    4d12:	2a 2d       	mov	r18, r10
    4d14:	4b 2d       	mov	r20, r11
    4d16:	6e 2d       	mov	r22, r14
    4d18:	8c 2f       	mov	r24, r28
    4d1a:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
		g_cir(x0,y0,1);
    4d1e:	41 e0       	ldi	r20, 0x01	; 1
    4d20:	6e 2d       	mov	r22, r14
    4d22:	8c 2f       	mov	r24, r28
    4d24:	0e 94 d1 05 	call	0xba2	; 0xba2 <g_cir>
		
		g_line(hx0,hy0,hx1,hy1);
    4d28:	27 2d       	mov	r18, r7
    4d2a:	4b 2d       	mov	r20, r11
    4d2c:	6c 2d       	mov	r22, r12
    4d2e:	8c 2f       	mov	r24, r28
    4d30:	0e 94 cf 04 	call	0x99e	; 0x99e <g_line>
		g_cir(hx0,hy0,1);
    4d34:	41 e0       	ldi	r20, 0x01	; 1
    4d36:	6c 2d       	mov	r22, r12
    4d38:	8c 2f       	mov	r24, r28
    4d3a:	0e 94 d1 05 	call	0xba2	; 0xba2 <g_cir>
		
		g_render();
    4d3e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		
		if(x0!=10)
    4d42:	ca 30       	cpi	r28, 0x0A	; 10
    4d44:	d1 05       	cpc	r29, r1
    4d46:	09 f0       	breq	.+2      	; 0x4d4a <thgraph+0x25a>
    4d48:	10 cf       	rjmp	.-480    	; 0x4b6a <thgraph+0x7a>
			x1=x0;
			y1=y0;
			hx1=hx0;
			hy1=hy0;
			
			x0=1;
    4d4a:	01 e0       	ldi	r16, 0x01	; 1
    4d4c:	10 e0       	ldi	r17, 0x00	; 0
    4d4e:	0e cf       	rjmp	.-484    	; 0x4b6c <thgraph+0x7c>
			hx1=10;
			y0=53-I_Temp;
			hy0=53-(I_RH/2);
		}
		
		if(x0!=10 && x0!=1)
    4d50:	01 30       	cpi	r16, 0x01	; 1
    4d52:	11 05       	cpc	r17, r1
    4d54:	09 f0       	breq	.+2      	; 0x4d58 <thgraph+0x268>
    4d56:	32 cf       	rjmp	.-412    	; 0x4bbc <thgraph+0xcc>
    4d58:	45 cf       	rjmp	.-374    	; 0x4be4 <thgraph+0xf4>
			hx0=1;
		}
		

	}
}
    4d5a:	df 91       	pop	r29
    4d5c:	cf 91       	pop	r28
    4d5e:	1f 91       	pop	r17
    4d60:	0f 91       	pop	r16
    4d62:	ff 90       	pop	r15
    4d64:	ef 90       	pop	r14
    4d66:	df 90       	pop	r13
    4d68:	cf 90       	pop	r12
    4d6a:	bf 90       	pop	r11
    4d6c:	af 90       	pop	r10
    4d6e:	9f 90       	pop	r9
    4d70:	8f 90       	pop	r8
    4d72:	7f 90       	pop	r7
    4d74:	6f 90       	pop	r6
    4d76:	5f 90       	pop	r5
    4d78:	08 95       	ret

00004d7a <mainmod>:
int swtrig=0;
int otrig=0;
void mainmod()
{
	
	if(otrig==0)
    4d7a:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <__data_end>
    4d7e:	90 91 f7 05 	lds	r25, 0x05F7	; 0x8005f7 <__data_end+0x1>
    4d82:	89 2b       	or	r24, r25
    4d84:	99 f5       	brne	.+102    	; 0x4dec <mainmod+0x72>
	{
		g_clear();
    4d86:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
		g_xy(31,0);
    4d8a:	60 e0       	ldi	r22, 0x00	; 0
    4d8c:	70 e0       	ldi	r23, 0x00	; 0
    4d8e:	8f e1       	ldi	r24, 0x1F	; 31
    4d90:	90 e0       	ldi	r25, 0x00	; 0
    4d92:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Select Mod:");
    4d96:	8c e4       	ldi	r24, 0x4C	; 76
    4d98:	95 e0       	ldi	r25, 0x05	; 5
    4d9a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(0,24);
    4d9e:	68 e1       	ldi	r22, 0x18	; 24
    4da0:	70 e0       	ldi	r23, 0x00	; 0
    4da2:	80 e0       	ldi	r24, 0x00	; 0
    4da4:	90 e0       	ldi	r25, 0x00	; 0
    4da6:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("sw1:Setting Mode");
    4daa:	88 e5       	ldi	r24, 0x58	; 88
    4dac:	95 e0       	ldi	r25, 0x05	; 5
    4dae:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(0,40);
    4db2:	68 e2       	ldi	r22, 0x28	; 40
    4db4:	70 e0       	ldi	r23, 0x00	; 0
    4db6:	80 e0       	ldi	r24, 0x00	; 0
    4db8:	90 e0       	ldi	r25, 0x00	; 0
    4dba:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("sw3:Operation Mode");
    4dbe:	89 e6       	ldi	r24, 0x69	; 105
    4dc0:	95 e0       	ldi	r25, 0x05	; 5
    4dc2:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_render();
    4dc6:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		
		test=eeprom_read_byte((uint16_t*)46);
    4dca:	8e e2       	ldi	r24, 0x2E	; 46
    4dcc:	90 e0       	ldi	r25, 0x00	; 0
    4dce:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    4dd2:	90 e0       	ldi	r25, 0x00	; 0
    4dd4:	90 93 fd 05 	sts	0x05FD, r25	; 0x8005fd <test+0x1>
    4dd8:	80 93 fc 05 	sts	0x05FC, r24	; 0x8005fc <test>
		if(test==1) ttrig=1;
    4ddc:	01 97       	sbiw	r24, 0x01	; 1
    4dde:	31 f4       	brne	.+12     	; 0x4dec <mainmod+0x72>
    4de0:	81 e0       	ldi	r24, 0x01	; 1
    4de2:	90 e0       	ldi	r25, 0x00	; 0
    4de4:	90 93 5c 06 	sts	0x065C, r25	; 0x80065c <ttrig+0x1>
    4de8:	80 93 5b 06 	sts	0x065B, r24	; 0x80065b <ttrig>
	}
	if(otrig==1)
    4dec:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <__data_end>
    4df0:	90 91 f7 05 	lds	r25, 0x05F7	; 0x8005f7 <__data_end+0x1>
    4df4:	01 97       	sbiw	r24, 0x01	; 1
    4df6:	09 f0       	breq	.+2      	; 0x4dfa <mainmod+0x80>
    4df8:	1e c1       	rjmp	.+572    	; 0x5036 <mainmod+0x2bc>
	{
		g_clear();
    4dfa:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
		g_xy(22,0);
    4dfe:	60 e0       	ldi	r22, 0x00	; 0
    4e00:	70 e0       	ldi	r23, 0x00	; 0
    4e02:	86 e1       	ldi	r24, 0x16	; 22
    4e04:	90 e0       	ldi	r25, 0x00	; 0
    4e06:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Operation Mode");
    4e0a:	8d e6       	ldi	r24, 0x6D	; 109
    4e0c:	95 e0       	ldi	r25, 0x05	; 5
    4e0e:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(12,16);
    4e12:	60 e1       	ldi	r22, 0x10	; 16
    4e14:	70 e0       	ldi	r23, 0x00	; 0
    4e16:	8c e0       	ldi	r24, 0x0C	; 12
    4e18:	90 e0       	ldi	r25, 0x00	; 0
    4e1a:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Temp/Humi Graph");
    4e1e:	8c e7       	ldi	r24, 0x7C	; 124
    4e20:	95 e0       	ldi	r25, 0x05	; 5
    4e22:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(12,32);
    4e26:	60 e2       	ldi	r22, 0x20	; 32
    4e28:	70 e0       	ldi	r23, 0x00	; 0
    4e2a:	8c e0       	ldi	r24, 0x0C	; 12
    4e2c:	90 e0       	ldi	r25, 0x00	; 0
    4e2e:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Light Graph");
    4e32:	8c e8       	ldi	r24, 0x8C	; 140
    4e34:	95 e0       	ldi	r25, 0x05	; 5
    4e36:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(12,48);
    4e3a:	60 e3       	ldi	r22, 0x30	; 48
    4e3c:	70 e0       	ldi	r23, 0x00	; 0
    4e3e:	8c e0       	ldi	r24, 0x0C	; 12
    4e40:	90 e0       	ldi	r25, 0x00	; 0
    4e42:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		prints("Pesticide Mode");
    4e46:	88 e9       	ldi	r24, 0x98	; 152
    4e48:	95 e0       	ldi	r25, 0x05	; 5
    4e4a:	0e 94 4b 09 	call	0x1296	; 0x1296 <prints>
		g_xy(0,(swtrig*16)+16);
    4e4e:	60 91 f8 05 	lds	r22, 0x05F8	; 0x8005f8 <swtrig>
    4e52:	70 91 f9 05 	lds	r23, 0x05F9	; 0x8005f9 <swtrig+0x1>
    4e56:	6f 5f       	subi	r22, 0xFF	; 255
    4e58:	7f 4f       	sbci	r23, 0xFF	; 255
    4e5a:	62 95       	swap	r22
    4e5c:	72 95       	swap	r23
    4e5e:	70 7f       	andi	r23, 0xF0	; 240
    4e60:	76 27       	eor	r23, r22
    4e62:	60 7f       	andi	r22, 0xF0	; 240
    4e64:	76 27       	eor	r23, r22
    4e66:	80 e0       	ldi	r24, 0x00	; 0
    4e68:	90 e0       	ldi	r25, 0x00	; 0
    4e6a:	0e 94 27 03 	call	0x64e	; 0x64e <g_xy>
		printc('<');
    4e6e:	8c e3       	ldi	r24, 0x3C	; 60
    4e70:	0e 94 70 07 	call	0xee0	; 0xee0 <printc>
		g_render();
    4e74:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
		
		if(!(PINC&=(1<<sw4))&&swtrig<2)
    4e78:	83 b3       	in	r24, 0x13	; 19
    4e7a:	88 70       	andi	r24, 0x08	; 8
    4e7c:	83 bb       	out	0x13, r24	; 19
    4e7e:	81 11       	cpse	r24, r1
    4e80:	14 c0       	rjmp	.+40     	; 0x4eaa <mainmod+0x130>
    4e82:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <swtrig>
    4e86:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <swtrig+0x1>
    4e8a:	02 97       	sbiw	r24, 0x02	; 2
    4e8c:	74 f4       	brge	.+28     	; 0x4eaa <mainmod+0x130>
		{
			while(!(PINC&=(1<<sw4))){}
    4e8e:	83 b3       	in	r24, 0x13	; 19
    4e90:	88 70       	andi	r24, 0x08	; 8
    4e92:	83 bb       	out	0x13, r24	; 19
    4e94:	88 23       	and	r24, r24
    4e96:	d9 f3       	breq	.-10     	; 0x4e8e <mainmod+0x114>
			swtrig++;
    4e98:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <swtrig>
    4e9c:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <swtrig+0x1>
    4ea0:	01 96       	adiw	r24, 0x01	; 1
    4ea2:	90 93 f9 05 	sts	0x05F9, r25	; 0x8005f9 <swtrig+0x1>
    4ea6:	80 93 f8 05 	sts	0x05F8, r24	; 0x8005f8 <swtrig>
		}
		if(!(PINC&=(1<<sw2))&&swtrig>0)
    4eaa:	83 b3       	in	r24, 0x13	; 19
    4eac:	82 70       	andi	r24, 0x02	; 2
    4eae:	83 bb       	out	0x13, r24	; 19
    4eb0:	81 11       	cpse	r24, r1
    4eb2:	15 c0       	rjmp	.+42     	; 0x4ede <mainmod+0x164>
    4eb4:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <swtrig>
    4eb8:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <swtrig+0x1>
    4ebc:	18 16       	cp	r1, r24
    4ebe:	19 06       	cpc	r1, r25
    4ec0:	74 f4       	brge	.+28     	; 0x4ede <mainmod+0x164>
		{
			while(!(PINC&=(1<<sw2))){}
    4ec2:	83 b3       	in	r24, 0x13	; 19
    4ec4:	82 70       	andi	r24, 0x02	; 2
    4ec6:	83 bb       	out	0x13, r24	; 19
    4ec8:	88 23       	and	r24, r24
    4eca:	d9 f3       	breq	.-10     	; 0x4ec2 <mainmod+0x148>
			swtrig--;
    4ecc:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <swtrig>
    4ed0:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <swtrig+0x1>
    4ed4:	01 97       	sbiw	r24, 0x01	; 1
    4ed6:	90 93 f9 05 	sts	0x05F9, r25	; 0x8005f9 <swtrig+0x1>
    4eda:	80 93 f8 05 	sts	0x05F8, r24	; 0x8005f8 <swtrig>
		}
		
		if(!(PINC&=(1<<sw5))&&swtrig==0)
    4ede:	83 b3       	in	r24, 0x13	; 19
    4ee0:	80 71       	andi	r24, 0x10	; 16
    4ee2:	83 bb       	out	0x13, r24	; 19
    4ee4:	81 11       	cpse	r24, r1
    4ee6:	34 c0       	rjmp	.+104    	; 0x4f50 <mainmod+0x1d6>
    4ee8:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <swtrig>
    4eec:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <swtrig+0x1>
    4ef0:	89 2b       	or	r24, r25
    4ef2:	71 f5       	brne	.+92     	; 0x4f50 <mainmod+0x1d6>
		{
			while(!(PINC&=(1<<sw5))){}
    4ef4:	83 b3       	in	r24, 0x13	; 19
    4ef6:	80 71       	andi	r24, 0x10	; 16
    4ef8:	83 bb       	out	0x13, r24	; 19
    4efa:	88 23       	and	r24, r24
    4efc:	d9 f3       	breq	.-10     	; 0x4ef4 <mainmod+0x17a>
			thgraph();	otrig=0;
    4efe:	f8 dd       	rcall	.-1040   	; 0x4af0 <thgraph>
    4f00:	10 92 f7 05 	sts	0x05F7, r1	; 0x8005f7 <__data_end+0x1>
    4f04:	10 92 f6 05 	sts	0x05F6, r1	; 0x8005f6 <__data_end>
			print("\r\f");
    4f08:	87 ea       	ldi	r24, 0xA7	; 167
    4f0a:	95 e0       	ldi	r25, 0x05	; 5
    4f0c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("loading...");
    4f10:	8a ea       	ldi	r24, 0xAA	; 170
    4f12:	95 e0       	ldi	r25, 0x05	; 5
    4f14:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("      ok");
    4f18:	85 eb       	ldi	r24, 0xB5	; 181
    4f1a:	95 e0       	ldi	r25, 0x05	; 5
    4f1c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\nvalue setting...");
    4f20:	8e eb       	ldi	r24, 0xBE	; 190
    4f22:	95 e0       	ldi	r25, 0x05	; 5
    4f24:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("ok");
    4f28:	8b eb       	ldi	r24, 0xBB	; 187
    4f2a:	95 e0       	ldi	r25, 0x05	; 5
    4f2c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\ntime setting...");
    4f30:	81 ed       	ldi	r24, 0xD1	; 209
    4f32:	95 e0       	ldi	r25, 0x05	; 5
    4f34:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print(" ok");
    4f38:	8a eb       	ldi	r24, 0xBA	; 186
    4f3a:	95 e0       	ldi	r25, 0x05	; 5
    4f3c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\nPower setting...");
    4f40:	83 ee       	ldi	r24, 0xE3	; 227
    4f42:	95 e0       	ldi	r25, 0x05	; 5
    4f44:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("ok");
    4f48:	8b eb       	ldi	r24, 0xBB	; 187
    4f4a:	95 e0       	ldi	r25, 0x05	; 5
    4f4c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		}
		if(!(PINC&=(1<<sw5))&&swtrig==1)
    4f50:	83 b3       	in	r24, 0x13	; 19
    4f52:	80 71       	andi	r24, 0x10	; 16
    4f54:	83 bb       	out	0x13, r24	; 19
    4f56:	81 11       	cpse	r24, r1
    4f58:	34 c0       	rjmp	.+104    	; 0x4fc2 <mainmod+0x248>
    4f5a:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <swtrig>
    4f5e:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <swtrig+0x1>
    4f62:	01 97       	sbiw	r24, 0x01	; 1
    4f64:	71 f5       	brne	.+92     	; 0x4fc2 <mainmod+0x248>
		{
			while(!(PINC&=(1<<sw5))){}
    4f66:	83 b3       	in	r24, 0x13	; 19
    4f68:	80 71       	andi	r24, 0x10	; 16
    4f6a:	83 bb       	out	0x13, r24	; 19
    4f6c:	88 23       	and	r24, r24
			lgraph(); otrig=0;
    4f6e:	d9 f3       	breq	.-10     	; 0x4f66 <mainmod+0x1ec>
    4f70:	96 db       	rcall	.-2260   	; 0x469e <lgraph>
    4f72:	10 92 f7 05 	sts	0x05F7, r1	; 0x8005f7 <__data_end+0x1>
    4f76:	10 92 f6 05 	sts	0x05F6, r1	; 0x8005f6 <__data_end>
			print("\r\f");
    4f7a:	87 ea       	ldi	r24, 0xA7	; 167
    4f7c:	95 e0       	ldi	r25, 0x05	; 5
    4f7e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("loading...");
    4f82:	8a ea       	ldi	r24, 0xAA	; 170
    4f84:	95 e0       	ldi	r25, 0x05	; 5
    4f86:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("      ok");
    4f8a:	85 eb       	ldi	r24, 0xB5	; 181
    4f8c:	95 e0       	ldi	r25, 0x05	; 5
    4f8e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\nvalue setting...");
    4f92:	8e eb       	ldi	r24, 0xBE	; 190
    4f94:	95 e0       	ldi	r25, 0x05	; 5
    4f96:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("ok");
    4f9a:	8b eb       	ldi	r24, 0xBB	; 187
    4f9c:	95 e0       	ldi	r25, 0x05	; 5
    4f9e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\ntime setting...");
    4fa2:	81 ed       	ldi	r24, 0xD1	; 209
    4fa4:	95 e0       	ldi	r25, 0x05	; 5
    4fa6:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print(" ok");
    4faa:	8a eb       	ldi	r24, 0xBA	; 186
    4fac:	95 e0       	ldi	r25, 0x05	; 5
    4fae:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\nPower setting...");
    4fb2:	83 ee       	ldi	r24, 0xE3	; 227
    4fb4:	95 e0       	ldi	r25, 0x05	; 5
    4fb6:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("ok");
    4fba:	8b eb       	ldi	r24, 0xBB	; 187
    4fbc:	95 e0       	ldi	r25, 0x05	; 5
    4fbe:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		}
		if(!(PINC&=(1<<sw5))&&swtrig==2)
    4fc2:	83 b3       	in	r24, 0x13	; 19
    4fc4:	80 71       	andi	r24, 0x10	; 16
    4fc6:	83 bb       	out	0x13, r24	; 19
    4fc8:	81 11       	cpse	r24, r1
    4fca:	35 c0       	rjmp	.+106    	; 0x5036 <mainmod+0x2bc>
    4fcc:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <swtrig>
    4fd0:	90 91 f9 05 	lds	r25, 0x05F9	; 0x8005f9 <swtrig+0x1>
    4fd4:	02 97       	sbiw	r24, 0x02	; 2
    4fd6:	79 f5       	brne	.+94     	; 0x5036 <mainmod+0x2bc>
		{
			while(!(PINC&=(1<<sw5))){}
    4fd8:	83 b3       	in	r24, 0x13	; 19
    4fda:	80 71       	andi	r24, 0x10	; 16
    4fdc:	83 bb       	out	0x13, r24	; 19
    4fde:	88 23       	and	r24, r24
    4fe0:	d9 f3       	breq	.-10     	; 0x4fd8 <mainmod+0x25e>
			pes(); otrig=0;
    4fe2:	0e 94 34 1b 	call	0x3668	; 0x3668 <pes>
    4fe6:	10 92 f7 05 	sts	0x05F7, r1	; 0x8005f7 <__data_end+0x1>
    4fea:	10 92 f6 05 	sts	0x05F6, r1	; 0x8005f6 <__data_end>
			print("\r\f");
    4fee:	87 ea       	ldi	r24, 0xA7	; 167
    4ff0:	95 e0       	ldi	r25, 0x05	; 5
    4ff2:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("loading...");
    4ff6:	8a ea       	ldi	r24, 0xAA	; 170
    4ff8:	95 e0       	ldi	r25, 0x05	; 5
    4ffa:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("      ok");
    4ffe:	85 eb       	ldi	r24, 0xB5	; 181
    5000:	95 e0       	ldi	r25, 0x05	; 5
    5002:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\nvalue setting...");
    5006:	8e eb       	ldi	r24, 0xBE	; 190
    5008:	95 e0       	ldi	r25, 0x05	; 5
    500a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("ok");
    500e:	8b eb       	ldi	r24, 0xBB	; 187
    5010:	95 e0       	ldi	r25, 0x05	; 5
    5012:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\ntime setting...");
    5016:	81 ed       	ldi	r24, 0xD1	; 209
    5018:	95 e0       	ldi	r25, 0x05	; 5
    501a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print(" ok");
    501e:	8a eb       	ldi	r24, 0xBA	; 186
    5020:	95 e0       	ldi	r25, 0x05	; 5
    5022:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("\r\nPower setting...");
    5026:	83 ee       	ldi	r24, 0xE3	; 227
    5028:	95 e0       	ldi	r25, 0x05	; 5
    502a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
			print("ok");
    502e:	8b eb       	ldi	r24, 0xBB	; 187
    5030:	95 e0       	ldi	r25, 0x05	; 5
    5032:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		
		
		
	}
	
	if(!(PINC&=(1<<sw1))&&otrig==0)
    5036:	83 b3       	in	r24, 0x13	; 19
    5038:	81 70       	andi	r24, 0x01	; 1
    503a:	83 bb       	out	0x13, r24	; 19
    503c:	81 11       	cpse	r24, r1
    503e:	35 c0       	rjmp	.+106    	; 0x50aa <mainmod+0x330>
    5040:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <__data_end>
    5044:	90 91 f7 05 	lds	r25, 0x05F7	; 0x8005f7 <__data_end+0x1>
    5048:	89 2b       	or	r24, r25
    504a:	79 f5       	brne	.+94     	; 0x50aa <mainmod+0x330>
	{
		while(!(PINC&=(1<<sw1))){}
    504c:	83 b3       	in	r24, 0x13	; 19
    504e:	81 70       	andi	r24, 0x01	; 1
    5050:	83 bb       	out	0x13, r24	; 19
    5052:	88 23       	and	r24, r24
    5054:	d9 f3       	breq	.-10     	; 0x504c <mainmod+0x2d2>
		
		print("\r\f");
    5056:	87 ea       	ldi	r24, 0xA7	; 167
    5058:	95 e0       	ldi	r25, 0x05	; 5
    505a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		print("loading...");
    505e:	8a ea       	ldi	r24, 0xAA	; 170
    5060:	95 e0       	ldi	r25, 0x05	; 5
    5062:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		print("      ok");
    5066:	85 eb       	ldi	r24, 0xB5	; 181
    5068:	95 e0       	ldi	r25, 0x05	; 5
    506a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		print("\r\nvalue setting...");
    506e:	8e eb       	ldi	r24, 0xBE	; 190
    5070:	95 e0       	ldi	r25, 0x05	; 5
    5072:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		setting();
    5076:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <setting>
		print("ok");
    507a:	8b eb       	ldi	r24, 0xBB	; 187
    507c:	95 e0       	ldi	r25, 0x05	; 5
    507e:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		print("\r\ntime setting...");
    5082:	81 ed       	ldi	r24, 0xD1	; 209
    5084:	95 e0       	ldi	r25, 0x05	; 5
    5086:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		timeset();
    508a:	0e 94 07 13 	call	0x260e	; 0x260e <timeset>
		print(" ok");
    508e:	8a eb       	ldi	r24, 0xBA	; 186
    5090:	95 e0       	ldi	r25, 0x05	; 5
    5092:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		print("\r\nPower setting...");
    5096:	83 ee       	ldi	r24, 0xE3	; 227
    5098:	95 e0       	ldi	r25, 0x05	; 5
    509a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		onset();
    509e:	0e 94 09 11 	call	0x2212	; 0x2212 <onset>
		print("ok");
    50a2:	8b eb       	ldi	r24, 0xBB	; 187
    50a4:	95 e0       	ldi	r25, 0x05	; 5
    50a6:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
		
	}

	if(!(PINC&=(1<<sw3))&&otrig==0)
    50aa:	83 b3       	in	r24, 0x13	; 19
    50ac:	84 70       	andi	r24, 0x04	; 4
    50ae:	83 bb       	out	0x13, r24	; 19
    50b0:	81 11       	cpse	r24, r1
    50b2:	11 c0       	rjmp	.+34     	; 0x50d6 <mainmod+0x35c>
    50b4:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <__data_end>
    50b8:	90 91 f7 05 	lds	r25, 0x05F7	; 0x8005f7 <__data_end+0x1>
    50bc:	89 2b       	or	r24, r25
    50be:	59 f4       	brne	.+22     	; 0x50d6 <mainmod+0x35c>
	{
		while(!(PINC&=(1<<sw3))){};
    50c0:	83 b3       	in	r24, 0x13	; 19
    50c2:	84 70       	andi	r24, 0x04	; 4
    50c4:	83 bb       	out	0x13, r24	; 19
    50c6:	88 23       	and	r24, r24
    50c8:	d9 f3       	breq	.-10     	; 0x50c0 <mainmod+0x346>
		otrig=1;
    50ca:	81 e0       	ldi	r24, 0x01	; 1
    50cc:	90 e0       	ldi	r25, 0x00	; 0
    50ce:	90 93 f7 05 	sts	0x05F7, r25	; 0x8005f7 <__data_end+0x1>
    50d2:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <__data_end>
    50d6:	08 95       	ret

000050d8 <main>:
	}
}

int main(void)
{
	DDRB=0xff;
    50d8:	8f ef       	ldi	r24, 0xFF	; 255
    50da:	87 bb       	out	0x17, r24	; 23
	DDRC=0x00;
    50dc:	14 ba       	out	0x14, r1	; 20
	DDRE=0xff;
    50de:	82 b9       	out	0x02, r24	; 2
	PORTE&=~(1<<buz);
    50e0:	1e 98       	cbi	0x03, 6	; 3
	
	sprintf(&err_code[0][0],"%s","Tem_Over_Max");
    50e2:	8d e0       	ldi	r24, 0x0D	; 13
    50e4:	e9 ea       	ldi	r30, 0xA9	; 169
    50e6:	f3 e0       	ldi	r31, 0x03	; 3
    50e8:	ad e4       	ldi	r26, 0x4D	; 77
    50ea:	bb e0       	ldi	r27, 0x0B	; 11
    50ec:	01 90       	ld	r0, Z+
    50ee:	0d 92       	st	X+, r0
    50f0:	8a 95       	dec	r24
    50f2:	e1 f7       	brne	.-8      	; 0x50ec <main+0x14>
	sprintf(&err_code[1][0],"%s","Tem_Over_Min");
    50f4:	8d e0       	ldi	r24, 0x0D	; 13
    50f6:	e6 eb       	ldi	r30, 0xB6	; 182
    50f8:	f3 e0       	ldi	r31, 0x03	; 3
    50fa:	aa e5       	ldi	r26, 0x5A	; 90
    50fc:	bb e0       	ldi	r27, 0x0B	; 11
    50fe:	01 90       	ld	r0, Z+
    5100:	0d 92       	st	X+, r0
    5102:	8a 95       	dec	r24
    5104:	e1 f7       	brne	.-8      	; 0x50fe <main+0x26>
	sprintf(&err_code[2][0],"%s","Hum_Over_Max");
    5106:	8d e0       	ldi	r24, 0x0D	; 13
    5108:	e3 ec       	ldi	r30, 0xC3	; 195
    510a:	f3 e0       	ldi	r31, 0x03	; 3
    510c:	a7 e6       	ldi	r26, 0x67	; 103
    510e:	bb e0       	ldi	r27, 0x0B	; 11
    5110:	01 90       	ld	r0, Z+
    5112:	0d 92       	st	X+, r0
    5114:	8a 95       	dec	r24
    5116:	e1 f7       	brne	.-8      	; 0x5110 <main+0x38>
	sprintf(&err_code[3][0],"%s","Hum_Over_Min");
    5118:	8d e0       	ldi	r24, 0x0D	; 13
    511a:	e0 ed       	ldi	r30, 0xD0	; 208
    511c:	f3 e0       	ldi	r31, 0x03	; 3
    511e:	a4 e7       	ldi	r26, 0x74	; 116
    5120:	bb e0       	ldi	r27, 0x0B	; 11
    5122:	01 90       	ld	r0, Z+
    5124:	0d 92       	st	X+, r0
    5126:	8a 95       	dec	r24
    5128:	e1 f7       	brne	.-8      	; 0x5122 <main+0x4a>
	
	sei();
    512a:	78 94       	sei
	timer0_init();
    512c:	0e 94 67 0c 	call	0x18ce	; 0x18ce <timer0_init>
	timer2_init();
    5130:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <timer2_init>
	serial1_init();
    5134:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <serial1_init>
	
	g_init();
    5138:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <g_init>
	g_clear();
    513c:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <g_clear>
	g_font(Font5x8,5,8);
    5140:	48 e0       	ldi	r20, 0x08	; 8
    5142:	65 e0       	ldi	r22, 0x05	; 5
    5144:	8c ea       	ldi	r24, 0xAC	; 172
    5146:	91 e0       	ldi	r25, 0x01	; 1
    5148:	0e 94 52 07 	call	0xea4	; 0xea4 <g_font>
	PORTE&=0x00;
    514c:	83 b1       	in	r24, 0x03	; 3
    514e:	13 b8       	out	0x03, r1	; 3
	g_render();
    5150:	0e 94 da 02 	call	0x5b4	; 0x5b4 <g_render>
	
	autotrig=0;
    5154:	10 92 58 06 	sts	0x0658, r1	; 0x800658 <autotrig+0x1>
    5158:	10 92 57 06 	sts	0x0657, r1	; 0x800657 <autotrig>
	fpwmtrig=0;
    515c:	10 92 35 06 	sts	0x0635, r1	; 0x800635 <fpwmtrig+0x1>
    5160:	10 92 34 06 	sts	0x0634, r1	; 0x800634 <fpwmtrig>
	spwmtrig=0;
    5164:	10 92 31 06 	sts	0x0631, r1	; 0x800631 <spwmtrig+0x1>
    5168:	10 92 30 06 	sts	0x0630, r1	; 0x800630 <spwmtrig>
	
	test=eeprom_read_byte((uint16_t*)46);
    516c:	8e e2       	ldi	r24, 0x2E	; 46
    516e:	90 e0       	ldi	r25, 0x00	; 0
    5170:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    5174:	90 e0       	ldi	r25, 0x00	; 0
    5176:	90 93 fd 05 	sts	0x05FD, r25	; 0x8005fd <test+0x1>
    517a:	80 93 fc 05 	sts	0x05FC, r24	; 0x8005fc <test>
	if(test==1)
    517e:	01 97       	sbiw	r24, 0x01	; 1
    5180:	d9 f4       	brne	.+54     	; 0x51b8 <main+0xe0>
	{
		sc=eeprom_read_byte((uint16_t*)54);
    5182:	86 e3       	ldi	r24, 0x36	; 54
    5184:	90 e0       	ldi	r25, 0x00	; 0
    5186:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    518a:	90 e0       	ldi	r25, 0x00	; 0
    518c:	90 93 3e 06 	sts	0x063E, r25	; 0x80063e <sc+0x1>
    5190:	80 93 3d 06 	sts	0x063D, r24	; 0x80063d <sc>
		mc=eeprom_read_byte((uint16_t*)62);
    5194:	8e e3       	ldi	r24, 0x3E	; 62
    5196:	90 e0       	ldi	r25, 0x00	; 0
    5198:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    519c:	90 e0       	ldi	r25, 0x00	; 0
    519e:	90 93 40 06 	sts	0x0640, r25	; 0x800640 <mc+0x1>
    51a2:	80 93 3f 06 	sts	0x063F, r24	; 0x80063f <mc>
		hc=eeprom_read_byte((uint16_t*)70);
    51a6:	86 e4       	ldi	r24, 0x46	; 70
    51a8:	90 e0       	ldi	r25, 0x00	; 0
    51aa:	0e 94 31 31 	call	0x6262	; 0x6262 <eeprom_read_byte>
    51ae:	90 e0       	ldi	r25, 0x00	; 0
    51b0:	90 93 42 06 	sts	0x0642, r25	; 0x800642 <hc+0x1>
    51b4:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <hc>
	}
	
	print("\r\f");
    51b8:	87 ea       	ldi	r24, 0xA7	; 167
    51ba:	95 e0       	ldi	r25, 0x05	; 5
    51bc:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	print("loading...");
    51c0:	8a ea       	ldi	r24, 0xAA	; 170
    51c2:	95 e0       	ldi	r25, 0x05	; 5
    51c4:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	loading();
    51c8:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <loading>
	print("      ok");
    51cc:	85 eb       	ldi	r24, 0xB5	; 181
    51ce:	95 e0       	ldi	r25, 0x05	; 5
    51d0:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <print>
	
	PORTB&=~(1<<fan);
    51d4:	c7 98       	cbi	0x18, 7	; 24
	PORTB&=~(1<<servo);
    51d6:	c6 98       	cbi	0x18, 6	; 24
	PORTE&=0x00;
    51d8:	83 b1       	in	r24, 0x03	; 3
    51da:	13 b8       	out	0x03, r1	; 3

	while (1)
	{
		mainmod();
    51dc:	ce dd       	rcall	.-1124   	; 0x4d7a <mainmod>
    51de:	fe cf       	rjmp	.-4      	; 0x51dc <main+0x104>

000051e0 <__subsf3>:
    51e0:	50 58       	subi	r21, 0x80	; 128

000051e2 <__addsf3>:
    51e2:	bb 27       	eor	r27, r27
    51e4:	aa 27       	eor	r26, r26
    51e6:	0e d0       	rcall	.+28     	; 0x5204 <__addsf3x>
    51e8:	a0 c1       	rjmp	.+832    	; 0x552a <__fp_round>
    51ea:	69 d1       	rcall	.+722    	; 0x54be <__fp_pscA>
    51ec:	30 f0       	brcs	.+12     	; 0x51fa <__addsf3+0x18>
    51ee:	6e d1       	rcall	.+732    	; 0x54cc <__fp_pscB>
    51f0:	20 f0       	brcs	.+8      	; 0x51fa <__addsf3+0x18>
    51f2:	31 f4       	brne	.+12     	; 0x5200 <__addsf3+0x1e>
    51f4:	9f 3f       	cpi	r25, 0xFF	; 255
    51f6:	11 f4       	brne	.+4      	; 0x51fc <__addsf3+0x1a>
    51f8:	1e f4       	brtc	.+6      	; 0x5200 <__addsf3+0x1e>
    51fa:	5e c1       	rjmp	.+700    	; 0x54b8 <__fp_nan>
    51fc:	0e f4       	brtc	.+2      	; 0x5200 <__addsf3+0x1e>
    51fe:	e0 95       	com	r30
    5200:	e7 fb       	bst	r30, 7
    5202:	54 c1       	rjmp	.+680    	; 0x54ac <__fp_inf>

00005204 <__addsf3x>:
    5204:	e9 2f       	mov	r30, r25
    5206:	b3 d1       	rcall	.+870    	; 0x556e <__fp_split3>
    5208:	80 f3       	brcs	.-32     	; 0x51ea <__addsf3+0x8>
    520a:	ba 17       	cp	r27, r26
    520c:	62 07       	cpc	r22, r18
    520e:	73 07       	cpc	r23, r19
    5210:	84 07       	cpc	r24, r20
    5212:	95 07       	cpc	r25, r21
    5214:	18 f0       	brcs	.+6      	; 0x521c <__addsf3x+0x18>
    5216:	71 f4       	brne	.+28     	; 0x5234 <__addsf3x+0x30>
    5218:	9e f5       	brtc	.+102    	; 0x5280 <__addsf3x+0x7c>
    521a:	cb c1       	rjmp	.+918    	; 0x55b2 <__fp_zero>
    521c:	0e f4       	brtc	.+2      	; 0x5220 <__addsf3x+0x1c>
    521e:	e0 95       	com	r30
    5220:	0b 2e       	mov	r0, r27
    5222:	ba 2f       	mov	r27, r26
    5224:	a0 2d       	mov	r26, r0
    5226:	0b 01       	movw	r0, r22
    5228:	b9 01       	movw	r22, r18
    522a:	90 01       	movw	r18, r0
    522c:	0c 01       	movw	r0, r24
    522e:	ca 01       	movw	r24, r20
    5230:	a0 01       	movw	r20, r0
    5232:	11 24       	eor	r1, r1
    5234:	ff 27       	eor	r31, r31
    5236:	59 1b       	sub	r21, r25
    5238:	99 f0       	breq	.+38     	; 0x5260 <__addsf3x+0x5c>
    523a:	59 3f       	cpi	r21, 0xF9	; 249
    523c:	50 f4       	brcc	.+20     	; 0x5252 <__addsf3x+0x4e>
    523e:	50 3e       	cpi	r21, 0xE0	; 224
    5240:	68 f1       	brcs	.+90     	; 0x529c <__addsf3x+0x98>
    5242:	1a 16       	cp	r1, r26
    5244:	f0 40       	sbci	r31, 0x00	; 0
    5246:	a2 2f       	mov	r26, r18
    5248:	23 2f       	mov	r18, r19
    524a:	34 2f       	mov	r19, r20
    524c:	44 27       	eor	r20, r20
    524e:	58 5f       	subi	r21, 0xF8	; 248
    5250:	f3 cf       	rjmp	.-26     	; 0x5238 <__addsf3x+0x34>
    5252:	46 95       	lsr	r20
    5254:	37 95       	ror	r19
    5256:	27 95       	ror	r18
    5258:	a7 95       	ror	r26
    525a:	f0 40       	sbci	r31, 0x00	; 0
    525c:	53 95       	inc	r21
    525e:	c9 f7       	brne	.-14     	; 0x5252 <__addsf3x+0x4e>
    5260:	7e f4       	brtc	.+30     	; 0x5280 <__addsf3x+0x7c>
    5262:	1f 16       	cp	r1, r31
    5264:	ba 0b       	sbc	r27, r26
    5266:	62 0b       	sbc	r22, r18
    5268:	73 0b       	sbc	r23, r19
    526a:	84 0b       	sbc	r24, r20
    526c:	ba f0       	brmi	.+46     	; 0x529c <__addsf3x+0x98>
    526e:	91 50       	subi	r25, 0x01	; 1
    5270:	a1 f0       	breq	.+40     	; 0x529a <__addsf3x+0x96>
    5272:	ff 0f       	add	r31, r31
    5274:	bb 1f       	adc	r27, r27
    5276:	66 1f       	adc	r22, r22
    5278:	77 1f       	adc	r23, r23
    527a:	88 1f       	adc	r24, r24
    527c:	c2 f7       	brpl	.-16     	; 0x526e <__addsf3x+0x6a>
    527e:	0e c0       	rjmp	.+28     	; 0x529c <__addsf3x+0x98>
    5280:	ba 0f       	add	r27, r26
    5282:	62 1f       	adc	r22, r18
    5284:	73 1f       	adc	r23, r19
    5286:	84 1f       	adc	r24, r20
    5288:	48 f4       	brcc	.+18     	; 0x529c <__addsf3x+0x98>
    528a:	87 95       	ror	r24
    528c:	77 95       	ror	r23
    528e:	67 95       	ror	r22
    5290:	b7 95       	ror	r27
    5292:	f7 95       	ror	r31
    5294:	9e 3f       	cpi	r25, 0xFE	; 254
    5296:	08 f0       	brcs	.+2      	; 0x529a <__addsf3x+0x96>
    5298:	b3 cf       	rjmp	.-154    	; 0x5200 <__addsf3+0x1e>
    529a:	93 95       	inc	r25
    529c:	88 0f       	add	r24, r24
    529e:	08 f0       	brcs	.+2      	; 0x52a2 <__addsf3x+0x9e>
    52a0:	99 27       	eor	r25, r25
    52a2:	ee 0f       	add	r30, r30
    52a4:	97 95       	ror	r25
    52a6:	87 95       	ror	r24
    52a8:	08 95       	ret

000052aa <__cmpsf2>:
    52aa:	dc d0       	rcall	.+440    	; 0x5464 <__fp_cmp>
    52ac:	08 f4       	brcc	.+2      	; 0x52b0 <__cmpsf2+0x6>
    52ae:	81 e0       	ldi	r24, 0x01	; 1
    52b0:	08 95       	ret

000052b2 <cos>:
    52b2:	14 d1       	rcall	.+552    	; 0x54dc <__fp_rempio2>
    52b4:	e3 95       	inc	r30
    52b6:	4a c1       	rjmp	.+660    	; 0x554c <__fp_sinus>

000052b8 <__divsf3>:
    52b8:	0c d0       	rcall	.+24     	; 0x52d2 <__divsf3x>
    52ba:	37 c1       	rjmp	.+622    	; 0x552a <__fp_round>
    52bc:	07 d1       	rcall	.+526    	; 0x54cc <__fp_pscB>
    52be:	40 f0       	brcs	.+16     	; 0x52d0 <__divsf3+0x18>
    52c0:	fe d0       	rcall	.+508    	; 0x54be <__fp_pscA>
    52c2:	30 f0       	brcs	.+12     	; 0x52d0 <__divsf3+0x18>
    52c4:	21 f4       	brne	.+8      	; 0x52ce <__divsf3+0x16>
    52c6:	5f 3f       	cpi	r21, 0xFF	; 255
    52c8:	19 f0       	breq	.+6      	; 0x52d0 <__divsf3+0x18>
    52ca:	f0 c0       	rjmp	.+480    	; 0x54ac <__fp_inf>
    52cc:	51 11       	cpse	r21, r1
    52ce:	72 c1       	rjmp	.+740    	; 0x55b4 <__fp_szero>
    52d0:	f3 c0       	rjmp	.+486    	; 0x54b8 <__fp_nan>

000052d2 <__divsf3x>:
    52d2:	4d d1       	rcall	.+666    	; 0x556e <__fp_split3>
    52d4:	98 f3       	brcs	.-26     	; 0x52bc <__divsf3+0x4>

000052d6 <__divsf3_pse>:
    52d6:	99 23       	and	r25, r25
    52d8:	c9 f3       	breq	.-14     	; 0x52cc <__divsf3+0x14>
    52da:	55 23       	and	r21, r21
    52dc:	b1 f3       	breq	.-20     	; 0x52ca <__divsf3+0x12>
    52de:	95 1b       	sub	r25, r21
    52e0:	55 0b       	sbc	r21, r21
    52e2:	bb 27       	eor	r27, r27
    52e4:	aa 27       	eor	r26, r26
    52e6:	62 17       	cp	r22, r18
    52e8:	73 07       	cpc	r23, r19
    52ea:	84 07       	cpc	r24, r20
    52ec:	38 f0       	brcs	.+14     	; 0x52fc <__divsf3_pse+0x26>
    52ee:	9f 5f       	subi	r25, 0xFF	; 255
    52f0:	5f 4f       	sbci	r21, 0xFF	; 255
    52f2:	22 0f       	add	r18, r18
    52f4:	33 1f       	adc	r19, r19
    52f6:	44 1f       	adc	r20, r20
    52f8:	aa 1f       	adc	r26, r26
    52fa:	a9 f3       	breq	.-22     	; 0x52e6 <__divsf3_pse+0x10>
    52fc:	33 d0       	rcall	.+102    	; 0x5364 <__divsf3_pse+0x8e>
    52fe:	0e 2e       	mov	r0, r30
    5300:	3a f0       	brmi	.+14     	; 0x5310 <__divsf3_pse+0x3a>
    5302:	e0 e8       	ldi	r30, 0x80	; 128
    5304:	30 d0       	rcall	.+96     	; 0x5366 <__divsf3_pse+0x90>
    5306:	91 50       	subi	r25, 0x01	; 1
    5308:	50 40       	sbci	r21, 0x00	; 0
    530a:	e6 95       	lsr	r30
    530c:	00 1c       	adc	r0, r0
    530e:	ca f7       	brpl	.-14     	; 0x5302 <__divsf3_pse+0x2c>
    5310:	29 d0       	rcall	.+82     	; 0x5364 <__divsf3_pse+0x8e>
    5312:	fe 2f       	mov	r31, r30
    5314:	27 d0       	rcall	.+78     	; 0x5364 <__divsf3_pse+0x8e>
    5316:	66 0f       	add	r22, r22
    5318:	77 1f       	adc	r23, r23
    531a:	88 1f       	adc	r24, r24
    531c:	bb 1f       	adc	r27, r27
    531e:	26 17       	cp	r18, r22
    5320:	37 07       	cpc	r19, r23
    5322:	48 07       	cpc	r20, r24
    5324:	ab 07       	cpc	r26, r27
    5326:	b0 e8       	ldi	r27, 0x80	; 128
    5328:	09 f0       	breq	.+2      	; 0x532c <__divsf3_pse+0x56>
    532a:	bb 0b       	sbc	r27, r27
    532c:	80 2d       	mov	r24, r0
    532e:	bf 01       	movw	r22, r30
    5330:	ff 27       	eor	r31, r31
    5332:	93 58       	subi	r25, 0x83	; 131
    5334:	5f 4f       	sbci	r21, 0xFF	; 255
    5336:	2a f0       	brmi	.+10     	; 0x5342 <__divsf3_pse+0x6c>
    5338:	9e 3f       	cpi	r25, 0xFE	; 254
    533a:	51 05       	cpc	r21, r1
    533c:	68 f0       	brcs	.+26     	; 0x5358 <__divsf3_pse+0x82>
    533e:	b6 c0       	rjmp	.+364    	; 0x54ac <__fp_inf>
    5340:	39 c1       	rjmp	.+626    	; 0x55b4 <__fp_szero>
    5342:	5f 3f       	cpi	r21, 0xFF	; 255
    5344:	ec f3       	brlt	.-6      	; 0x5340 <__divsf3_pse+0x6a>
    5346:	98 3e       	cpi	r25, 0xE8	; 232
    5348:	dc f3       	brlt	.-10     	; 0x5340 <__divsf3_pse+0x6a>
    534a:	86 95       	lsr	r24
    534c:	77 95       	ror	r23
    534e:	67 95       	ror	r22
    5350:	b7 95       	ror	r27
    5352:	f7 95       	ror	r31
    5354:	9f 5f       	subi	r25, 0xFF	; 255
    5356:	c9 f7       	brne	.-14     	; 0x534a <__divsf3_pse+0x74>
    5358:	88 0f       	add	r24, r24
    535a:	91 1d       	adc	r25, r1
    535c:	96 95       	lsr	r25
    535e:	87 95       	ror	r24
    5360:	97 f9       	bld	r25, 7
    5362:	08 95       	ret
    5364:	e1 e0       	ldi	r30, 0x01	; 1
    5366:	66 0f       	add	r22, r22
    5368:	77 1f       	adc	r23, r23
    536a:	88 1f       	adc	r24, r24
    536c:	bb 1f       	adc	r27, r27
    536e:	62 17       	cp	r22, r18
    5370:	73 07       	cpc	r23, r19
    5372:	84 07       	cpc	r24, r20
    5374:	ba 07       	cpc	r27, r26
    5376:	20 f0       	brcs	.+8      	; 0x5380 <__divsf3_pse+0xaa>
    5378:	62 1b       	sub	r22, r18
    537a:	73 0b       	sbc	r23, r19
    537c:	84 0b       	sbc	r24, r20
    537e:	ba 0b       	sbc	r27, r26
    5380:	ee 1f       	adc	r30, r30
    5382:	88 f7       	brcc	.-30     	; 0x5366 <__divsf3_pse+0x90>
    5384:	e0 95       	com	r30
    5386:	08 95       	ret

00005388 <__fixsfsi>:
    5388:	04 d0       	rcall	.+8      	; 0x5392 <__fixunssfsi>
    538a:	68 94       	set
    538c:	b1 11       	cpse	r27, r1
    538e:	12 c1       	rjmp	.+548    	; 0x55b4 <__fp_szero>
    5390:	08 95       	ret

00005392 <__fixunssfsi>:
    5392:	f5 d0       	rcall	.+490    	; 0x557e <__fp_splitA>
    5394:	88 f0       	brcs	.+34     	; 0x53b8 <__fixunssfsi+0x26>
    5396:	9f 57       	subi	r25, 0x7F	; 127
    5398:	90 f0       	brcs	.+36     	; 0x53be <__fixunssfsi+0x2c>
    539a:	b9 2f       	mov	r27, r25
    539c:	99 27       	eor	r25, r25
    539e:	b7 51       	subi	r27, 0x17	; 23
    53a0:	a0 f0       	brcs	.+40     	; 0x53ca <__fixunssfsi+0x38>
    53a2:	d1 f0       	breq	.+52     	; 0x53d8 <__fixunssfsi+0x46>
    53a4:	66 0f       	add	r22, r22
    53a6:	77 1f       	adc	r23, r23
    53a8:	88 1f       	adc	r24, r24
    53aa:	99 1f       	adc	r25, r25
    53ac:	1a f0       	brmi	.+6      	; 0x53b4 <__fixunssfsi+0x22>
    53ae:	ba 95       	dec	r27
    53b0:	c9 f7       	brne	.-14     	; 0x53a4 <__fixunssfsi+0x12>
    53b2:	12 c0       	rjmp	.+36     	; 0x53d8 <__fixunssfsi+0x46>
    53b4:	b1 30       	cpi	r27, 0x01	; 1
    53b6:	81 f0       	breq	.+32     	; 0x53d8 <__fixunssfsi+0x46>
    53b8:	fc d0       	rcall	.+504    	; 0x55b2 <__fp_zero>
    53ba:	b1 e0       	ldi	r27, 0x01	; 1
    53bc:	08 95       	ret
    53be:	f9 c0       	rjmp	.+498    	; 0x55b2 <__fp_zero>
    53c0:	67 2f       	mov	r22, r23
    53c2:	78 2f       	mov	r23, r24
    53c4:	88 27       	eor	r24, r24
    53c6:	b8 5f       	subi	r27, 0xF8	; 248
    53c8:	39 f0       	breq	.+14     	; 0x53d8 <__fixunssfsi+0x46>
    53ca:	b9 3f       	cpi	r27, 0xF9	; 249
    53cc:	cc f3       	brlt	.-14     	; 0x53c0 <__fixunssfsi+0x2e>
    53ce:	86 95       	lsr	r24
    53d0:	77 95       	ror	r23
    53d2:	67 95       	ror	r22
    53d4:	b3 95       	inc	r27
    53d6:	d9 f7       	brne	.-10     	; 0x53ce <__fixunssfsi+0x3c>
    53d8:	3e f4       	brtc	.+14     	; 0x53e8 <__fixunssfsi+0x56>
    53da:	90 95       	com	r25
    53dc:	80 95       	com	r24
    53de:	70 95       	com	r23
    53e0:	61 95       	neg	r22
    53e2:	7f 4f       	sbci	r23, 0xFF	; 255
    53e4:	8f 4f       	sbci	r24, 0xFF	; 255
    53e6:	9f 4f       	sbci	r25, 0xFF	; 255
    53e8:	08 95       	ret

000053ea <__floatunsisf>:
    53ea:	e8 94       	clt
    53ec:	09 c0       	rjmp	.+18     	; 0x5400 <__floatsisf+0x12>

000053ee <__floatsisf>:
    53ee:	97 fb       	bst	r25, 7
    53f0:	3e f4       	brtc	.+14     	; 0x5400 <__floatsisf+0x12>
    53f2:	90 95       	com	r25
    53f4:	80 95       	com	r24
    53f6:	70 95       	com	r23
    53f8:	61 95       	neg	r22
    53fa:	7f 4f       	sbci	r23, 0xFF	; 255
    53fc:	8f 4f       	sbci	r24, 0xFF	; 255
    53fe:	9f 4f       	sbci	r25, 0xFF	; 255
    5400:	99 23       	and	r25, r25
    5402:	a9 f0       	breq	.+42     	; 0x542e <__floatsisf+0x40>
    5404:	f9 2f       	mov	r31, r25
    5406:	96 e9       	ldi	r25, 0x96	; 150
    5408:	bb 27       	eor	r27, r27
    540a:	93 95       	inc	r25
    540c:	f6 95       	lsr	r31
    540e:	87 95       	ror	r24
    5410:	77 95       	ror	r23
    5412:	67 95       	ror	r22
    5414:	b7 95       	ror	r27
    5416:	f1 11       	cpse	r31, r1
    5418:	f8 cf       	rjmp	.-16     	; 0x540a <__floatsisf+0x1c>
    541a:	fa f4       	brpl	.+62     	; 0x545a <__floatsisf+0x6c>
    541c:	bb 0f       	add	r27, r27
    541e:	11 f4       	brne	.+4      	; 0x5424 <__floatsisf+0x36>
    5420:	60 ff       	sbrs	r22, 0
    5422:	1b c0       	rjmp	.+54     	; 0x545a <__floatsisf+0x6c>
    5424:	6f 5f       	subi	r22, 0xFF	; 255
    5426:	7f 4f       	sbci	r23, 0xFF	; 255
    5428:	8f 4f       	sbci	r24, 0xFF	; 255
    542a:	9f 4f       	sbci	r25, 0xFF	; 255
    542c:	16 c0       	rjmp	.+44     	; 0x545a <__floatsisf+0x6c>
    542e:	88 23       	and	r24, r24
    5430:	11 f0       	breq	.+4      	; 0x5436 <__floatsisf+0x48>
    5432:	96 e9       	ldi	r25, 0x96	; 150
    5434:	11 c0       	rjmp	.+34     	; 0x5458 <__floatsisf+0x6a>
    5436:	77 23       	and	r23, r23
    5438:	21 f0       	breq	.+8      	; 0x5442 <__floatsisf+0x54>
    543a:	9e e8       	ldi	r25, 0x8E	; 142
    543c:	87 2f       	mov	r24, r23
    543e:	76 2f       	mov	r23, r22
    5440:	05 c0       	rjmp	.+10     	; 0x544c <__floatsisf+0x5e>
    5442:	66 23       	and	r22, r22
    5444:	71 f0       	breq	.+28     	; 0x5462 <__floatsisf+0x74>
    5446:	96 e8       	ldi	r25, 0x86	; 134
    5448:	86 2f       	mov	r24, r22
    544a:	70 e0       	ldi	r23, 0x00	; 0
    544c:	60 e0       	ldi	r22, 0x00	; 0
    544e:	2a f0       	brmi	.+10     	; 0x545a <__floatsisf+0x6c>
    5450:	9a 95       	dec	r25
    5452:	66 0f       	add	r22, r22
    5454:	77 1f       	adc	r23, r23
    5456:	88 1f       	adc	r24, r24
    5458:	da f7       	brpl	.-10     	; 0x5450 <__floatsisf+0x62>
    545a:	88 0f       	add	r24, r24
    545c:	96 95       	lsr	r25
    545e:	87 95       	ror	r24
    5460:	97 f9       	bld	r25, 7
    5462:	08 95       	ret

00005464 <__fp_cmp>:
    5464:	99 0f       	add	r25, r25
    5466:	00 08       	sbc	r0, r0
    5468:	55 0f       	add	r21, r21
    546a:	aa 0b       	sbc	r26, r26
    546c:	e0 e8       	ldi	r30, 0x80	; 128
    546e:	fe ef       	ldi	r31, 0xFE	; 254
    5470:	16 16       	cp	r1, r22
    5472:	17 06       	cpc	r1, r23
    5474:	e8 07       	cpc	r30, r24
    5476:	f9 07       	cpc	r31, r25
    5478:	c0 f0       	brcs	.+48     	; 0x54aa <__fp_cmp+0x46>
    547a:	12 16       	cp	r1, r18
    547c:	13 06       	cpc	r1, r19
    547e:	e4 07       	cpc	r30, r20
    5480:	f5 07       	cpc	r31, r21
    5482:	98 f0       	brcs	.+38     	; 0x54aa <__fp_cmp+0x46>
    5484:	62 1b       	sub	r22, r18
    5486:	73 0b       	sbc	r23, r19
    5488:	84 0b       	sbc	r24, r20
    548a:	95 0b       	sbc	r25, r21
    548c:	39 f4       	brne	.+14     	; 0x549c <__fp_cmp+0x38>
    548e:	0a 26       	eor	r0, r26
    5490:	61 f0       	breq	.+24     	; 0x54aa <__fp_cmp+0x46>
    5492:	23 2b       	or	r18, r19
    5494:	24 2b       	or	r18, r20
    5496:	25 2b       	or	r18, r21
    5498:	21 f4       	brne	.+8      	; 0x54a2 <__fp_cmp+0x3e>
    549a:	08 95       	ret
    549c:	0a 26       	eor	r0, r26
    549e:	09 f4       	brne	.+2      	; 0x54a2 <__fp_cmp+0x3e>
    54a0:	a1 40       	sbci	r26, 0x01	; 1
    54a2:	a6 95       	lsr	r26
    54a4:	8f ef       	ldi	r24, 0xFF	; 255
    54a6:	81 1d       	adc	r24, r1
    54a8:	81 1d       	adc	r24, r1
    54aa:	08 95       	ret

000054ac <__fp_inf>:
    54ac:	97 f9       	bld	r25, 7
    54ae:	9f 67       	ori	r25, 0x7F	; 127
    54b0:	80 e8       	ldi	r24, 0x80	; 128
    54b2:	70 e0       	ldi	r23, 0x00	; 0
    54b4:	60 e0       	ldi	r22, 0x00	; 0
    54b6:	08 95       	ret

000054b8 <__fp_nan>:
    54b8:	9f ef       	ldi	r25, 0xFF	; 255
    54ba:	80 ec       	ldi	r24, 0xC0	; 192
    54bc:	08 95       	ret

000054be <__fp_pscA>:
    54be:	00 24       	eor	r0, r0
    54c0:	0a 94       	dec	r0
    54c2:	16 16       	cp	r1, r22
    54c4:	17 06       	cpc	r1, r23
    54c6:	18 06       	cpc	r1, r24
    54c8:	09 06       	cpc	r0, r25
    54ca:	08 95       	ret

000054cc <__fp_pscB>:
    54cc:	00 24       	eor	r0, r0
    54ce:	0a 94       	dec	r0
    54d0:	12 16       	cp	r1, r18
    54d2:	13 06       	cpc	r1, r19
    54d4:	14 06       	cpc	r1, r20
    54d6:	05 06       	cpc	r0, r21
    54d8:	08 95       	ret
    54da:	ee cf       	rjmp	.-36     	; 0x54b8 <__fp_nan>

000054dc <__fp_rempio2>:
    54dc:	50 d0       	rcall	.+160    	; 0x557e <__fp_splitA>
    54de:	e8 f3       	brcs	.-6      	; 0x54da <__fp_pscB+0xe>
    54e0:	e8 94       	clt
    54e2:	e0 e0       	ldi	r30, 0x00	; 0
    54e4:	bb 27       	eor	r27, r27
    54e6:	9f 57       	subi	r25, 0x7F	; 127
    54e8:	f0 f0       	brcs	.+60     	; 0x5526 <__fp_rempio2+0x4a>
    54ea:	2a ed       	ldi	r18, 0xDA	; 218
    54ec:	3f e0       	ldi	r19, 0x0F	; 15
    54ee:	49 ec       	ldi	r20, 0xC9	; 201
    54f0:	06 c0       	rjmp	.+12     	; 0x54fe <__fp_rempio2+0x22>
    54f2:	ee 0f       	add	r30, r30
    54f4:	bb 0f       	add	r27, r27
    54f6:	66 1f       	adc	r22, r22
    54f8:	77 1f       	adc	r23, r23
    54fa:	88 1f       	adc	r24, r24
    54fc:	28 f0       	brcs	.+10     	; 0x5508 <__fp_rempio2+0x2c>
    54fe:	b2 3a       	cpi	r27, 0xA2	; 162
    5500:	62 07       	cpc	r22, r18
    5502:	73 07       	cpc	r23, r19
    5504:	84 07       	cpc	r24, r20
    5506:	28 f0       	brcs	.+10     	; 0x5512 <__fp_rempio2+0x36>
    5508:	b2 5a       	subi	r27, 0xA2	; 162
    550a:	62 0b       	sbc	r22, r18
    550c:	73 0b       	sbc	r23, r19
    550e:	84 0b       	sbc	r24, r20
    5510:	e3 95       	inc	r30
    5512:	9a 95       	dec	r25
    5514:	72 f7       	brpl	.-36     	; 0x54f2 <__fp_rempio2+0x16>
    5516:	80 38       	cpi	r24, 0x80	; 128
    5518:	30 f4       	brcc	.+12     	; 0x5526 <__fp_rempio2+0x4a>
    551a:	9a 95       	dec	r25
    551c:	bb 0f       	add	r27, r27
    551e:	66 1f       	adc	r22, r22
    5520:	77 1f       	adc	r23, r23
    5522:	88 1f       	adc	r24, r24
    5524:	d2 f7       	brpl	.-12     	; 0x551a <__fp_rempio2+0x3e>
    5526:	90 48       	sbci	r25, 0x80	; 128
    5528:	ba c0       	rjmp	.+372    	; 0x569e <__fp_mpack_finite>

0000552a <__fp_round>:
    552a:	09 2e       	mov	r0, r25
    552c:	03 94       	inc	r0
    552e:	00 0c       	add	r0, r0
    5530:	11 f4       	brne	.+4      	; 0x5536 <__fp_round+0xc>
    5532:	88 23       	and	r24, r24
    5534:	52 f0       	brmi	.+20     	; 0x554a <__fp_round+0x20>
    5536:	bb 0f       	add	r27, r27
    5538:	40 f4       	brcc	.+16     	; 0x554a <__fp_round+0x20>
    553a:	bf 2b       	or	r27, r31
    553c:	11 f4       	brne	.+4      	; 0x5542 <__fp_round+0x18>
    553e:	60 ff       	sbrs	r22, 0
    5540:	04 c0       	rjmp	.+8      	; 0x554a <__fp_round+0x20>
    5542:	6f 5f       	subi	r22, 0xFF	; 255
    5544:	7f 4f       	sbci	r23, 0xFF	; 255
    5546:	8f 4f       	sbci	r24, 0xFF	; 255
    5548:	9f 4f       	sbci	r25, 0xFF	; 255
    554a:	08 95       	ret

0000554c <__fp_sinus>:
    554c:	ef 93       	push	r30
    554e:	e0 ff       	sbrs	r30, 0
    5550:	06 c0       	rjmp	.+12     	; 0x555e <__fp_sinus+0x12>
    5552:	a2 ea       	ldi	r26, 0xA2	; 162
    5554:	2a ed       	ldi	r18, 0xDA	; 218
    5556:	3f e0       	ldi	r19, 0x0F	; 15
    5558:	49 ec       	ldi	r20, 0xC9	; 201
    555a:	5f eb       	ldi	r21, 0xBF	; 191
    555c:	53 de       	rcall	.-858    	; 0x5204 <__addsf3x>
    555e:	e5 df       	rcall	.-54     	; 0x552a <__fp_round>
    5560:	0f 90       	pop	r0
    5562:	03 94       	inc	r0
    5564:	01 fc       	sbrc	r0, 1
    5566:	90 58       	subi	r25, 0x80	; 128
    5568:	ec e8       	ldi	r30, 0x8C	; 140
    556a:	f0 e0       	ldi	r31, 0x00	; 0
    556c:	a4 c0       	rjmp	.+328    	; 0x56b6 <__fp_powsodd>

0000556e <__fp_split3>:
    556e:	57 fd       	sbrc	r21, 7
    5570:	90 58       	subi	r25, 0x80	; 128
    5572:	44 0f       	add	r20, r20
    5574:	55 1f       	adc	r21, r21
    5576:	59 f0       	breq	.+22     	; 0x558e <__fp_splitA+0x10>
    5578:	5f 3f       	cpi	r21, 0xFF	; 255
    557a:	71 f0       	breq	.+28     	; 0x5598 <__fp_splitA+0x1a>
    557c:	47 95       	ror	r20

0000557e <__fp_splitA>:
    557e:	88 0f       	add	r24, r24
    5580:	97 fb       	bst	r25, 7
    5582:	99 1f       	adc	r25, r25
    5584:	61 f0       	breq	.+24     	; 0x559e <__fp_splitA+0x20>
    5586:	9f 3f       	cpi	r25, 0xFF	; 255
    5588:	79 f0       	breq	.+30     	; 0x55a8 <__fp_splitA+0x2a>
    558a:	87 95       	ror	r24
    558c:	08 95       	ret
    558e:	12 16       	cp	r1, r18
    5590:	13 06       	cpc	r1, r19
    5592:	14 06       	cpc	r1, r20
    5594:	55 1f       	adc	r21, r21
    5596:	f2 cf       	rjmp	.-28     	; 0x557c <__fp_split3+0xe>
    5598:	46 95       	lsr	r20
    559a:	f1 df       	rcall	.-30     	; 0x557e <__fp_splitA>
    559c:	08 c0       	rjmp	.+16     	; 0x55ae <__fp_splitA+0x30>
    559e:	16 16       	cp	r1, r22
    55a0:	17 06       	cpc	r1, r23
    55a2:	18 06       	cpc	r1, r24
    55a4:	99 1f       	adc	r25, r25
    55a6:	f1 cf       	rjmp	.-30     	; 0x558a <__fp_splitA+0xc>
    55a8:	86 95       	lsr	r24
    55aa:	71 05       	cpc	r23, r1
    55ac:	61 05       	cpc	r22, r1
    55ae:	08 94       	sec
    55b0:	08 95       	ret

000055b2 <__fp_zero>:
    55b2:	e8 94       	clt

000055b4 <__fp_szero>:
    55b4:	bb 27       	eor	r27, r27
    55b6:	66 27       	eor	r22, r22
    55b8:	77 27       	eor	r23, r23
    55ba:	cb 01       	movw	r24, r22
    55bc:	97 f9       	bld	r25, 7
    55be:	08 95       	ret

000055c0 <__gesf2>:
    55c0:	51 df       	rcall	.-350    	; 0x5464 <__fp_cmp>
    55c2:	08 f4       	brcc	.+2      	; 0x55c6 <__gesf2+0x6>
    55c4:	8f ef       	ldi	r24, 0xFF	; 255
    55c6:	08 95       	ret

000055c8 <__mulsf3>:
    55c8:	0b d0       	rcall	.+22     	; 0x55e0 <__mulsf3x>
    55ca:	af cf       	rjmp	.-162    	; 0x552a <__fp_round>
    55cc:	78 df       	rcall	.-272    	; 0x54be <__fp_pscA>
    55ce:	28 f0       	brcs	.+10     	; 0x55da <__mulsf3+0x12>
    55d0:	7d df       	rcall	.-262    	; 0x54cc <__fp_pscB>
    55d2:	18 f0       	brcs	.+6      	; 0x55da <__mulsf3+0x12>
    55d4:	95 23       	and	r25, r21
    55d6:	09 f0       	breq	.+2      	; 0x55da <__mulsf3+0x12>
    55d8:	69 cf       	rjmp	.-302    	; 0x54ac <__fp_inf>
    55da:	6e cf       	rjmp	.-292    	; 0x54b8 <__fp_nan>
    55dc:	11 24       	eor	r1, r1
    55de:	ea cf       	rjmp	.-44     	; 0x55b4 <__fp_szero>

000055e0 <__mulsf3x>:
    55e0:	c6 df       	rcall	.-116    	; 0x556e <__fp_split3>
    55e2:	a0 f3       	brcs	.-24     	; 0x55cc <__mulsf3+0x4>

000055e4 <__mulsf3_pse>:
    55e4:	95 9f       	mul	r25, r21
    55e6:	d1 f3       	breq	.-12     	; 0x55dc <__mulsf3+0x14>
    55e8:	95 0f       	add	r25, r21
    55ea:	50 e0       	ldi	r21, 0x00	; 0
    55ec:	55 1f       	adc	r21, r21
    55ee:	62 9f       	mul	r22, r18
    55f0:	f0 01       	movw	r30, r0
    55f2:	72 9f       	mul	r23, r18
    55f4:	bb 27       	eor	r27, r27
    55f6:	f0 0d       	add	r31, r0
    55f8:	b1 1d       	adc	r27, r1
    55fa:	63 9f       	mul	r22, r19
    55fc:	aa 27       	eor	r26, r26
    55fe:	f0 0d       	add	r31, r0
    5600:	b1 1d       	adc	r27, r1
    5602:	aa 1f       	adc	r26, r26
    5604:	64 9f       	mul	r22, r20
    5606:	66 27       	eor	r22, r22
    5608:	b0 0d       	add	r27, r0
    560a:	a1 1d       	adc	r26, r1
    560c:	66 1f       	adc	r22, r22
    560e:	82 9f       	mul	r24, r18
    5610:	22 27       	eor	r18, r18
    5612:	b0 0d       	add	r27, r0
    5614:	a1 1d       	adc	r26, r1
    5616:	62 1f       	adc	r22, r18
    5618:	73 9f       	mul	r23, r19
    561a:	b0 0d       	add	r27, r0
    561c:	a1 1d       	adc	r26, r1
    561e:	62 1f       	adc	r22, r18
    5620:	83 9f       	mul	r24, r19
    5622:	a0 0d       	add	r26, r0
    5624:	61 1d       	adc	r22, r1
    5626:	22 1f       	adc	r18, r18
    5628:	74 9f       	mul	r23, r20
    562a:	33 27       	eor	r19, r19
    562c:	a0 0d       	add	r26, r0
    562e:	61 1d       	adc	r22, r1
    5630:	23 1f       	adc	r18, r19
    5632:	84 9f       	mul	r24, r20
    5634:	60 0d       	add	r22, r0
    5636:	21 1d       	adc	r18, r1
    5638:	82 2f       	mov	r24, r18
    563a:	76 2f       	mov	r23, r22
    563c:	6a 2f       	mov	r22, r26
    563e:	11 24       	eor	r1, r1
    5640:	9f 57       	subi	r25, 0x7F	; 127
    5642:	50 40       	sbci	r21, 0x00	; 0
    5644:	8a f0       	brmi	.+34     	; 0x5668 <__mulsf3_pse+0x84>
    5646:	e1 f0       	breq	.+56     	; 0x5680 <__mulsf3_pse+0x9c>
    5648:	88 23       	and	r24, r24
    564a:	4a f0       	brmi	.+18     	; 0x565e <__mulsf3_pse+0x7a>
    564c:	ee 0f       	add	r30, r30
    564e:	ff 1f       	adc	r31, r31
    5650:	bb 1f       	adc	r27, r27
    5652:	66 1f       	adc	r22, r22
    5654:	77 1f       	adc	r23, r23
    5656:	88 1f       	adc	r24, r24
    5658:	91 50       	subi	r25, 0x01	; 1
    565a:	50 40       	sbci	r21, 0x00	; 0
    565c:	a9 f7       	brne	.-22     	; 0x5648 <__mulsf3_pse+0x64>
    565e:	9e 3f       	cpi	r25, 0xFE	; 254
    5660:	51 05       	cpc	r21, r1
    5662:	70 f0       	brcs	.+28     	; 0x5680 <__mulsf3_pse+0x9c>
    5664:	23 cf       	rjmp	.-442    	; 0x54ac <__fp_inf>
    5666:	a6 cf       	rjmp	.-180    	; 0x55b4 <__fp_szero>
    5668:	5f 3f       	cpi	r21, 0xFF	; 255
    566a:	ec f3       	brlt	.-6      	; 0x5666 <__mulsf3_pse+0x82>
    566c:	98 3e       	cpi	r25, 0xE8	; 232
    566e:	dc f3       	brlt	.-10     	; 0x5666 <__mulsf3_pse+0x82>
    5670:	86 95       	lsr	r24
    5672:	77 95       	ror	r23
    5674:	67 95       	ror	r22
    5676:	b7 95       	ror	r27
    5678:	f7 95       	ror	r31
    567a:	e7 95       	ror	r30
    567c:	9f 5f       	subi	r25, 0xFF	; 255
    567e:	c1 f7       	brne	.-16     	; 0x5670 <__mulsf3_pse+0x8c>
    5680:	fe 2b       	or	r31, r30
    5682:	88 0f       	add	r24, r24
    5684:	91 1d       	adc	r25, r1
    5686:	96 95       	lsr	r25
    5688:	87 95       	ror	r24
    568a:	97 f9       	bld	r25, 7
    568c:	08 95       	ret

0000568e <sin>:
    568e:	9f 93       	push	r25
    5690:	25 df       	rcall	.-438    	; 0x54dc <__fp_rempio2>
    5692:	0f 90       	pop	r0
    5694:	07 fc       	sbrc	r0, 7
    5696:	ee 5f       	subi	r30, 0xFE	; 254
    5698:	59 cf       	rjmp	.-334    	; 0x554c <__fp_sinus>

0000569a <__fp_mpack>:
    569a:	9f 3f       	cpi	r25, 0xFF	; 255
    569c:	31 f0       	breq	.+12     	; 0x56aa <__fp_mpack_finite+0xc>

0000569e <__fp_mpack_finite>:
    569e:	91 50       	subi	r25, 0x01	; 1
    56a0:	20 f4       	brcc	.+8      	; 0x56aa <__fp_mpack_finite+0xc>
    56a2:	87 95       	ror	r24
    56a4:	77 95       	ror	r23
    56a6:	67 95       	ror	r22
    56a8:	b7 95       	ror	r27
    56aa:	88 0f       	add	r24, r24
    56ac:	91 1d       	adc	r25, r1
    56ae:	96 95       	lsr	r25
    56b0:	87 95       	ror	r24
    56b2:	97 f9       	bld	r25, 7
    56b4:	08 95       	ret

000056b6 <__fp_powsodd>:
    56b6:	9f 93       	push	r25
    56b8:	8f 93       	push	r24
    56ba:	7f 93       	push	r23
    56bc:	6f 93       	push	r22
    56be:	ff 93       	push	r31
    56c0:	ef 93       	push	r30
    56c2:	9b 01       	movw	r18, r22
    56c4:	ac 01       	movw	r20, r24
    56c6:	80 df       	rcall	.-256    	; 0x55c8 <__mulsf3>
    56c8:	ef 91       	pop	r30
    56ca:	ff 91       	pop	r31
    56cc:	05 d0       	rcall	.+10     	; 0x56d8 <__fp_powser>
    56ce:	2f 91       	pop	r18
    56d0:	3f 91       	pop	r19
    56d2:	4f 91       	pop	r20
    56d4:	5f 91       	pop	r21
    56d6:	78 cf       	rjmp	.-272    	; 0x55c8 <__mulsf3>

000056d8 <__fp_powser>:
    56d8:	df 93       	push	r29
    56da:	cf 93       	push	r28
    56dc:	1f 93       	push	r17
    56de:	0f 93       	push	r16
    56e0:	ff 92       	push	r15
    56e2:	ef 92       	push	r14
    56e4:	df 92       	push	r13
    56e6:	7b 01       	movw	r14, r22
    56e8:	8c 01       	movw	r16, r24
    56ea:	68 94       	set
    56ec:	05 c0       	rjmp	.+10     	; 0x56f8 <__fp_powser+0x20>
    56ee:	da 2e       	mov	r13, r26
    56f0:	ef 01       	movw	r28, r30
    56f2:	76 df       	rcall	.-276    	; 0x55e0 <__mulsf3x>
    56f4:	fe 01       	movw	r30, r28
    56f6:	e8 94       	clt
    56f8:	a5 91       	lpm	r26, Z+
    56fa:	25 91       	lpm	r18, Z+
    56fc:	35 91       	lpm	r19, Z+
    56fe:	45 91       	lpm	r20, Z+
    5700:	55 91       	lpm	r21, Z+
    5702:	ae f3       	brts	.-22     	; 0x56ee <__fp_powser+0x16>
    5704:	ef 01       	movw	r28, r30
    5706:	7e dd       	rcall	.-1284   	; 0x5204 <__addsf3x>
    5708:	fe 01       	movw	r30, r28
    570a:	97 01       	movw	r18, r14
    570c:	a8 01       	movw	r20, r16
    570e:	da 94       	dec	r13
    5710:	79 f7       	brne	.-34     	; 0x56f0 <__fp_powser+0x18>
    5712:	df 90       	pop	r13
    5714:	ef 90       	pop	r14
    5716:	ff 90       	pop	r15
    5718:	0f 91       	pop	r16
    571a:	1f 91       	pop	r17
    571c:	cf 91       	pop	r28
    571e:	df 91       	pop	r29
    5720:	08 95       	ret

00005722 <vfprintf>:
    5722:	2f 92       	push	r2
    5724:	3f 92       	push	r3
    5726:	4f 92       	push	r4
    5728:	5f 92       	push	r5
    572a:	6f 92       	push	r6
    572c:	7f 92       	push	r7
    572e:	8f 92       	push	r8
    5730:	9f 92       	push	r9
    5732:	af 92       	push	r10
    5734:	bf 92       	push	r11
    5736:	cf 92       	push	r12
    5738:	df 92       	push	r13
    573a:	ef 92       	push	r14
    573c:	ff 92       	push	r15
    573e:	0f 93       	push	r16
    5740:	1f 93       	push	r17
    5742:	cf 93       	push	r28
    5744:	df 93       	push	r29
    5746:	cd b7       	in	r28, 0x3d	; 61
    5748:	de b7       	in	r29, 0x3e	; 62
    574a:	60 97       	sbiw	r28, 0x10	; 16
    574c:	0f b6       	in	r0, 0x3f	; 63
    574e:	f8 94       	cli
    5750:	de bf       	out	0x3e, r29	; 62
    5752:	0f be       	out	0x3f, r0	; 63
    5754:	cd bf       	out	0x3d, r28	; 61
    5756:	7c 01       	movw	r14, r24
    5758:	1b 01       	movw	r2, r22
    575a:	6a 01       	movw	r12, r20
    575c:	fc 01       	movw	r30, r24
    575e:	17 82       	std	Z+7, r1	; 0x07
    5760:	16 82       	std	Z+6, r1	; 0x06
    5762:	83 81       	ldd	r24, Z+3	; 0x03
    5764:	81 ff       	sbrs	r24, 1
    5766:	2a c3       	rjmp	.+1620   	; 0x5dbc <vfprintf+0x69a>
    5768:	9e 01       	movw	r18, r28
    576a:	2f 5f       	subi	r18, 0xFF	; 255
    576c:	3f 4f       	sbci	r19, 0xFF	; 255
    576e:	39 01       	movw	r6, r18
    5770:	f7 01       	movw	r30, r14
    5772:	93 81       	ldd	r25, Z+3	; 0x03
    5774:	f1 01       	movw	r30, r2
    5776:	93 fd       	sbrc	r25, 3
    5778:	85 91       	lpm	r24, Z+
    577a:	93 ff       	sbrs	r25, 3
    577c:	81 91       	ld	r24, Z+
    577e:	1f 01       	movw	r2, r30
    5780:	88 23       	and	r24, r24
    5782:	09 f4       	brne	.+2      	; 0x5786 <vfprintf+0x64>
    5784:	17 c3       	rjmp	.+1582   	; 0x5db4 <vfprintf+0x692>
    5786:	85 32       	cpi	r24, 0x25	; 37
    5788:	39 f4       	brne	.+14     	; 0x5798 <vfprintf+0x76>
    578a:	93 fd       	sbrc	r25, 3
    578c:	85 91       	lpm	r24, Z+
    578e:	93 ff       	sbrs	r25, 3
    5790:	81 91       	ld	r24, Z+
    5792:	1f 01       	movw	r2, r30
    5794:	85 32       	cpi	r24, 0x25	; 37
    5796:	31 f4       	brne	.+12     	; 0x57a4 <vfprintf+0x82>
    5798:	b7 01       	movw	r22, r14
    579a:	90 e0       	ldi	r25, 0x00	; 0
    579c:	8a d4       	rcall	.+2324   	; 0x60b2 <fputc>
    579e:	56 01       	movw	r10, r12
    57a0:	65 01       	movw	r12, r10
    57a2:	e6 cf       	rjmp	.-52     	; 0x5770 <vfprintf+0x4e>
    57a4:	10 e0       	ldi	r17, 0x00	; 0
    57a6:	51 2c       	mov	r5, r1
    57a8:	91 2c       	mov	r9, r1
    57aa:	ff e1       	ldi	r31, 0x1F	; 31
    57ac:	f9 15       	cp	r31, r9
    57ae:	d8 f0       	brcs	.+54     	; 0x57e6 <vfprintf+0xc4>
    57b0:	8b 32       	cpi	r24, 0x2B	; 43
    57b2:	79 f0       	breq	.+30     	; 0x57d2 <vfprintf+0xb0>
    57b4:	38 f4       	brcc	.+14     	; 0x57c4 <vfprintf+0xa2>
    57b6:	80 32       	cpi	r24, 0x20	; 32
    57b8:	79 f0       	breq	.+30     	; 0x57d8 <vfprintf+0xb6>
    57ba:	83 32       	cpi	r24, 0x23	; 35
    57bc:	a1 f4       	brne	.+40     	; 0x57e6 <vfprintf+0xc4>
    57be:	f9 2d       	mov	r31, r9
    57c0:	f0 61       	ori	r31, 0x10	; 16
    57c2:	2e c0       	rjmp	.+92     	; 0x5820 <vfprintf+0xfe>
    57c4:	8d 32       	cpi	r24, 0x2D	; 45
    57c6:	61 f0       	breq	.+24     	; 0x57e0 <vfprintf+0xbe>
    57c8:	80 33       	cpi	r24, 0x30	; 48
    57ca:	69 f4       	brne	.+26     	; 0x57e6 <vfprintf+0xc4>
    57cc:	29 2d       	mov	r18, r9
    57ce:	21 60       	ori	r18, 0x01	; 1
    57d0:	2d c0       	rjmp	.+90     	; 0x582c <vfprintf+0x10a>
    57d2:	39 2d       	mov	r19, r9
    57d4:	32 60       	ori	r19, 0x02	; 2
    57d6:	93 2e       	mov	r9, r19
    57d8:	89 2d       	mov	r24, r9
    57da:	84 60       	ori	r24, 0x04	; 4
    57dc:	98 2e       	mov	r9, r24
    57de:	2a c0       	rjmp	.+84     	; 0x5834 <vfprintf+0x112>
    57e0:	e9 2d       	mov	r30, r9
    57e2:	e8 60       	ori	r30, 0x08	; 8
    57e4:	15 c0       	rjmp	.+42     	; 0x5810 <vfprintf+0xee>
    57e6:	97 fc       	sbrc	r9, 7
    57e8:	2d c0       	rjmp	.+90     	; 0x5844 <vfprintf+0x122>
    57ea:	20 ed       	ldi	r18, 0xD0	; 208
    57ec:	28 0f       	add	r18, r24
    57ee:	2a 30       	cpi	r18, 0x0A	; 10
    57f0:	88 f4       	brcc	.+34     	; 0x5814 <vfprintf+0xf2>
    57f2:	96 fe       	sbrs	r9, 6
    57f4:	06 c0       	rjmp	.+12     	; 0x5802 <vfprintf+0xe0>
    57f6:	3a e0       	ldi	r19, 0x0A	; 10
    57f8:	13 9f       	mul	r17, r19
    57fa:	20 0d       	add	r18, r0
    57fc:	11 24       	eor	r1, r1
    57fe:	12 2f       	mov	r17, r18
    5800:	19 c0       	rjmp	.+50     	; 0x5834 <vfprintf+0x112>
    5802:	8a e0       	ldi	r24, 0x0A	; 10
    5804:	58 9e       	mul	r5, r24
    5806:	20 0d       	add	r18, r0
    5808:	11 24       	eor	r1, r1
    580a:	52 2e       	mov	r5, r18
    580c:	e9 2d       	mov	r30, r9
    580e:	e0 62       	ori	r30, 0x20	; 32
    5810:	9e 2e       	mov	r9, r30
    5812:	10 c0       	rjmp	.+32     	; 0x5834 <vfprintf+0x112>
    5814:	8e 32       	cpi	r24, 0x2E	; 46
    5816:	31 f4       	brne	.+12     	; 0x5824 <vfprintf+0x102>
    5818:	96 fc       	sbrc	r9, 6
    581a:	cc c2       	rjmp	.+1432   	; 0x5db4 <vfprintf+0x692>
    581c:	f9 2d       	mov	r31, r9
    581e:	f0 64       	ori	r31, 0x40	; 64
    5820:	9f 2e       	mov	r9, r31
    5822:	08 c0       	rjmp	.+16     	; 0x5834 <vfprintf+0x112>
    5824:	8c 36       	cpi	r24, 0x6C	; 108
    5826:	21 f4       	brne	.+8      	; 0x5830 <vfprintf+0x10e>
    5828:	29 2d       	mov	r18, r9
    582a:	20 68       	ori	r18, 0x80	; 128
    582c:	92 2e       	mov	r9, r18
    582e:	02 c0       	rjmp	.+4      	; 0x5834 <vfprintf+0x112>
    5830:	88 36       	cpi	r24, 0x68	; 104
    5832:	41 f4       	brne	.+16     	; 0x5844 <vfprintf+0x122>
    5834:	f1 01       	movw	r30, r2
    5836:	93 fd       	sbrc	r25, 3
    5838:	85 91       	lpm	r24, Z+
    583a:	93 ff       	sbrs	r25, 3
    583c:	81 91       	ld	r24, Z+
    583e:	1f 01       	movw	r2, r30
    5840:	81 11       	cpse	r24, r1
    5842:	b3 cf       	rjmp	.-154    	; 0x57aa <vfprintf+0x88>
    5844:	9b eb       	ldi	r25, 0xBB	; 187
    5846:	98 0f       	add	r25, r24
    5848:	93 30       	cpi	r25, 0x03	; 3
    584a:	20 f4       	brcc	.+8      	; 0x5854 <vfprintf+0x132>
    584c:	99 2d       	mov	r25, r9
    584e:	90 61       	ori	r25, 0x10	; 16
    5850:	80 5e       	subi	r24, 0xE0	; 224
    5852:	07 c0       	rjmp	.+14     	; 0x5862 <vfprintf+0x140>
    5854:	9b e9       	ldi	r25, 0x9B	; 155
    5856:	98 0f       	add	r25, r24
    5858:	93 30       	cpi	r25, 0x03	; 3
    585a:	08 f0       	brcs	.+2      	; 0x585e <vfprintf+0x13c>
    585c:	59 c1       	rjmp	.+690    	; 0x5b10 <vfprintf+0x3ee>
    585e:	99 2d       	mov	r25, r9
    5860:	9f 7e       	andi	r25, 0xEF	; 239
    5862:	96 ff       	sbrs	r25, 6
    5864:	16 e0       	ldi	r17, 0x06	; 6
    5866:	9f 73       	andi	r25, 0x3F	; 63
    5868:	99 2e       	mov	r9, r25
    586a:	85 36       	cpi	r24, 0x65	; 101
    586c:	19 f4       	brne	.+6      	; 0x5874 <vfprintf+0x152>
    586e:	90 64       	ori	r25, 0x40	; 64
    5870:	99 2e       	mov	r9, r25
    5872:	08 c0       	rjmp	.+16     	; 0x5884 <vfprintf+0x162>
    5874:	86 36       	cpi	r24, 0x66	; 102
    5876:	21 f4       	brne	.+8      	; 0x5880 <vfprintf+0x15e>
    5878:	39 2f       	mov	r19, r25
    587a:	30 68       	ori	r19, 0x80	; 128
    587c:	93 2e       	mov	r9, r19
    587e:	02 c0       	rjmp	.+4      	; 0x5884 <vfprintf+0x162>
    5880:	11 11       	cpse	r17, r1
    5882:	11 50       	subi	r17, 0x01	; 1
    5884:	97 fe       	sbrs	r9, 7
    5886:	07 c0       	rjmp	.+14     	; 0x5896 <vfprintf+0x174>
    5888:	1c 33       	cpi	r17, 0x3C	; 60
    588a:	50 f4       	brcc	.+20     	; 0x58a0 <vfprintf+0x17e>
    588c:	44 24       	eor	r4, r4
    588e:	43 94       	inc	r4
    5890:	41 0e       	add	r4, r17
    5892:	27 e0       	ldi	r18, 0x07	; 7
    5894:	0b c0       	rjmp	.+22     	; 0x58ac <vfprintf+0x18a>
    5896:	18 30       	cpi	r17, 0x08	; 8
    5898:	38 f0       	brcs	.+14     	; 0x58a8 <vfprintf+0x186>
    589a:	27 e0       	ldi	r18, 0x07	; 7
    589c:	17 e0       	ldi	r17, 0x07	; 7
    589e:	05 c0       	rjmp	.+10     	; 0x58aa <vfprintf+0x188>
    58a0:	27 e0       	ldi	r18, 0x07	; 7
    58a2:	9c e3       	ldi	r25, 0x3C	; 60
    58a4:	49 2e       	mov	r4, r25
    58a6:	02 c0       	rjmp	.+4      	; 0x58ac <vfprintf+0x18a>
    58a8:	21 2f       	mov	r18, r17
    58aa:	41 2c       	mov	r4, r1
    58ac:	56 01       	movw	r10, r12
    58ae:	84 e0       	ldi	r24, 0x04	; 4
    58b0:	a8 0e       	add	r10, r24
    58b2:	b1 1c       	adc	r11, r1
    58b4:	f6 01       	movw	r30, r12
    58b6:	60 81       	ld	r22, Z
    58b8:	71 81       	ldd	r23, Z+1	; 0x01
    58ba:	82 81       	ldd	r24, Z+2	; 0x02
    58bc:	93 81       	ldd	r25, Z+3	; 0x03
    58be:	04 2d       	mov	r16, r4
    58c0:	a3 01       	movw	r20, r6
    58c2:	df d2       	rcall	.+1470   	; 0x5e82 <__ftoa_engine>
    58c4:	6c 01       	movw	r12, r24
    58c6:	f9 81       	ldd	r31, Y+1	; 0x01
    58c8:	fc 87       	std	Y+12, r31	; 0x0c
    58ca:	f0 ff       	sbrs	r31, 0
    58cc:	02 c0       	rjmp	.+4      	; 0x58d2 <vfprintf+0x1b0>
    58ce:	f3 ff       	sbrs	r31, 3
    58d0:	06 c0       	rjmp	.+12     	; 0x58de <vfprintf+0x1bc>
    58d2:	91 fc       	sbrc	r9, 1
    58d4:	06 c0       	rjmp	.+12     	; 0x58e2 <vfprintf+0x1c0>
    58d6:	92 fe       	sbrs	r9, 2
    58d8:	06 c0       	rjmp	.+12     	; 0x58e6 <vfprintf+0x1c4>
    58da:	00 e2       	ldi	r16, 0x20	; 32
    58dc:	05 c0       	rjmp	.+10     	; 0x58e8 <vfprintf+0x1c6>
    58de:	0d e2       	ldi	r16, 0x2D	; 45
    58e0:	03 c0       	rjmp	.+6      	; 0x58e8 <vfprintf+0x1c6>
    58e2:	0b e2       	ldi	r16, 0x2B	; 43
    58e4:	01 c0       	rjmp	.+2      	; 0x58e8 <vfprintf+0x1c6>
    58e6:	00 e0       	ldi	r16, 0x00	; 0
    58e8:	8c 85       	ldd	r24, Y+12	; 0x0c
    58ea:	8c 70       	andi	r24, 0x0C	; 12
    58ec:	19 f0       	breq	.+6      	; 0x58f4 <vfprintf+0x1d2>
    58ee:	01 11       	cpse	r16, r1
    58f0:	43 c2       	rjmp	.+1158   	; 0x5d78 <vfprintf+0x656>
    58f2:	80 c2       	rjmp	.+1280   	; 0x5df4 <vfprintf+0x6d2>
    58f4:	97 fe       	sbrs	r9, 7
    58f6:	10 c0       	rjmp	.+32     	; 0x5918 <vfprintf+0x1f6>
    58f8:	4c 0c       	add	r4, r12
    58fa:	fc 85       	ldd	r31, Y+12	; 0x0c
    58fc:	f4 ff       	sbrs	r31, 4
    58fe:	04 c0       	rjmp	.+8      	; 0x5908 <vfprintf+0x1e6>
    5900:	8a 81       	ldd	r24, Y+2	; 0x02
    5902:	81 33       	cpi	r24, 0x31	; 49
    5904:	09 f4       	brne	.+2      	; 0x5908 <vfprintf+0x1e6>
    5906:	4a 94       	dec	r4
    5908:	14 14       	cp	r1, r4
    590a:	74 f5       	brge	.+92     	; 0x5968 <vfprintf+0x246>
    590c:	28 e0       	ldi	r18, 0x08	; 8
    590e:	24 15       	cp	r18, r4
    5910:	78 f5       	brcc	.+94     	; 0x5970 <vfprintf+0x24e>
    5912:	88 e0       	ldi	r24, 0x08	; 8
    5914:	48 2e       	mov	r4, r24
    5916:	2c c0       	rjmp	.+88     	; 0x5970 <vfprintf+0x24e>
    5918:	96 fc       	sbrc	r9, 6
    591a:	2a c0       	rjmp	.+84     	; 0x5970 <vfprintf+0x24e>
    591c:	81 2f       	mov	r24, r17
    591e:	90 e0       	ldi	r25, 0x00	; 0
    5920:	8c 15       	cp	r24, r12
    5922:	9d 05       	cpc	r25, r13
    5924:	9c f0       	brlt	.+38     	; 0x594c <vfprintf+0x22a>
    5926:	3c ef       	ldi	r19, 0xFC	; 252
    5928:	c3 16       	cp	r12, r19
    592a:	3f ef       	ldi	r19, 0xFF	; 255
    592c:	d3 06       	cpc	r13, r19
    592e:	74 f0       	brlt	.+28     	; 0x594c <vfprintf+0x22a>
    5930:	89 2d       	mov	r24, r9
    5932:	80 68       	ori	r24, 0x80	; 128
    5934:	98 2e       	mov	r9, r24
    5936:	0a c0       	rjmp	.+20     	; 0x594c <vfprintf+0x22a>
    5938:	e2 e0       	ldi	r30, 0x02	; 2
    593a:	f0 e0       	ldi	r31, 0x00	; 0
    593c:	ec 0f       	add	r30, r28
    593e:	fd 1f       	adc	r31, r29
    5940:	e1 0f       	add	r30, r17
    5942:	f1 1d       	adc	r31, r1
    5944:	80 81       	ld	r24, Z
    5946:	80 33       	cpi	r24, 0x30	; 48
    5948:	19 f4       	brne	.+6      	; 0x5950 <vfprintf+0x22e>
    594a:	11 50       	subi	r17, 0x01	; 1
    594c:	11 11       	cpse	r17, r1
    594e:	f4 cf       	rjmp	.-24     	; 0x5938 <vfprintf+0x216>
    5950:	97 fe       	sbrs	r9, 7
    5952:	0e c0       	rjmp	.+28     	; 0x5970 <vfprintf+0x24e>
    5954:	44 24       	eor	r4, r4
    5956:	43 94       	inc	r4
    5958:	41 0e       	add	r4, r17
    595a:	81 2f       	mov	r24, r17
    595c:	90 e0       	ldi	r25, 0x00	; 0
    595e:	c8 16       	cp	r12, r24
    5960:	d9 06       	cpc	r13, r25
    5962:	2c f4       	brge	.+10     	; 0x596e <vfprintf+0x24c>
    5964:	1c 19       	sub	r17, r12
    5966:	04 c0       	rjmp	.+8      	; 0x5970 <vfprintf+0x24e>
    5968:	44 24       	eor	r4, r4
    596a:	43 94       	inc	r4
    596c:	01 c0       	rjmp	.+2      	; 0x5970 <vfprintf+0x24e>
    596e:	10 e0       	ldi	r17, 0x00	; 0
    5970:	97 fe       	sbrs	r9, 7
    5972:	06 c0       	rjmp	.+12     	; 0x5980 <vfprintf+0x25e>
    5974:	1c 14       	cp	r1, r12
    5976:	1d 04       	cpc	r1, r13
    5978:	34 f4       	brge	.+12     	; 0x5986 <vfprintf+0x264>
    597a:	c6 01       	movw	r24, r12
    597c:	01 96       	adiw	r24, 0x01	; 1
    597e:	05 c0       	rjmp	.+10     	; 0x598a <vfprintf+0x268>
    5980:	85 e0       	ldi	r24, 0x05	; 5
    5982:	90 e0       	ldi	r25, 0x00	; 0
    5984:	02 c0       	rjmp	.+4      	; 0x598a <vfprintf+0x268>
    5986:	81 e0       	ldi	r24, 0x01	; 1
    5988:	90 e0       	ldi	r25, 0x00	; 0
    598a:	01 11       	cpse	r16, r1
    598c:	01 96       	adiw	r24, 0x01	; 1
    598e:	11 23       	and	r17, r17
    5990:	31 f0       	breq	.+12     	; 0x599e <vfprintf+0x27c>
    5992:	21 2f       	mov	r18, r17
    5994:	30 e0       	ldi	r19, 0x00	; 0
    5996:	2f 5f       	subi	r18, 0xFF	; 255
    5998:	3f 4f       	sbci	r19, 0xFF	; 255
    599a:	82 0f       	add	r24, r18
    599c:	93 1f       	adc	r25, r19
    599e:	25 2d       	mov	r18, r5
    59a0:	30 e0       	ldi	r19, 0x00	; 0
    59a2:	82 17       	cp	r24, r18
    59a4:	93 07       	cpc	r25, r19
    59a6:	14 f4       	brge	.+4      	; 0x59ac <vfprintf+0x28a>
    59a8:	58 1a       	sub	r5, r24
    59aa:	01 c0       	rjmp	.+2      	; 0x59ae <vfprintf+0x28c>
    59ac:	51 2c       	mov	r5, r1
    59ae:	89 2d       	mov	r24, r9
    59b0:	89 70       	andi	r24, 0x09	; 9
    59b2:	41 f4       	brne	.+16     	; 0x59c4 <vfprintf+0x2a2>
    59b4:	55 20       	and	r5, r5
    59b6:	31 f0       	breq	.+12     	; 0x59c4 <vfprintf+0x2a2>
    59b8:	b7 01       	movw	r22, r14
    59ba:	80 e2       	ldi	r24, 0x20	; 32
    59bc:	90 e0       	ldi	r25, 0x00	; 0
    59be:	79 d3       	rcall	.+1778   	; 0x60b2 <fputc>
    59c0:	5a 94       	dec	r5
    59c2:	f8 cf       	rjmp	.-16     	; 0x59b4 <vfprintf+0x292>
    59c4:	00 23       	and	r16, r16
    59c6:	21 f0       	breq	.+8      	; 0x59d0 <vfprintf+0x2ae>
    59c8:	b7 01       	movw	r22, r14
    59ca:	80 2f       	mov	r24, r16
    59cc:	90 e0       	ldi	r25, 0x00	; 0
    59ce:	71 d3       	rcall	.+1762   	; 0x60b2 <fputc>
    59d0:	93 fc       	sbrc	r9, 3
    59d2:	08 c0       	rjmp	.+16     	; 0x59e4 <vfprintf+0x2c2>
    59d4:	55 20       	and	r5, r5
    59d6:	31 f0       	breq	.+12     	; 0x59e4 <vfprintf+0x2c2>
    59d8:	b7 01       	movw	r22, r14
    59da:	80 e3       	ldi	r24, 0x30	; 48
    59dc:	90 e0       	ldi	r25, 0x00	; 0
    59de:	69 d3       	rcall	.+1746   	; 0x60b2 <fputc>
    59e0:	5a 94       	dec	r5
    59e2:	f8 cf       	rjmp	.-16     	; 0x59d4 <vfprintf+0x2b2>
    59e4:	97 fe       	sbrs	r9, 7
    59e6:	4a c0       	rjmp	.+148    	; 0x5a7c <vfprintf+0x35a>
    59e8:	46 01       	movw	r8, r12
    59ea:	d7 fe       	sbrs	r13, 7
    59ec:	02 c0       	rjmp	.+4      	; 0x59f2 <vfprintf+0x2d0>
    59ee:	81 2c       	mov	r8, r1
    59f0:	91 2c       	mov	r9, r1
    59f2:	c6 01       	movw	r24, r12
    59f4:	88 19       	sub	r24, r8
    59f6:	99 09       	sbc	r25, r9
    59f8:	f3 01       	movw	r30, r6
    59fa:	e8 0f       	add	r30, r24
    59fc:	f9 1f       	adc	r31, r25
    59fe:	fe 87       	std	Y+14, r31	; 0x0e
    5a00:	ed 87       	std	Y+13, r30	; 0x0d
    5a02:	96 01       	movw	r18, r12
    5a04:	24 19       	sub	r18, r4
    5a06:	31 09       	sbc	r19, r1
    5a08:	38 8b       	std	Y+16, r19	; 0x10
    5a0a:	2f 87       	std	Y+15, r18	; 0x0f
    5a0c:	01 2f       	mov	r16, r17
    5a0e:	10 e0       	ldi	r17, 0x00	; 0
    5a10:	11 95       	neg	r17
    5a12:	01 95       	neg	r16
    5a14:	11 09       	sbc	r17, r1
    5a16:	3f ef       	ldi	r19, 0xFF	; 255
    5a18:	83 16       	cp	r8, r19
    5a1a:	93 06       	cpc	r9, r19
    5a1c:	21 f4       	brne	.+8      	; 0x5a26 <vfprintf+0x304>
    5a1e:	b7 01       	movw	r22, r14
    5a20:	8e e2       	ldi	r24, 0x2E	; 46
    5a22:	90 e0       	ldi	r25, 0x00	; 0
    5a24:	46 d3       	rcall	.+1676   	; 0x60b2 <fputc>
    5a26:	c8 14       	cp	r12, r8
    5a28:	d9 04       	cpc	r13, r9
    5a2a:	4c f0       	brlt	.+18     	; 0x5a3e <vfprintf+0x31c>
    5a2c:	8f 85       	ldd	r24, Y+15	; 0x0f
    5a2e:	98 89       	ldd	r25, Y+16	; 0x10
    5a30:	88 15       	cp	r24, r8
    5a32:	99 05       	cpc	r25, r9
    5a34:	24 f4       	brge	.+8      	; 0x5a3e <vfprintf+0x31c>
    5a36:	ed 85       	ldd	r30, Y+13	; 0x0d
    5a38:	fe 85       	ldd	r31, Y+14	; 0x0e
    5a3a:	81 81       	ldd	r24, Z+1	; 0x01
    5a3c:	01 c0       	rjmp	.+2      	; 0x5a40 <vfprintf+0x31e>
    5a3e:	80 e3       	ldi	r24, 0x30	; 48
    5a40:	f1 e0       	ldi	r31, 0x01	; 1
    5a42:	8f 1a       	sub	r8, r31
    5a44:	91 08       	sbc	r9, r1
    5a46:	2d 85       	ldd	r18, Y+13	; 0x0d
    5a48:	3e 85       	ldd	r19, Y+14	; 0x0e
    5a4a:	2f 5f       	subi	r18, 0xFF	; 255
    5a4c:	3f 4f       	sbci	r19, 0xFF	; 255
    5a4e:	3e 87       	std	Y+14, r19	; 0x0e
    5a50:	2d 87       	std	Y+13, r18	; 0x0d
    5a52:	80 16       	cp	r8, r16
    5a54:	91 06       	cpc	r9, r17
    5a56:	24 f0       	brlt	.+8      	; 0x5a60 <vfprintf+0x33e>
    5a58:	b7 01       	movw	r22, r14
    5a5a:	90 e0       	ldi	r25, 0x00	; 0
    5a5c:	2a d3       	rcall	.+1620   	; 0x60b2 <fputc>
    5a5e:	db cf       	rjmp	.-74     	; 0x5a16 <vfprintf+0x2f4>
    5a60:	c8 14       	cp	r12, r8
    5a62:	d9 04       	cpc	r13, r9
    5a64:	41 f4       	brne	.+16     	; 0x5a76 <vfprintf+0x354>
    5a66:	9a 81       	ldd	r25, Y+2	; 0x02
    5a68:	96 33       	cpi	r25, 0x36	; 54
    5a6a:	20 f4       	brcc	.+8      	; 0x5a74 <vfprintf+0x352>
    5a6c:	95 33       	cpi	r25, 0x35	; 53
    5a6e:	19 f4       	brne	.+6      	; 0x5a76 <vfprintf+0x354>
    5a70:	3c 85       	ldd	r19, Y+12	; 0x0c
    5a72:	34 ff       	sbrs	r19, 4
    5a74:	81 e3       	ldi	r24, 0x31	; 49
    5a76:	b7 01       	movw	r22, r14
    5a78:	90 e0       	ldi	r25, 0x00	; 0
    5a7a:	48 c0       	rjmp	.+144    	; 0x5b0c <vfprintf+0x3ea>
    5a7c:	8a 81       	ldd	r24, Y+2	; 0x02
    5a7e:	81 33       	cpi	r24, 0x31	; 49
    5a80:	19 f0       	breq	.+6      	; 0x5a88 <vfprintf+0x366>
    5a82:	9c 85       	ldd	r25, Y+12	; 0x0c
    5a84:	9f 7e       	andi	r25, 0xEF	; 239
    5a86:	9c 87       	std	Y+12, r25	; 0x0c
    5a88:	b7 01       	movw	r22, r14
    5a8a:	90 e0       	ldi	r25, 0x00	; 0
    5a8c:	12 d3       	rcall	.+1572   	; 0x60b2 <fputc>
    5a8e:	11 11       	cpse	r17, r1
    5a90:	05 c0       	rjmp	.+10     	; 0x5a9c <vfprintf+0x37a>
    5a92:	94 fc       	sbrc	r9, 4
    5a94:	16 c0       	rjmp	.+44     	; 0x5ac2 <vfprintf+0x3a0>
    5a96:	85 e6       	ldi	r24, 0x65	; 101
    5a98:	90 e0       	ldi	r25, 0x00	; 0
    5a9a:	15 c0       	rjmp	.+42     	; 0x5ac6 <vfprintf+0x3a4>
    5a9c:	b7 01       	movw	r22, r14
    5a9e:	8e e2       	ldi	r24, 0x2E	; 46
    5aa0:	90 e0       	ldi	r25, 0x00	; 0
    5aa2:	07 d3       	rcall	.+1550   	; 0x60b2 <fputc>
    5aa4:	1e 5f       	subi	r17, 0xFE	; 254
    5aa6:	82 e0       	ldi	r24, 0x02	; 2
    5aa8:	01 e0       	ldi	r16, 0x01	; 1
    5aaa:	08 0f       	add	r16, r24
    5aac:	f3 01       	movw	r30, r6
    5aae:	e8 0f       	add	r30, r24
    5ab0:	f1 1d       	adc	r31, r1
    5ab2:	80 81       	ld	r24, Z
    5ab4:	b7 01       	movw	r22, r14
    5ab6:	90 e0       	ldi	r25, 0x00	; 0
    5ab8:	fc d2       	rcall	.+1528   	; 0x60b2 <fputc>
    5aba:	80 2f       	mov	r24, r16
    5abc:	01 13       	cpse	r16, r17
    5abe:	f4 cf       	rjmp	.-24     	; 0x5aa8 <vfprintf+0x386>
    5ac0:	e8 cf       	rjmp	.-48     	; 0x5a92 <vfprintf+0x370>
    5ac2:	85 e4       	ldi	r24, 0x45	; 69
    5ac4:	90 e0       	ldi	r25, 0x00	; 0
    5ac6:	b7 01       	movw	r22, r14
    5ac8:	f4 d2       	rcall	.+1512   	; 0x60b2 <fputc>
    5aca:	d7 fc       	sbrc	r13, 7
    5acc:	06 c0       	rjmp	.+12     	; 0x5ada <vfprintf+0x3b8>
    5ace:	c1 14       	cp	r12, r1
    5ad0:	d1 04       	cpc	r13, r1
    5ad2:	41 f4       	brne	.+16     	; 0x5ae4 <vfprintf+0x3c2>
    5ad4:	ec 85       	ldd	r30, Y+12	; 0x0c
    5ad6:	e4 ff       	sbrs	r30, 4
    5ad8:	05 c0       	rjmp	.+10     	; 0x5ae4 <vfprintf+0x3c2>
    5ada:	d1 94       	neg	r13
    5adc:	c1 94       	neg	r12
    5ade:	d1 08       	sbc	r13, r1
    5ae0:	8d e2       	ldi	r24, 0x2D	; 45
    5ae2:	01 c0       	rjmp	.+2      	; 0x5ae6 <vfprintf+0x3c4>
    5ae4:	8b e2       	ldi	r24, 0x2B	; 43
    5ae6:	b7 01       	movw	r22, r14
    5ae8:	90 e0       	ldi	r25, 0x00	; 0
    5aea:	e3 d2       	rcall	.+1478   	; 0x60b2 <fputc>
    5aec:	80 e3       	ldi	r24, 0x30	; 48
    5aee:	2a e0       	ldi	r18, 0x0A	; 10
    5af0:	c2 16       	cp	r12, r18
    5af2:	d1 04       	cpc	r13, r1
    5af4:	2c f0       	brlt	.+10     	; 0x5b00 <vfprintf+0x3de>
    5af6:	8f 5f       	subi	r24, 0xFF	; 255
    5af8:	fa e0       	ldi	r31, 0x0A	; 10
    5afa:	cf 1a       	sub	r12, r31
    5afc:	d1 08       	sbc	r13, r1
    5afe:	f7 cf       	rjmp	.-18     	; 0x5aee <vfprintf+0x3cc>
    5b00:	b7 01       	movw	r22, r14
    5b02:	90 e0       	ldi	r25, 0x00	; 0
    5b04:	d6 d2       	rcall	.+1452   	; 0x60b2 <fputc>
    5b06:	b7 01       	movw	r22, r14
    5b08:	c6 01       	movw	r24, r12
    5b0a:	c0 96       	adiw	r24, 0x30	; 48
    5b0c:	d2 d2       	rcall	.+1444   	; 0x60b2 <fputc>
    5b0e:	49 c1       	rjmp	.+658    	; 0x5da2 <vfprintf+0x680>
    5b10:	83 36       	cpi	r24, 0x63	; 99
    5b12:	31 f0       	breq	.+12     	; 0x5b20 <vfprintf+0x3fe>
    5b14:	83 37       	cpi	r24, 0x73	; 115
    5b16:	79 f0       	breq	.+30     	; 0x5b36 <vfprintf+0x414>
    5b18:	83 35       	cpi	r24, 0x53	; 83
    5b1a:	09 f0       	breq	.+2      	; 0x5b1e <vfprintf+0x3fc>
    5b1c:	52 c0       	rjmp	.+164    	; 0x5bc2 <vfprintf+0x4a0>
    5b1e:	1f c0       	rjmp	.+62     	; 0x5b5e <vfprintf+0x43c>
    5b20:	56 01       	movw	r10, r12
    5b22:	32 e0       	ldi	r19, 0x02	; 2
    5b24:	a3 0e       	add	r10, r19
    5b26:	b1 1c       	adc	r11, r1
    5b28:	f6 01       	movw	r30, r12
    5b2a:	80 81       	ld	r24, Z
    5b2c:	89 83       	std	Y+1, r24	; 0x01
    5b2e:	01 e0       	ldi	r16, 0x01	; 1
    5b30:	10 e0       	ldi	r17, 0x00	; 0
    5b32:	63 01       	movw	r12, r6
    5b34:	11 c0       	rjmp	.+34     	; 0x5b58 <vfprintf+0x436>
    5b36:	56 01       	movw	r10, r12
    5b38:	f2 e0       	ldi	r31, 0x02	; 2
    5b3a:	af 0e       	add	r10, r31
    5b3c:	b1 1c       	adc	r11, r1
    5b3e:	f6 01       	movw	r30, r12
    5b40:	c0 80       	ld	r12, Z
    5b42:	d1 80       	ldd	r13, Z+1	; 0x01
    5b44:	96 fe       	sbrs	r9, 6
    5b46:	03 c0       	rjmp	.+6      	; 0x5b4e <vfprintf+0x42c>
    5b48:	61 2f       	mov	r22, r17
    5b4a:	70 e0       	ldi	r23, 0x00	; 0
    5b4c:	02 c0       	rjmp	.+4      	; 0x5b52 <vfprintf+0x430>
    5b4e:	6f ef       	ldi	r22, 0xFF	; 255
    5b50:	7f ef       	ldi	r23, 0xFF	; 255
    5b52:	c6 01       	movw	r24, r12
    5b54:	80 d2       	rcall	.+1280   	; 0x6056 <strnlen>
    5b56:	8c 01       	movw	r16, r24
    5b58:	f9 2d       	mov	r31, r9
    5b5a:	ff 77       	andi	r31, 0x7F	; 127
    5b5c:	13 c0       	rjmp	.+38     	; 0x5b84 <vfprintf+0x462>
    5b5e:	56 01       	movw	r10, r12
    5b60:	22 e0       	ldi	r18, 0x02	; 2
    5b62:	a2 0e       	add	r10, r18
    5b64:	b1 1c       	adc	r11, r1
    5b66:	f6 01       	movw	r30, r12
    5b68:	c0 80       	ld	r12, Z
    5b6a:	d1 80       	ldd	r13, Z+1	; 0x01
    5b6c:	96 fe       	sbrs	r9, 6
    5b6e:	03 c0       	rjmp	.+6      	; 0x5b76 <vfprintf+0x454>
    5b70:	61 2f       	mov	r22, r17
    5b72:	70 e0       	ldi	r23, 0x00	; 0
    5b74:	02 c0       	rjmp	.+4      	; 0x5b7a <vfprintf+0x458>
    5b76:	6f ef       	ldi	r22, 0xFF	; 255
    5b78:	7f ef       	ldi	r23, 0xFF	; 255
    5b7a:	c6 01       	movw	r24, r12
    5b7c:	5a d2       	rcall	.+1204   	; 0x6032 <strnlen_P>
    5b7e:	8c 01       	movw	r16, r24
    5b80:	f9 2d       	mov	r31, r9
    5b82:	f0 68       	ori	r31, 0x80	; 128
    5b84:	9f 2e       	mov	r9, r31
    5b86:	f3 fd       	sbrc	r31, 3
    5b88:	18 c0       	rjmp	.+48     	; 0x5bba <vfprintf+0x498>
    5b8a:	85 2d       	mov	r24, r5
    5b8c:	90 e0       	ldi	r25, 0x00	; 0
    5b8e:	08 17       	cp	r16, r24
    5b90:	19 07       	cpc	r17, r25
    5b92:	98 f4       	brcc	.+38     	; 0x5bba <vfprintf+0x498>
    5b94:	b7 01       	movw	r22, r14
    5b96:	80 e2       	ldi	r24, 0x20	; 32
    5b98:	90 e0       	ldi	r25, 0x00	; 0
    5b9a:	8b d2       	rcall	.+1302   	; 0x60b2 <fputc>
    5b9c:	5a 94       	dec	r5
    5b9e:	f5 cf       	rjmp	.-22     	; 0x5b8a <vfprintf+0x468>
    5ba0:	f6 01       	movw	r30, r12
    5ba2:	97 fc       	sbrc	r9, 7
    5ba4:	85 91       	lpm	r24, Z+
    5ba6:	97 fe       	sbrs	r9, 7
    5ba8:	81 91       	ld	r24, Z+
    5baa:	6f 01       	movw	r12, r30
    5bac:	b7 01       	movw	r22, r14
    5bae:	90 e0       	ldi	r25, 0x00	; 0
    5bb0:	80 d2       	rcall	.+1280   	; 0x60b2 <fputc>
    5bb2:	51 10       	cpse	r5, r1
    5bb4:	5a 94       	dec	r5
    5bb6:	01 50       	subi	r16, 0x01	; 1
    5bb8:	11 09       	sbc	r17, r1
    5bba:	01 15       	cp	r16, r1
    5bbc:	11 05       	cpc	r17, r1
    5bbe:	81 f7       	brne	.-32     	; 0x5ba0 <vfprintf+0x47e>
    5bc0:	f0 c0       	rjmp	.+480    	; 0x5da2 <vfprintf+0x680>
    5bc2:	84 36       	cpi	r24, 0x64	; 100
    5bc4:	11 f0       	breq	.+4      	; 0x5bca <vfprintf+0x4a8>
    5bc6:	89 36       	cpi	r24, 0x69	; 105
    5bc8:	59 f5       	brne	.+86     	; 0x5c20 <vfprintf+0x4fe>
    5bca:	56 01       	movw	r10, r12
    5bcc:	97 fe       	sbrs	r9, 7
    5bce:	09 c0       	rjmp	.+18     	; 0x5be2 <vfprintf+0x4c0>
    5bd0:	24 e0       	ldi	r18, 0x04	; 4
    5bd2:	a2 0e       	add	r10, r18
    5bd4:	b1 1c       	adc	r11, r1
    5bd6:	f6 01       	movw	r30, r12
    5bd8:	60 81       	ld	r22, Z
    5bda:	71 81       	ldd	r23, Z+1	; 0x01
    5bdc:	82 81       	ldd	r24, Z+2	; 0x02
    5bde:	93 81       	ldd	r25, Z+3	; 0x03
    5be0:	0a c0       	rjmp	.+20     	; 0x5bf6 <vfprintf+0x4d4>
    5be2:	f2 e0       	ldi	r31, 0x02	; 2
    5be4:	af 0e       	add	r10, r31
    5be6:	b1 1c       	adc	r11, r1
    5be8:	f6 01       	movw	r30, r12
    5bea:	60 81       	ld	r22, Z
    5bec:	71 81       	ldd	r23, Z+1	; 0x01
    5bee:	07 2e       	mov	r0, r23
    5bf0:	00 0c       	add	r0, r0
    5bf2:	88 0b       	sbc	r24, r24
    5bf4:	99 0b       	sbc	r25, r25
    5bf6:	f9 2d       	mov	r31, r9
    5bf8:	ff 76       	andi	r31, 0x6F	; 111
    5bfa:	9f 2e       	mov	r9, r31
    5bfc:	97 ff       	sbrs	r25, 7
    5bfe:	09 c0       	rjmp	.+18     	; 0x5c12 <vfprintf+0x4f0>
    5c00:	90 95       	com	r25
    5c02:	80 95       	com	r24
    5c04:	70 95       	com	r23
    5c06:	61 95       	neg	r22
    5c08:	7f 4f       	sbci	r23, 0xFF	; 255
    5c0a:	8f 4f       	sbci	r24, 0xFF	; 255
    5c0c:	9f 4f       	sbci	r25, 0xFF	; 255
    5c0e:	f0 68       	ori	r31, 0x80	; 128
    5c10:	9f 2e       	mov	r9, r31
    5c12:	2a e0       	ldi	r18, 0x0A	; 10
    5c14:	30 e0       	ldi	r19, 0x00	; 0
    5c16:	a3 01       	movw	r20, r6
    5c18:	b6 d2       	rcall	.+1388   	; 0x6186 <__ultoa_invert>
    5c1a:	c8 2e       	mov	r12, r24
    5c1c:	c6 18       	sub	r12, r6
    5c1e:	3e c0       	rjmp	.+124    	; 0x5c9c <vfprintf+0x57a>
    5c20:	09 2d       	mov	r16, r9
    5c22:	85 37       	cpi	r24, 0x75	; 117
    5c24:	21 f4       	brne	.+8      	; 0x5c2e <vfprintf+0x50c>
    5c26:	0f 7e       	andi	r16, 0xEF	; 239
    5c28:	2a e0       	ldi	r18, 0x0A	; 10
    5c2a:	30 e0       	ldi	r19, 0x00	; 0
    5c2c:	1d c0       	rjmp	.+58     	; 0x5c68 <vfprintf+0x546>
    5c2e:	09 7f       	andi	r16, 0xF9	; 249
    5c30:	8f 36       	cpi	r24, 0x6F	; 111
    5c32:	91 f0       	breq	.+36     	; 0x5c58 <vfprintf+0x536>
    5c34:	18 f4       	brcc	.+6      	; 0x5c3c <vfprintf+0x51a>
    5c36:	88 35       	cpi	r24, 0x58	; 88
    5c38:	59 f0       	breq	.+22     	; 0x5c50 <vfprintf+0x52e>
    5c3a:	bc c0       	rjmp	.+376    	; 0x5db4 <vfprintf+0x692>
    5c3c:	80 37       	cpi	r24, 0x70	; 112
    5c3e:	19 f0       	breq	.+6      	; 0x5c46 <vfprintf+0x524>
    5c40:	88 37       	cpi	r24, 0x78	; 120
    5c42:	11 f0       	breq	.+4      	; 0x5c48 <vfprintf+0x526>
    5c44:	b7 c0       	rjmp	.+366    	; 0x5db4 <vfprintf+0x692>
    5c46:	00 61       	ori	r16, 0x10	; 16
    5c48:	04 ff       	sbrs	r16, 4
    5c4a:	09 c0       	rjmp	.+18     	; 0x5c5e <vfprintf+0x53c>
    5c4c:	04 60       	ori	r16, 0x04	; 4
    5c4e:	07 c0       	rjmp	.+14     	; 0x5c5e <vfprintf+0x53c>
    5c50:	94 fe       	sbrs	r9, 4
    5c52:	08 c0       	rjmp	.+16     	; 0x5c64 <vfprintf+0x542>
    5c54:	06 60       	ori	r16, 0x06	; 6
    5c56:	06 c0       	rjmp	.+12     	; 0x5c64 <vfprintf+0x542>
    5c58:	28 e0       	ldi	r18, 0x08	; 8
    5c5a:	30 e0       	ldi	r19, 0x00	; 0
    5c5c:	05 c0       	rjmp	.+10     	; 0x5c68 <vfprintf+0x546>
    5c5e:	20 e1       	ldi	r18, 0x10	; 16
    5c60:	30 e0       	ldi	r19, 0x00	; 0
    5c62:	02 c0       	rjmp	.+4      	; 0x5c68 <vfprintf+0x546>
    5c64:	20 e1       	ldi	r18, 0x10	; 16
    5c66:	32 e0       	ldi	r19, 0x02	; 2
    5c68:	56 01       	movw	r10, r12
    5c6a:	07 ff       	sbrs	r16, 7
    5c6c:	09 c0       	rjmp	.+18     	; 0x5c80 <vfprintf+0x55e>
    5c6e:	84 e0       	ldi	r24, 0x04	; 4
    5c70:	a8 0e       	add	r10, r24
    5c72:	b1 1c       	adc	r11, r1
    5c74:	f6 01       	movw	r30, r12
    5c76:	60 81       	ld	r22, Z
    5c78:	71 81       	ldd	r23, Z+1	; 0x01
    5c7a:	82 81       	ldd	r24, Z+2	; 0x02
    5c7c:	93 81       	ldd	r25, Z+3	; 0x03
    5c7e:	08 c0       	rjmp	.+16     	; 0x5c90 <vfprintf+0x56e>
    5c80:	f2 e0       	ldi	r31, 0x02	; 2
    5c82:	af 0e       	add	r10, r31
    5c84:	b1 1c       	adc	r11, r1
    5c86:	f6 01       	movw	r30, r12
    5c88:	60 81       	ld	r22, Z
    5c8a:	71 81       	ldd	r23, Z+1	; 0x01
    5c8c:	80 e0       	ldi	r24, 0x00	; 0
    5c8e:	90 e0       	ldi	r25, 0x00	; 0
    5c90:	a3 01       	movw	r20, r6
    5c92:	79 d2       	rcall	.+1266   	; 0x6186 <__ultoa_invert>
    5c94:	c8 2e       	mov	r12, r24
    5c96:	c6 18       	sub	r12, r6
    5c98:	0f 77       	andi	r16, 0x7F	; 127
    5c9a:	90 2e       	mov	r9, r16
    5c9c:	96 fe       	sbrs	r9, 6
    5c9e:	0b c0       	rjmp	.+22     	; 0x5cb6 <vfprintf+0x594>
    5ca0:	09 2d       	mov	r16, r9
    5ca2:	0e 7f       	andi	r16, 0xFE	; 254
    5ca4:	c1 16       	cp	r12, r17
    5ca6:	50 f4       	brcc	.+20     	; 0x5cbc <vfprintf+0x59a>
    5ca8:	94 fe       	sbrs	r9, 4
    5caa:	0a c0       	rjmp	.+20     	; 0x5cc0 <vfprintf+0x59e>
    5cac:	92 fc       	sbrc	r9, 2
    5cae:	08 c0       	rjmp	.+16     	; 0x5cc0 <vfprintf+0x59e>
    5cb0:	09 2d       	mov	r16, r9
    5cb2:	0e 7e       	andi	r16, 0xEE	; 238
    5cb4:	05 c0       	rjmp	.+10     	; 0x5cc0 <vfprintf+0x59e>
    5cb6:	dc 2c       	mov	r13, r12
    5cb8:	09 2d       	mov	r16, r9
    5cba:	03 c0       	rjmp	.+6      	; 0x5cc2 <vfprintf+0x5a0>
    5cbc:	dc 2c       	mov	r13, r12
    5cbe:	01 c0       	rjmp	.+2      	; 0x5cc2 <vfprintf+0x5a0>
    5cc0:	d1 2e       	mov	r13, r17
    5cc2:	04 ff       	sbrs	r16, 4
    5cc4:	0d c0       	rjmp	.+26     	; 0x5ce0 <vfprintf+0x5be>
    5cc6:	fe 01       	movw	r30, r28
    5cc8:	ec 0d       	add	r30, r12
    5cca:	f1 1d       	adc	r31, r1
    5ccc:	80 81       	ld	r24, Z
    5cce:	80 33       	cpi	r24, 0x30	; 48
    5cd0:	11 f4       	brne	.+4      	; 0x5cd6 <vfprintf+0x5b4>
    5cd2:	09 7e       	andi	r16, 0xE9	; 233
    5cd4:	09 c0       	rjmp	.+18     	; 0x5ce8 <vfprintf+0x5c6>
    5cd6:	02 ff       	sbrs	r16, 2
    5cd8:	06 c0       	rjmp	.+12     	; 0x5ce6 <vfprintf+0x5c4>
    5cda:	d3 94       	inc	r13
    5cdc:	d3 94       	inc	r13
    5cde:	04 c0       	rjmp	.+8      	; 0x5ce8 <vfprintf+0x5c6>
    5ce0:	80 2f       	mov	r24, r16
    5ce2:	86 78       	andi	r24, 0x86	; 134
    5ce4:	09 f0       	breq	.+2      	; 0x5ce8 <vfprintf+0x5c6>
    5ce6:	d3 94       	inc	r13
    5ce8:	03 fd       	sbrc	r16, 3
    5cea:	10 c0       	rjmp	.+32     	; 0x5d0c <vfprintf+0x5ea>
    5cec:	00 ff       	sbrs	r16, 0
    5cee:	06 c0       	rjmp	.+12     	; 0x5cfc <vfprintf+0x5da>
    5cf0:	1c 2d       	mov	r17, r12
    5cf2:	d5 14       	cp	r13, r5
    5cf4:	78 f4       	brcc	.+30     	; 0x5d14 <vfprintf+0x5f2>
    5cf6:	15 0d       	add	r17, r5
    5cf8:	1d 19       	sub	r17, r13
    5cfa:	0c c0       	rjmp	.+24     	; 0x5d14 <vfprintf+0x5f2>
    5cfc:	d5 14       	cp	r13, r5
    5cfe:	50 f4       	brcc	.+20     	; 0x5d14 <vfprintf+0x5f2>
    5d00:	b7 01       	movw	r22, r14
    5d02:	80 e2       	ldi	r24, 0x20	; 32
    5d04:	90 e0       	ldi	r25, 0x00	; 0
    5d06:	d5 d1       	rcall	.+938    	; 0x60b2 <fputc>
    5d08:	d3 94       	inc	r13
    5d0a:	f8 cf       	rjmp	.-16     	; 0x5cfc <vfprintf+0x5da>
    5d0c:	d5 14       	cp	r13, r5
    5d0e:	10 f4       	brcc	.+4      	; 0x5d14 <vfprintf+0x5f2>
    5d10:	5d 18       	sub	r5, r13
    5d12:	01 c0       	rjmp	.+2      	; 0x5d16 <vfprintf+0x5f4>
    5d14:	51 2c       	mov	r5, r1
    5d16:	04 ff       	sbrs	r16, 4
    5d18:	0f c0       	rjmp	.+30     	; 0x5d38 <vfprintf+0x616>
    5d1a:	b7 01       	movw	r22, r14
    5d1c:	80 e3       	ldi	r24, 0x30	; 48
    5d1e:	90 e0       	ldi	r25, 0x00	; 0
    5d20:	c8 d1       	rcall	.+912    	; 0x60b2 <fputc>
    5d22:	02 ff       	sbrs	r16, 2
    5d24:	16 c0       	rjmp	.+44     	; 0x5d52 <vfprintf+0x630>
    5d26:	01 fd       	sbrc	r16, 1
    5d28:	03 c0       	rjmp	.+6      	; 0x5d30 <vfprintf+0x60e>
    5d2a:	88 e7       	ldi	r24, 0x78	; 120
    5d2c:	90 e0       	ldi	r25, 0x00	; 0
    5d2e:	02 c0       	rjmp	.+4      	; 0x5d34 <vfprintf+0x612>
    5d30:	88 e5       	ldi	r24, 0x58	; 88
    5d32:	90 e0       	ldi	r25, 0x00	; 0
    5d34:	b7 01       	movw	r22, r14
    5d36:	0c c0       	rjmp	.+24     	; 0x5d50 <vfprintf+0x62e>
    5d38:	80 2f       	mov	r24, r16
    5d3a:	86 78       	andi	r24, 0x86	; 134
    5d3c:	51 f0       	breq	.+20     	; 0x5d52 <vfprintf+0x630>
    5d3e:	01 ff       	sbrs	r16, 1
    5d40:	02 c0       	rjmp	.+4      	; 0x5d46 <vfprintf+0x624>
    5d42:	8b e2       	ldi	r24, 0x2B	; 43
    5d44:	01 c0       	rjmp	.+2      	; 0x5d48 <vfprintf+0x626>
    5d46:	80 e2       	ldi	r24, 0x20	; 32
    5d48:	07 fd       	sbrc	r16, 7
    5d4a:	8d e2       	ldi	r24, 0x2D	; 45
    5d4c:	b7 01       	movw	r22, r14
    5d4e:	90 e0       	ldi	r25, 0x00	; 0
    5d50:	b0 d1       	rcall	.+864    	; 0x60b2 <fputc>
    5d52:	c1 16       	cp	r12, r17
    5d54:	30 f4       	brcc	.+12     	; 0x5d62 <vfprintf+0x640>
    5d56:	b7 01       	movw	r22, r14
    5d58:	80 e3       	ldi	r24, 0x30	; 48
    5d5a:	90 e0       	ldi	r25, 0x00	; 0
    5d5c:	aa d1       	rcall	.+852    	; 0x60b2 <fputc>
    5d5e:	11 50       	subi	r17, 0x01	; 1
    5d60:	f8 cf       	rjmp	.-16     	; 0x5d52 <vfprintf+0x630>
    5d62:	ca 94       	dec	r12
    5d64:	f3 01       	movw	r30, r6
    5d66:	ec 0d       	add	r30, r12
    5d68:	f1 1d       	adc	r31, r1
    5d6a:	80 81       	ld	r24, Z
    5d6c:	b7 01       	movw	r22, r14
    5d6e:	90 e0       	ldi	r25, 0x00	; 0
    5d70:	a0 d1       	rcall	.+832    	; 0x60b2 <fputc>
    5d72:	c1 10       	cpse	r12, r1
    5d74:	f6 cf       	rjmp	.-20     	; 0x5d62 <vfprintf+0x640>
    5d76:	15 c0       	rjmp	.+42     	; 0x5da2 <vfprintf+0x680>
    5d78:	f4 e0       	ldi	r31, 0x04	; 4
    5d7a:	f5 15       	cp	r31, r5
    5d7c:	50 f5       	brcc	.+84     	; 0x5dd2 <vfprintf+0x6b0>
    5d7e:	84 e0       	ldi	r24, 0x04	; 4
    5d80:	58 1a       	sub	r5, r24
    5d82:	93 fe       	sbrs	r9, 3
    5d84:	1e c0       	rjmp	.+60     	; 0x5dc2 <vfprintf+0x6a0>
    5d86:	01 11       	cpse	r16, r1
    5d88:	25 c0       	rjmp	.+74     	; 0x5dd4 <vfprintf+0x6b2>
    5d8a:	2c 85       	ldd	r18, Y+12	; 0x0c
    5d8c:	23 ff       	sbrs	r18, 3
    5d8e:	27 c0       	rjmp	.+78     	; 0x5dde <vfprintf+0x6bc>
    5d90:	0a ea       	ldi	r16, 0xAA	; 170
    5d92:	10 e0       	ldi	r17, 0x00	; 0
    5d94:	39 2d       	mov	r19, r9
    5d96:	30 71       	andi	r19, 0x10	; 16
    5d98:	93 2e       	mov	r9, r19
    5d9a:	f8 01       	movw	r30, r16
    5d9c:	84 91       	lpm	r24, Z
    5d9e:	81 11       	cpse	r24, r1
    5da0:	21 c0       	rjmp	.+66     	; 0x5de4 <vfprintf+0x6c2>
    5da2:	55 20       	and	r5, r5
    5da4:	09 f4       	brne	.+2      	; 0x5da8 <vfprintf+0x686>
    5da6:	fc cc       	rjmp	.-1544   	; 0x57a0 <vfprintf+0x7e>
    5da8:	b7 01       	movw	r22, r14
    5daa:	80 e2       	ldi	r24, 0x20	; 32
    5dac:	90 e0       	ldi	r25, 0x00	; 0
    5dae:	81 d1       	rcall	.+770    	; 0x60b2 <fputc>
    5db0:	5a 94       	dec	r5
    5db2:	f7 cf       	rjmp	.-18     	; 0x5da2 <vfprintf+0x680>
    5db4:	f7 01       	movw	r30, r14
    5db6:	86 81       	ldd	r24, Z+6	; 0x06
    5db8:	97 81       	ldd	r25, Z+7	; 0x07
    5dba:	23 c0       	rjmp	.+70     	; 0x5e02 <vfprintf+0x6e0>
    5dbc:	8f ef       	ldi	r24, 0xFF	; 255
    5dbe:	9f ef       	ldi	r25, 0xFF	; 255
    5dc0:	20 c0       	rjmp	.+64     	; 0x5e02 <vfprintf+0x6e0>
    5dc2:	b7 01       	movw	r22, r14
    5dc4:	80 e2       	ldi	r24, 0x20	; 32
    5dc6:	90 e0       	ldi	r25, 0x00	; 0
    5dc8:	74 d1       	rcall	.+744    	; 0x60b2 <fputc>
    5dca:	5a 94       	dec	r5
    5dcc:	51 10       	cpse	r5, r1
    5dce:	f9 cf       	rjmp	.-14     	; 0x5dc2 <vfprintf+0x6a0>
    5dd0:	da cf       	rjmp	.-76     	; 0x5d86 <vfprintf+0x664>
    5dd2:	51 2c       	mov	r5, r1
    5dd4:	b7 01       	movw	r22, r14
    5dd6:	80 2f       	mov	r24, r16
    5dd8:	90 e0       	ldi	r25, 0x00	; 0
    5dda:	6b d1       	rcall	.+726    	; 0x60b2 <fputc>
    5ddc:	d6 cf       	rjmp	.-84     	; 0x5d8a <vfprintf+0x668>
    5dde:	0e ea       	ldi	r16, 0xAE	; 174
    5de0:	10 e0       	ldi	r17, 0x00	; 0
    5de2:	d8 cf       	rjmp	.-80     	; 0x5d94 <vfprintf+0x672>
    5de4:	91 10       	cpse	r9, r1
    5de6:	80 52       	subi	r24, 0x20	; 32
    5de8:	b7 01       	movw	r22, r14
    5dea:	90 e0       	ldi	r25, 0x00	; 0
    5dec:	62 d1       	rcall	.+708    	; 0x60b2 <fputc>
    5dee:	0f 5f       	subi	r16, 0xFF	; 255
    5df0:	1f 4f       	sbci	r17, 0xFF	; 255
    5df2:	d3 cf       	rjmp	.-90     	; 0x5d9a <vfprintf+0x678>
    5df4:	23 e0       	ldi	r18, 0x03	; 3
    5df6:	25 15       	cp	r18, r5
    5df8:	10 f4       	brcc	.+4      	; 0x5dfe <vfprintf+0x6dc>
    5dfa:	83 e0       	ldi	r24, 0x03	; 3
    5dfc:	c1 cf       	rjmp	.-126    	; 0x5d80 <vfprintf+0x65e>
    5dfe:	51 2c       	mov	r5, r1
    5e00:	c4 cf       	rjmp	.-120    	; 0x5d8a <vfprintf+0x668>
    5e02:	60 96       	adiw	r28, 0x10	; 16
    5e04:	0f b6       	in	r0, 0x3f	; 63
    5e06:	f8 94       	cli
    5e08:	de bf       	out	0x3e, r29	; 62
    5e0a:	0f be       	out	0x3f, r0	; 63
    5e0c:	cd bf       	out	0x3d, r28	; 61
    5e0e:	df 91       	pop	r29
    5e10:	cf 91       	pop	r28
    5e12:	1f 91       	pop	r17
    5e14:	0f 91       	pop	r16
    5e16:	ff 90       	pop	r15
    5e18:	ef 90       	pop	r14
    5e1a:	df 90       	pop	r13
    5e1c:	cf 90       	pop	r12
    5e1e:	bf 90       	pop	r11
    5e20:	af 90       	pop	r10
    5e22:	9f 90       	pop	r9
    5e24:	8f 90       	pop	r8
    5e26:	7f 90       	pop	r7
    5e28:	6f 90       	pop	r6
    5e2a:	5f 90       	pop	r5
    5e2c:	4f 90       	pop	r4
    5e2e:	3f 90       	pop	r3
    5e30:	2f 90       	pop	r2
    5e32:	08 95       	ret

00005e34 <__divmodhi4>:
    5e34:	97 fb       	bst	r25, 7
    5e36:	07 2e       	mov	r0, r23
    5e38:	16 f4       	brtc	.+4      	; 0x5e3e <__divmodhi4+0xa>
    5e3a:	00 94       	com	r0
    5e3c:	06 d0       	rcall	.+12     	; 0x5e4a <__divmodhi4_neg1>
    5e3e:	77 fd       	sbrc	r23, 7
    5e40:	08 d0       	rcall	.+16     	; 0x5e52 <__divmodhi4_neg2>
    5e42:	0b d0       	rcall	.+22     	; 0x5e5a <__udivmodhi4>
    5e44:	07 fc       	sbrc	r0, 7
    5e46:	05 d0       	rcall	.+10     	; 0x5e52 <__divmodhi4_neg2>
    5e48:	3e f4       	brtc	.+14     	; 0x5e58 <__divmodhi4_exit>

00005e4a <__divmodhi4_neg1>:
    5e4a:	90 95       	com	r25
    5e4c:	81 95       	neg	r24
    5e4e:	9f 4f       	sbci	r25, 0xFF	; 255
    5e50:	08 95       	ret

00005e52 <__divmodhi4_neg2>:
    5e52:	70 95       	com	r23
    5e54:	61 95       	neg	r22
    5e56:	7f 4f       	sbci	r23, 0xFF	; 255

00005e58 <__divmodhi4_exit>:
    5e58:	08 95       	ret

00005e5a <__udivmodhi4>:
    5e5a:	aa 1b       	sub	r26, r26
    5e5c:	bb 1b       	sub	r27, r27
    5e5e:	51 e1       	ldi	r21, 0x11	; 17
    5e60:	07 c0       	rjmp	.+14     	; 0x5e70 <__udivmodhi4_ep>

00005e62 <__udivmodhi4_loop>:
    5e62:	aa 1f       	adc	r26, r26
    5e64:	bb 1f       	adc	r27, r27
    5e66:	a6 17       	cp	r26, r22
    5e68:	b7 07       	cpc	r27, r23
    5e6a:	10 f0       	brcs	.+4      	; 0x5e70 <__udivmodhi4_ep>
    5e6c:	a6 1b       	sub	r26, r22
    5e6e:	b7 0b       	sbc	r27, r23

00005e70 <__udivmodhi4_ep>:
    5e70:	88 1f       	adc	r24, r24
    5e72:	99 1f       	adc	r25, r25
    5e74:	5a 95       	dec	r21
    5e76:	a9 f7       	brne	.-22     	; 0x5e62 <__udivmodhi4_loop>
    5e78:	80 95       	com	r24
    5e7a:	90 95       	com	r25
    5e7c:	bc 01       	movw	r22, r24
    5e7e:	cd 01       	movw	r24, r26
    5e80:	08 95       	ret

00005e82 <__ftoa_engine>:
    5e82:	28 30       	cpi	r18, 0x08	; 8
    5e84:	08 f0       	brcs	.+2      	; 0x5e88 <__ftoa_engine+0x6>
    5e86:	27 e0       	ldi	r18, 0x07	; 7
    5e88:	33 27       	eor	r19, r19
    5e8a:	da 01       	movw	r26, r20
    5e8c:	99 0f       	add	r25, r25
    5e8e:	31 1d       	adc	r19, r1
    5e90:	87 fd       	sbrc	r24, 7
    5e92:	91 60       	ori	r25, 0x01	; 1
    5e94:	00 96       	adiw	r24, 0x00	; 0
    5e96:	61 05       	cpc	r22, r1
    5e98:	71 05       	cpc	r23, r1
    5e9a:	39 f4       	brne	.+14     	; 0x5eaa <__ftoa_engine+0x28>
    5e9c:	32 60       	ori	r19, 0x02	; 2
    5e9e:	2e 5f       	subi	r18, 0xFE	; 254
    5ea0:	3d 93       	st	X+, r19
    5ea2:	30 e3       	ldi	r19, 0x30	; 48
    5ea4:	2a 95       	dec	r18
    5ea6:	e1 f7       	brne	.-8      	; 0x5ea0 <__ftoa_engine+0x1e>
    5ea8:	08 95       	ret
    5eaa:	9f 3f       	cpi	r25, 0xFF	; 255
    5eac:	30 f0       	brcs	.+12     	; 0x5eba <__ftoa_engine+0x38>
    5eae:	80 38       	cpi	r24, 0x80	; 128
    5eb0:	71 05       	cpc	r23, r1
    5eb2:	61 05       	cpc	r22, r1
    5eb4:	09 f0       	breq	.+2      	; 0x5eb8 <__ftoa_engine+0x36>
    5eb6:	3c 5f       	subi	r19, 0xFC	; 252
    5eb8:	3c 5f       	subi	r19, 0xFC	; 252
    5eba:	3d 93       	st	X+, r19
    5ebc:	91 30       	cpi	r25, 0x01	; 1
    5ebe:	08 f0       	brcs	.+2      	; 0x5ec2 <__ftoa_engine+0x40>
    5ec0:	80 68       	ori	r24, 0x80	; 128
    5ec2:	91 1d       	adc	r25, r1
    5ec4:	df 93       	push	r29
    5ec6:	cf 93       	push	r28
    5ec8:	1f 93       	push	r17
    5eca:	0f 93       	push	r16
    5ecc:	ff 92       	push	r15
    5ece:	ef 92       	push	r14
    5ed0:	19 2f       	mov	r17, r25
    5ed2:	98 7f       	andi	r25, 0xF8	; 248
    5ed4:	96 95       	lsr	r25
    5ed6:	e9 2f       	mov	r30, r25
    5ed8:	96 95       	lsr	r25
    5eda:	96 95       	lsr	r25
    5edc:	e9 0f       	add	r30, r25
    5ede:	ff 27       	eor	r31, r31
    5ee0:	e4 5f       	subi	r30, 0xF4	; 244
    5ee2:	fe 4f       	sbci	r31, 0xFE	; 254
    5ee4:	99 27       	eor	r25, r25
    5ee6:	33 27       	eor	r19, r19
    5ee8:	ee 24       	eor	r14, r14
    5eea:	ff 24       	eor	r15, r15
    5eec:	a7 01       	movw	r20, r14
    5eee:	e7 01       	movw	r28, r14
    5ef0:	05 90       	lpm	r0, Z+
    5ef2:	08 94       	sec
    5ef4:	07 94       	ror	r0
    5ef6:	28 f4       	brcc	.+10     	; 0x5f02 <__ftoa_engine+0x80>
    5ef8:	36 0f       	add	r19, r22
    5efa:	e7 1e       	adc	r14, r23
    5efc:	f8 1e       	adc	r15, r24
    5efe:	49 1f       	adc	r20, r25
    5f00:	51 1d       	adc	r21, r1
    5f02:	66 0f       	add	r22, r22
    5f04:	77 1f       	adc	r23, r23
    5f06:	88 1f       	adc	r24, r24
    5f08:	99 1f       	adc	r25, r25
    5f0a:	06 94       	lsr	r0
    5f0c:	a1 f7       	brne	.-24     	; 0x5ef6 <__ftoa_engine+0x74>
    5f0e:	05 90       	lpm	r0, Z+
    5f10:	07 94       	ror	r0
    5f12:	28 f4       	brcc	.+10     	; 0x5f1e <__ftoa_engine+0x9c>
    5f14:	e7 0e       	add	r14, r23
    5f16:	f8 1e       	adc	r15, r24
    5f18:	49 1f       	adc	r20, r25
    5f1a:	56 1f       	adc	r21, r22
    5f1c:	c1 1d       	adc	r28, r1
    5f1e:	77 0f       	add	r23, r23
    5f20:	88 1f       	adc	r24, r24
    5f22:	99 1f       	adc	r25, r25
    5f24:	66 1f       	adc	r22, r22
    5f26:	06 94       	lsr	r0
    5f28:	a1 f7       	brne	.-24     	; 0x5f12 <__ftoa_engine+0x90>
    5f2a:	05 90       	lpm	r0, Z+
    5f2c:	07 94       	ror	r0
    5f2e:	28 f4       	brcc	.+10     	; 0x5f3a <__ftoa_engine+0xb8>
    5f30:	f8 0e       	add	r15, r24
    5f32:	49 1f       	adc	r20, r25
    5f34:	56 1f       	adc	r21, r22
    5f36:	c7 1f       	adc	r28, r23
    5f38:	d1 1d       	adc	r29, r1
    5f3a:	88 0f       	add	r24, r24
    5f3c:	99 1f       	adc	r25, r25
    5f3e:	66 1f       	adc	r22, r22
    5f40:	77 1f       	adc	r23, r23
    5f42:	06 94       	lsr	r0
    5f44:	a1 f7       	brne	.-24     	; 0x5f2e <__ftoa_engine+0xac>
    5f46:	05 90       	lpm	r0, Z+
    5f48:	07 94       	ror	r0
    5f4a:	20 f4       	brcc	.+8      	; 0x5f54 <__ftoa_engine+0xd2>
    5f4c:	49 0f       	add	r20, r25
    5f4e:	56 1f       	adc	r21, r22
    5f50:	c7 1f       	adc	r28, r23
    5f52:	d8 1f       	adc	r29, r24
    5f54:	99 0f       	add	r25, r25
    5f56:	66 1f       	adc	r22, r22
    5f58:	77 1f       	adc	r23, r23
    5f5a:	88 1f       	adc	r24, r24
    5f5c:	06 94       	lsr	r0
    5f5e:	a9 f7       	brne	.-22     	; 0x5f4a <__ftoa_engine+0xc8>
    5f60:	84 91       	lpm	r24, Z
    5f62:	10 95       	com	r17
    5f64:	17 70       	andi	r17, 0x07	; 7
    5f66:	41 f0       	breq	.+16     	; 0x5f78 <__ftoa_engine+0xf6>
    5f68:	d6 95       	lsr	r29
    5f6a:	c7 95       	ror	r28
    5f6c:	57 95       	ror	r21
    5f6e:	47 95       	ror	r20
    5f70:	f7 94       	ror	r15
    5f72:	e7 94       	ror	r14
    5f74:	1a 95       	dec	r17
    5f76:	c1 f7       	brne	.-16     	; 0x5f68 <__ftoa_engine+0xe6>
    5f78:	e2 eb       	ldi	r30, 0xB2	; 178
    5f7a:	f0 e0       	ldi	r31, 0x00	; 0
    5f7c:	68 94       	set
    5f7e:	15 90       	lpm	r1, Z+
    5f80:	15 91       	lpm	r17, Z+
    5f82:	35 91       	lpm	r19, Z+
    5f84:	65 91       	lpm	r22, Z+
    5f86:	95 91       	lpm	r25, Z+
    5f88:	05 90       	lpm	r0, Z+
    5f8a:	7f e2       	ldi	r23, 0x2F	; 47
    5f8c:	73 95       	inc	r23
    5f8e:	e1 18       	sub	r14, r1
    5f90:	f1 0a       	sbc	r15, r17
    5f92:	43 0b       	sbc	r20, r19
    5f94:	56 0b       	sbc	r21, r22
    5f96:	c9 0b       	sbc	r28, r25
    5f98:	d0 09       	sbc	r29, r0
    5f9a:	c0 f7       	brcc	.-16     	; 0x5f8c <__ftoa_engine+0x10a>
    5f9c:	e1 0c       	add	r14, r1
    5f9e:	f1 1e       	adc	r15, r17
    5fa0:	43 1f       	adc	r20, r19
    5fa2:	56 1f       	adc	r21, r22
    5fa4:	c9 1f       	adc	r28, r25
    5fa6:	d0 1d       	adc	r29, r0
    5fa8:	7e f4       	brtc	.+30     	; 0x5fc8 <__ftoa_engine+0x146>
    5faa:	70 33       	cpi	r23, 0x30	; 48
    5fac:	11 f4       	brne	.+4      	; 0x5fb2 <__ftoa_engine+0x130>
    5fae:	8a 95       	dec	r24
    5fb0:	e6 cf       	rjmp	.-52     	; 0x5f7e <__ftoa_engine+0xfc>
    5fb2:	e8 94       	clt
    5fb4:	01 50       	subi	r16, 0x01	; 1
    5fb6:	30 f0       	brcs	.+12     	; 0x5fc4 <__ftoa_engine+0x142>
    5fb8:	08 0f       	add	r16, r24
    5fba:	0a f4       	brpl	.+2      	; 0x5fbe <__ftoa_engine+0x13c>
    5fbc:	00 27       	eor	r16, r16
    5fbe:	02 17       	cp	r16, r18
    5fc0:	08 f4       	brcc	.+2      	; 0x5fc4 <__ftoa_engine+0x142>
    5fc2:	20 2f       	mov	r18, r16
    5fc4:	23 95       	inc	r18
    5fc6:	02 2f       	mov	r16, r18
    5fc8:	7a 33       	cpi	r23, 0x3A	; 58
    5fca:	28 f0       	brcs	.+10     	; 0x5fd6 <__ftoa_engine+0x154>
    5fcc:	79 e3       	ldi	r23, 0x39	; 57
    5fce:	7d 93       	st	X+, r23
    5fd0:	2a 95       	dec	r18
    5fd2:	e9 f7       	brne	.-6      	; 0x5fce <__ftoa_engine+0x14c>
    5fd4:	10 c0       	rjmp	.+32     	; 0x5ff6 <__ftoa_engine+0x174>
    5fd6:	7d 93       	st	X+, r23
    5fd8:	2a 95       	dec	r18
    5fda:	89 f6       	brne	.-94     	; 0x5f7e <__ftoa_engine+0xfc>
    5fdc:	06 94       	lsr	r0
    5fde:	97 95       	ror	r25
    5fe0:	67 95       	ror	r22
    5fe2:	37 95       	ror	r19
    5fe4:	17 95       	ror	r17
    5fe6:	17 94       	ror	r1
    5fe8:	e1 18       	sub	r14, r1
    5fea:	f1 0a       	sbc	r15, r17
    5fec:	43 0b       	sbc	r20, r19
    5fee:	56 0b       	sbc	r21, r22
    5ff0:	c9 0b       	sbc	r28, r25
    5ff2:	d0 09       	sbc	r29, r0
    5ff4:	98 f0       	brcs	.+38     	; 0x601c <__ftoa_engine+0x19a>
    5ff6:	23 95       	inc	r18
    5ff8:	7e 91       	ld	r23, -X
    5ffa:	73 95       	inc	r23
    5ffc:	7a 33       	cpi	r23, 0x3A	; 58
    5ffe:	08 f0       	brcs	.+2      	; 0x6002 <__ftoa_engine+0x180>
    6000:	70 e3       	ldi	r23, 0x30	; 48
    6002:	7c 93       	st	X, r23
    6004:	20 13       	cpse	r18, r16
    6006:	b8 f7       	brcc	.-18     	; 0x5ff6 <__ftoa_engine+0x174>
    6008:	7e 91       	ld	r23, -X
    600a:	70 61       	ori	r23, 0x10	; 16
    600c:	7d 93       	st	X+, r23
    600e:	30 f0       	brcs	.+12     	; 0x601c <__ftoa_engine+0x19a>
    6010:	83 95       	inc	r24
    6012:	71 e3       	ldi	r23, 0x31	; 49
    6014:	7d 93       	st	X+, r23
    6016:	70 e3       	ldi	r23, 0x30	; 48
    6018:	2a 95       	dec	r18
    601a:	e1 f7       	brne	.-8      	; 0x6014 <__ftoa_engine+0x192>
    601c:	11 24       	eor	r1, r1
    601e:	ef 90       	pop	r14
    6020:	ff 90       	pop	r15
    6022:	0f 91       	pop	r16
    6024:	1f 91       	pop	r17
    6026:	cf 91       	pop	r28
    6028:	df 91       	pop	r29
    602a:	99 27       	eor	r25, r25
    602c:	87 fd       	sbrc	r24, 7
    602e:	90 95       	com	r25
    6030:	08 95       	ret

00006032 <strnlen_P>:
    6032:	fc 01       	movw	r30, r24
    6034:	05 90       	lpm	r0, Z+
    6036:	61 50       	subi	r22, 0x01	; 1
    6038:	70 40       	sbci	r23, 0x00	; 0
    603a:	01 10       	cpse	r0, r1
    603c:	d8 f7       	brcc	.-10     	; 0x6034 <strnlen_P+0x2>
    603e:	80 95       	com	r24
    6040:	90 95       	com	r25
    6042:	8e 0f       	add	r24, r30
    6044:	9f 1f       	adc	r25, r31
    6046:	08 95       	ret

00006048 <strcpy>:
    6048:	fb 01       	movw	r30, r22
    604a:	dc 01       	movw	r26, r24
    604c:	01 90       	ld	r0, Z+
    604e:	0d 92       	st	X+, r0
    6050:	00 20       	and	r0, r0
    6052:	e1 f7       	brne	.-8      	; 0x604c <strcpy+0x4>
    6054:	08 95       	ret

00006056 <strnlen>:
    6056:	fc 01       	movw	r30, r24
    6058:	61 50       	subi	r22, 0x01	; 1
    605a:	70 40       	sbci	r23, 0x00	; 0
    605c:	01 90       	ld	r0, Z+
    605e:	01 10       	cpse	r0, r1
    6060:	d8 f7       	brcc	.-10     	; 0x6058 <strnlen+0x2>
    6062:	80 95       	com	r24
    6064:	90 95       	com	r25
    6066:	8e 0f       	add	r24, r30
    6068:	9f 1f       	adc	r25, r31
    606a:	08 95       	ret

0000606c <__itoa_ncheck>:
    606c:	bb 27       	eor	r27, r27
    606e:	4a 30       	cpi	r20, 0x0A	; 10
    6070:	31 f4       	brne	.+12     	; 0x607e <__itoa_ncheck+0x12>
    6072:	99 23       	and	r25, r25
    6074:	22 f4       	brpl	.+8      	; 0x607e <__itoa_ncheck+0x12>
    6076:	bd e2       	ldi	r27, 0x2D	; 45
    6078:	90 95       	com	r25
    607a:	81 95       	neg	r24
    607c:	9f 4f       	sbci	r25, 0xFF	; 255
    607e:	01 c0       	rjmp	.+2      	; 0x6082 <__utoa_common>

00006080 <__utoa_ncheck>:
    6080:	bb 27       	eor	r27, r27

00006082 <__utoa_common>:
    6082:	fb 01       	movw	r30, r22
    6084:	55 27       	eor	r21, r21
    6086:	aa 27       	eor	r26, r26
    6088:	88 0f       	add	r24, r24
    608a:	99 1f       	adc	r25, r25
    608c:	aa 1f       	adc	r26, r26
    608e:	a4 17       	cp	r26, r20
    6090:	10 f0       	brcs	.+4      	; 0x6096 <__utoa_common+0x14>
    6092:	a4 1b       	sub	r26, r20
    6094:	83 95       	inc	r24
    6096:	50 51       	subi	r21, 0x10	; 16
    6098:	b9 f7       	brne	.-18     	; 0x6088 <__utoa_common+0x6>
    609a:	a0 5d       	subi	r26, 0xD0	; 208
    609c:	aa 33       	cpi	r26, 0x3A	; 58
    609e:	08 f0       	brcs	.+2      	; 0x60a2 <__utoa_common+0x20>
    60a0:	a9 5d       	subi	r26, 0xD9	; 217
    60a2:	a1 93       	st	Z+, r26
    60a4:	00 97       	sbiw	r24, 0x00	; 0
    60a6:	79 f7       	brne	.-34     	; 0x6086 <__utoa_common+0x4>
    60a8:	b1 11       	cpse	r27, r1
    60aa:	b1 93       	st	Z+, r27
    60ac:	11 92       	st	Z+, r1
    60ae:	cb 01       	movw	r24, r22
    60b0:	c8 c0       	rjmp	.+400    	; 0x6242 <strrev>

000060b2 <fputc>:
    60b2:	0f 93       	push	r16
    60b4:	1f 93       	push	r17
    60b6:	cf 93       	push	r28
    60b8:	df 93       	push	r29
    60ba:	fb 01       	movw	r30, r22
    60bc:	23 81       	ldd	r18, Z+3	; 0x03
    60be:	21 fd       	sbrc	r18, 1
    60c0:	03 c0       	rjmp	.+6      	; 0x60c8 <fputc+0x16>
    60c2:	8f ef       	ldi	r24, 0xFF	; 255
    60c4:	9f ef       	ldi	r25, 0xFF	; 255
    60c6:	2c c0       	rjmp	.+88     	; 0x6120 <fputc+0x6e>
    60c8:	22 ff       	sbrs	r18, 2
    60ca:	16 c0       	rjmp	.+44     	; 0x60f8 <fputc+0x46>
    60cc:	46 81       	ldd	r20, Z+6	; 0x06
    60ce:	57 81       	ldd	r21, Z+7	; 0x07
    60d0:	24 81       	ldd	r18, Z+4	; 0x04
    60d2:	35 81       	ldd	r19, Z+5	; 0x05
    60d4:	42 17       	cp	r20, r18
    60d6:	53 07       	cpc	r21, r19
    60d8:	44 f4       	brge	.+16     	; 0x60ea <fputc+0x38>
    60da:	a0 81       	ld	r26, Z
    60dc:	b1 81       	ldd	r27, Z+1	; 0x01
    60de:	9d 01       	movw	r18, r26
    60e0:	2f 5f       	subi	r18, 0xFF	; 255
    60e2:	3f 4f       	sbci	r19, 0xFF	; 255
    60e4:	31 83       	std	Z+1, r19	; 0x01
    60e6:	20 83       	st	Z, r18
    60e8:	8c 93       	st	X, r24
    60ea:	26 81       	ldd	r18, Z+6	; 0x06
    60ec:	37 81       	ldd	r19, Z+7	; 0x07
    60ee:	2f 5f       	subi	r18, 0xFF	; 255
    60f0:	3f 4f       	sbci	r19, 0xFF	; 255
    60f2:	37 83       	std	Z+7, r19	; 0x07
    60f4:	26 83       	std	Z+6, r18	; 0x06
    60f6:	14 c0       	rjmp	.+40     	; 0x6120 <fputc+0x6e>
    60f8:	8b 01       	movw	r16, r22
    60fa:	ec 01       	movw	r28, r24
    60fc:	fb 01       	movw	r30, r22
    60fe:	00 84       	ldd	r0, Z+8	; 0x08
    6100:	f1 85       	ldd	r31, Z+9	; 0x09
    6102:	e0 2d       	mov	r30, r0
    6104:	09 95       	icall
    6106:	89 2b       	or	r24, r25
    6108:	e1 f6       	brne	.-72     	; 0x60c2 <fputc+0x10>
    610a:	d8 01       	movw	r26, r16
    610c:	16 96       	adiw	r26, 0x06	; 6
    610e:	8d 91       	ld	r24, X+
    6110:	9c 91       	ld	r25, X
    6112:	17 97       	sbiw	r26, 0x07	; 7
    6114:	01 96       	adiw	r24, 0x01	; 1
    6116:	17 96       	adiw	r26, 0x07	; 7
    6118:	9c 93       	st	X, r25
    611a:	8e 93       	st	-X, r24
    611c:	16 97       	sbiw	r26, 0x06	; 6
    611e:	ce 01       	movw	r24, r28
    6120:	df 91       	pop	r29
    6122:	cf 91       	pop	r28
    6124:	1f 91       	pop	r17
    6126:	0f 91       	pop	r16
    6128:	08 95       	ret

0000612a <sprintf>:
    612a:	0f 93       	push	r16
    612c:	1f 93       	push	r17
    612e:	cf 93       	push	r28
    6130:	df 93       	push	r29
    6132:	cd b7       	in	r28, 0x3d	; 61
    6134:	de b7       	in	r29, 0x3e	; 62
    6136:	2e 97       	sbiw	r28, 0x0e	; 14
    6138:	0f b6       	in	r0, 0x3f	; 63
    613a:	f8 94       	cli
    613c:	de bf       	out	0x3e, r29	; 62
    613e:	0f be       	out	0x3f, r0	; 63
    6140:	cd bf       	out	0x3d, r28	; 61
    6142:	0d 89       	ldd	r16, Y+21	; 0x15
    6144:	1e 89       	ldd	r17, Y+22	; 0x16
    6146:	86 e0       	ldi	r24, 0x06	; 6
    6148:	8c 83       	std	Y+4, r24	; 0x04
    614a:	1a 83       	std	Y+2, r17	; 0x02
    614c:	09 83       	std	Y+1, r16	; 0x01
    614e:	8f ef       	ldi	r24, 0xFF	; 255
    6150:	9f e7       	ldi	r25, 0x7F	; 127
    6152:	9e 83       	std	Y+6, r25	; 0x06
    6154:	8d 83       	std	Y+5, r24	; 0x05
    6156:	ae 01       	movw	r20, r28
    6158:	47 5e       	subi	r20, 0xE7	; 231
    615a:	5f 4f       	sbci	r21, 0xFF	; 255
    615c:	6f 89       	ldd	r22, Y+23	; 0x17
    615e:	78 8d       	ldd	r23, Y+24	; 0x18
    6160:	ce 01       	movw	r24, r28
    6162:	01 96       	adiw	r24, 0x01	; 1
    6164:	de da       	rcall	.-2628   	; 0x5722 <vfprintf>
    6166:	ef 81       	ldd	r30, Y+7	; 0x07
    6168:	f8 85       	ldd	r31, Y+8	; 0x08
    616a:	e0 0f       	add	r30, r16
    616c:	f1 1f       	adc	r31, r17
    616e:	10 82       	st	Z, r1
    6170:	2e 96       	adiw	r28, 0x0e	; 14
    6172:	0f b6       	in	r0, 0x3f	; 63
    6174:	f8 94       	cli
    6176:	de bf       	out	0x3e, r29	; 62
    6178:	0f be       	out	0x3f, r0	; 63
    617a:	cd bf       	out	0x3d, r28	; 61
    617c:	df 91       	pop	r29
    617e:	cf 91       	pop	r28
    6180:	1f 91       	pop	r17
    6182:	0f 91       	pop	r16
    6184:	08 95       	ret

00006186 <__ultoa_invert>:
    6186:	fa 01       	movw	r30, r20
    6188:	aa 27       	eor	r26, r26
    618a:	28 30       	cpi	r18, 0x08	; 8
    618c:	51 f1       	breq	.+84     	; 0x61e2 <__ultoa_invert+0x5c>
    618e:	20 31       	cpi	r18, 0x10	; 16
    6190:	81 f1       	breq	.+96     	; 0x61f2 <__ultoa_invert+0x6c>
    6192:	e8 94       	clt
    6194:	6f 93       	push	r22
    6196:	6e 7f       	andi	r22, 0xFE	; 254
    6198:	6e 5f       	subi	r22, 0xFE	; 254
    619a:	7f 4f       	sbci	r23, 0xFF	; 255
    619c:	8f 4f       	sbci	r24, 0xFF	; 255
    619e:	9f 4f       	sbci	r25, 0xFF	; 255
    61a0:	af 4f       	sbci	r26, 0xFF	; 255
    61a2:	b1 e0       	ldi	r27, 0x01	; 1
    61a4:	3e d0       	rcall	.+124    	; 0x6222 <__ultoa_invert+0x9c>
    61a6:	b4 e0       	ldi	r27, 0x04	; 4
    61a8:	3c d0       	rcall	.+120    	; 0x6222 <__ultoa_invert+0x9c>
    61aa:	67 0f       	add	r22, r23
    61ac:	78 1f       	adc	r23, r24
    61ae:	89 1f       	adc	r24, r25
    61b0:	9a 1f       	adc	r25, r26
    61b2:	a1 1d       	adc	r26, r1
    61b4:	68 0f       	add	r22, r24
    61b6:	79 1f       	adc	r23, r25
    61b8:	8a 1f       	adc	r24, r26
    61ba:	91 1d       	adc	r25, r1
    61bc:	a1 1d       	adc	r26, r1
    61be:	6a 0f       	add	r22, r26
    61c0:	71 1d       	adc	r23, r1
    61c2:	81 1d       	adc	r24, r1
    61c4:	91 1d       	adc	r25, r1
    61c6:	a1 1d       	adc	r26, r1
    61c8:	20 d0       	rcall	.+64     	; 0x620a <__ultoa_invert+0x84>
    61ca:	09 f4       	brne	.+2      	; 0x61ce <__ultoa_invert+0x48>
    61cc:	68 94       	set
    61ce:	3f 91       	pop	r19
    61d0:	2a e0       	ldi	r18, 0x0A	; 10
    61d2:	26 9f       	mul	r18, r22
    61d4:	11 24       	eor	r1, r1
    61d6:	30 19       	sub	r19, r0
    61d8:	30 5d       	subi	r19, 0xD0	; 208
    61da:	31 93       	st	Z+, r19
    61dc:	de f6       	brtc	.-74     	; 0x6194 <__ultoa_invert+0xe>
    61de:	cf 01       	movw	r24, r30
    61e0:	08 95       	ret
    61e2:	46 2f       	mov	r20, r22
    61e4:	47 70       	andi	r20, 0x07	; 7
    61e6:	40 5d       	subi	r20, 0xD0	; 208
    61e8:	41 93       	st	Z+, r20
    61ea:	b3 e0       	ldi	r27, 0x03	; 3
    61ec:	0f d0       	rcall	.+30     	; 0x620c <__ultoa_invert+0x86>
    61ee:	c9 f7       	brne	.-14     	; 0x61e2 <__ultoa_invert+0x5c>
    61f0:	f6 cf       	rjmp	.-20     	; 0x61de <__ultoa_invert+0x58>
    61f2:	46 2f       	mov	r20, r22
    61f4:	4f 70       	andi	r20, 0x0F	; 15
    61f6:	40 5d       	subi	r20, 0xD0	; 208
    61f8:	4a 33       	cpi	r20, 0x3A	; 58
    61fa:	18 f0       	brcs	.+6      	; 0x6202 <__ultoa_invert+0x7c>
    61fc:	49 5d       	subi	r20, 0xD9	; 217
    61fe:	31 fd       	sbrc	r19, 1
    6200:	40 52       	subi	r20, 0x20	; 32
    6202:	41 93       	st	Z+, r20
    6204:	02 d0       	rcall	.+4      	; 0x620a <__ultoa_invert+0x84>
    6206:	a9 f7       	brne	.-22     	; 0x61f2 <__ultoa_invert+0x6c>
    6208:	ea cf       	rjmp	.-44     	; 0x61de <__ultoa_invert+0x58>
    620a:	b4 e0       	ldi	r27, 0x04	; 4
    620c:	a6 95       	lsr	r26
    620e:	97 95       	ror	r25
    6210:	87 95       	ror	r24
    6212:	77 95       	ror	r23
    6214:	67 95       	ror	r22
    6216:	ba 95       	dec	r27
    6218:	c9 f7       	brne	.-14     	; 0x620c <__ultoa_invert+0x86>
    621a:	00 97       	sbiw	r24, 0x00	; 0
    621c:	61 05       	cpc	r22, r1
    621e:	71 05       	cpc	r23, r1
    6220:	08 95       	ret
    6222:	9b 01       	movw	r18, r22
    6224:	ac 01       	movw	r20, r24
    6226:	0a 2e       	mov	r0, r26
    6228:	06 94       	lsr	r0
    622a:	57 95       	ror	r21
    622c:	47 95       	ror	r20
    622e:	37 95       	ror	r19
    6230:	27 95       	ror	r18
    6232:	ba 95       	dec	r27
    6234:	c9 f7       	brne	.-14     	; 0x6228 <__ultoa_invert+0xa2>
    6236:	62 0f       	add	r22, r18
    6238:	73 1f       	adc	r23, r19
    623a:	84 1f       	adc	r24, r20
    623c:	95 1f       	adc	r25, r21
    623e:	a0 1d       	adc	r26, r0
    6240:	08 95       	ret

00006242 <strrev>:
    6242:	dc 01       	movw	r26, r24
    6244:	fc 01       	movw	r30, r24
    6246:	67 2f       	mov	r22, r23
    6248:	71 91       	ld	r23, Z+
    624a:	77 23       	and	r23, r23
    624c:	e1 f7       	brne	.-8      	; 0x6246 <strrev+0x4>
    624e:	32 97       	sbiw	r30, 0x02	; 2
    6250:	04 c0       	rjmp	.+8      	; 0x625a <strrev+0x18>
    6252:	7c 91       	ld	r23, X
    6254:	6d 93       	st	X+, r22
    6256:	70 83       	st	Z, r23
    6258:	62 91       	ld	r22, -Z
    625a:	ae 17       	cp	r26, r30
    625c:	bf 07       	cpc	r27, r31
    625e:	c8 f3       	brcs	.-14     	; 0x6252 <strrev+0x10>
    6260:	08 95       	ret

00006262 <eeprom_read_byte>:
    6262:	e1 99       	sbic	0x1c, 1	; 28
    6264:	fe cf       	rjmp	.-4      	; 0x6262 <eeprom_read_byte>
    6266:	9f bb       	out	0x1f, r25	; 31
    6268:	8e bb       	out	0x1e, r24	; 30
    626a:	e0 9a       	sbi	0x1c, 0	; 28
    626c:	99 27       	eor	r25, r25
    626e:	8d b3       	in	r24, 0x1d	; 29
    6270:	08 95       	ret

00006272 <eeprom_write_byte>:
    6272:	26 2f       	mov	r18, r22

00006274 <eeprom_write_r18>:
    6274:	e1 99       	sbic	0x1c, 1	; 28
    6276:	fe cf       	rjmp	.-4      	; 0x6274 <eeprom_write_r18>
    6278:	9f bb       	out	0x1f, r25	; 31
    627a:	8e bb       	out	0x1e, r24	; 30
    627c:	2d bb       	out	0x1d, r18	; 29
    627e:	0f b6       	in	r0, 0x3f	; 63
    6280:	f8 94       	cli
    6282:	e2 9a       	sbi	0x1c, 2	; 28
    6284:	e1 9a       	sbi	0x1c, 1	; 28
    6286:	0f be       	out	0x3f, r0	; 63
    6288:	01 96       	adiw	r24, 0x01	; 1
    628a:	08 95       	ret

0000628c <_exit>:
    628c:	f8 94       	cli

0000628e <__stop_program>:
    628e:	ff cf       	rjmp	.-2      	; 0x628e <__stop_program>
